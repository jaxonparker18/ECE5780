ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text._Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	_Error_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_Error_Handler:
  26              	.LFB42:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   * Jaxon Parker
   4:Src/main.c    ****   * U1289670
   5:Src/main.c    ****   *
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * File Name          : main.c
   8:Src/main.c    ****   * Description        : Main program body
   9:Src/main.c    ****   ******************************************************************************
  10:Src/main.c    ****   ** This notice applies to any and all portions of this file
  11:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
  12:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  13:Src/main.c    ****   * inserted by the user or by software development tools
  14:Src/main.c    ****   * are owned by their respective copyright owners.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  19:Src/main.c    ****   * are permitted provided that the following conditions are met:
  20:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  21:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  22:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  24:Src/main.c    ****   *      and/or other materials provided with the distribution.
  25:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  26:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  27:Src/main.c    ****   *      without specific prior written permission.
  28:Src/main.c    ****   *
  29:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  32:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 2


  33:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  35:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  37:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  38:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  39:Src/main.c    ****   *
  40:Src/main.c    ****   ******************************************************************************
  41:Src/main.c    ****   */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f0xx_hal.h"
  46:Src/main.c    **** void _Error_Handler(char * file, int line);
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** void SystemClock_Config(void);
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** int main(void)
  72:Src/main.c    **** {
  73:Src/main.c    ****   HAL_Init();               // Reset of all peripherals, init the Flash and Systick
  74:Src/main.c    ****   SystemClock_Config();     // Configure the system clock
  75:Src/main.c    **** 
  76:Src/main.c    ****   // Enable GPIOB and GPIOC clocks in the RCC
  77:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
  78:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
  79:Src/main.c    **** 
  80:Src/main.c    ****   // Set up LEDs and C5
  81:Src/main.c    ****   GPIOC->MODER |= (1 << 18) | (1 << 16) | (1 << 14) | (1 << 12) | (1 << 0);    // Set PC9-PC6 and P
  82:Src/main.c    ****   GPIOC->BSRR = (1 << 0);    // Set PC0 (CS) line high, selects I2C mode on gyro
  83:Src/main.c    **** 
  84:Src/main.c    ****   GPIOB->MODER  |= (1 << 23) | (1 << 27) | (1 << 28);  // Set PB11 & PB13 to AF Mode, PB14 to ouput
  85:Src/main.c    ****   GPIOB->OTYPER |= (1 << 11) | (1 << 13);              // Set PB11 & PB13 to open-drain output type
  86:Src/main.c    ****   GPIOB->PUPDR  |= (1 << 22) | (1 << 26);              // Set internal pull-up resistors on PB 11 &
  87:Src/main.c    ****   GPIOB->AFR[1] = 0x00501000;                          // Set AF1 on PB11(I2C2_SDA) & AF5 on PB13(I
  88:Src/main.c    ****   GPIOB->BSRR = (1 << 14);                             // Set PB14 (address select) line high
  89:Src/main.c    **** 
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 3


  90:Src/main.c    ****   // Enable I2C2 peripheral in the RCC
  91:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_I2C2EN;
  92:Src/main.c    **** 
  93:Src/main.c    ****   // Configure I2C2 parameters for 100 kHz standard-mode
  94:Src/main.c    ****   I2C2->TIMINGR = (1 << 28) | (0x13 << 0) | (0xF << 8) | (0x2 << 16) | (0x4 << 20);    // From tabl
  95:Src/main.c    **** 
  96:Src/main.c    ****   // Enable the I2C2 peripheral using the PE bit in the CR1 register
  97:Src/main.c    ****   I2C2->CR1 |= I2C_CR1_PE;
  98:Src/main.c    **** 
  99:Src/main.c    ****   // ----------------------------------------------------------------------------------------------
 100:Src/main.c    ****   // 5.4 Reading the Register
 101:Src/main.c    ****   // ----------------------------------------------------------------------------------------------
 102:Src/main.c    **** 
 103:Src/main.c    ****   // Set the transaction parameters in the CR2 register
 104:Src/main.c    ****   // For write operation (sending register address)
 105:Src/main.c    ****   I2C2->CR2 = (0x69 << 1) | (1 << 16);
 106:Src/main.c    **** 
 107:Src/main.c    ****   // Set the START bit to begin the address frame
 108:Src/main.c    ****   I2C2->CR2 |= I2C_CR2_START;
 109:Src/main.c    **** 
 110:Src/main.c    ****   // Wait until either TXIS or NACKF flags are set
 111:Src/main.c    ****   while (!(I2C2->ISR & (I2C_ISR_TXIS | I2C_ISR_NACKF)))
 112:Src/main.c    ****   {
 113:Src/main.c    ****     GPIOC->BSRR |= (1 << 6); // Set PC6 high to turn on the red LED
 114:Src/main.c    ****     // Handle the error
 115:Src/main.c    ****   }
 116:Src/main.c    **** 
 117:Src/main.c    ****   // Check if NACKF flag is set (slave did not respond)
 118:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 119:Src/main.c    ****   {
 120:Src/main.c    ****     GPIOC->BSRR |= (1 << 6); // Set PC6 high to turn on the red LED
 121:Src/main.c    ****     // Handle the error
 122:Src/main.c    ****   }
 123:Src/main.c    **** 
 124:Src/main.c    ****   // Write the address of the "WHO_AM_I" register into the I2C transmit register (TXDR)
 125:Src/main.c    ****   I2C2->TXDR |= 0x0F;
 126:Src/main.c    **** 
 127:Src/main.c    ****   // Wait until TC (Transfer Complete) flag is set
 128:Src/main.c    ****   while (!(I2C2->ISR & (I2C_ISR_TC | I2C_ISR_NACKF)))
 129:Src/main.c    ****   {
 130:Src/main.c    ****     GPIOC->BSRR |= (1 << 6); // Set PC6 high to turn on the red LED
 131:Src/main.c    ****     // Handle the error
 132:Src/main.c    ****   }
 133:Src/main.c    ****     
 134:Src/main.c    ****   // Check if NACKF flag is set (slave did not respond)
 135:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 136:Src/main.c    ****   {
 137:Src/main.c    ****     GPIOC->BSRR |= (1 << 6); // Set PC6 high to turn on the red LED
 138:Src/main.c    ****     // Handle the error
 139:Src/main.c    ****   }
 140:Src/main.c    **** 
 141:Src/main.c    ****   // Reload CR2 register with the same parameters but set RD_WRN for read operation
 142:Src/main.c    ****   I2C2->CR2 = (0x69 << 1) | (1 << 16) | I2C_CR2_RD_WRN | I2C_CR2_START;
 143:Src/main.c    **** 
 144:Src/main.c    ****   // Wait until either RXNE or NACKF flags are set
 145:Src/main.c    ****   while (!(I2C2->ISR & (I2C_ISR_RXNE | I2C_ISR_NACKF)))
 146:Src/main.c    ****   {
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 4


 147:Src/main.c    ****     GPIOC->BSRR |= (1 << 6); // Set PC6 high to turn on the red LED
 148:Src/main.c    ****     // Handle the error
 149:Src/main.c    ****   }
 150:Src/main.c    **** 
 151:Src/main.c    ****   // Check if NACKF flag is set (slave did not respond)
 152:Src/main.c    ****   if (I2C2->ISR & I2C_ISR_NACKF)
 153:Src/main.c    ****   {
 154:Src/main.c    ****     GPIOC->BSRR |= (1 << 6); // Set PC6 high to turn on the red LED
 155:Src/main.c    ****     // Handle the error
 156:Src/main.c    ****   }
 157:Src/main.c    **** 
 158:Src/main.c    ****   // Wait until TC (Transfer Complete) flag is set
 159:Src/main.c    ****   while (!(I2C2->ISR & (I2C_ISR_TC | I2C_ISR_NACKF)))
 160:Src/main.c    ****   {
 161:Src/main.c    ****     GPIOC->BSRR |= (1 << 6); // Set PC6 high to turn on the red LED
 162:Src/main.c    ****     // Handle the error
 163:Src/main.c    ****   }
 164:Src/main.c    **** 
 165:Src/main.c    ****   // Set the STOP bit in the CR2 register to release the I2C bus
 166:Src/main.c    ****   I2C2->CR2 |= I2C_CR2_STOP;
 167:Src/main.c    **** 
 168:Src/main.c    ****   // Check the contents of the RXDR register to see if it matches the expected value (0xD4)
 169:Src/main.c    ****   if (I2C2->RXDR != 0xD3) // I2C2->RXDR == 0x69
 170:Src/main.c    ****   {
 171:Src/main.c    ****     GPIOC->BSRR |= (1 << 6); // Set PC6 high to turn on the red LED
 172:Src/main.c    ****     // Handle the error
 173:Src/main.c    ****   }
 174:Src/main.c    **** 
 175:Src/main.c    ****   GPIOC->BSRR |= (1 << (22)); // Clear PC6 to turn off the red LED
 176:Src/main.c    **** 
 177:Src/main.c    ****   // Shows it made it through while and if statements
 178:Src/main.c    ****   GPIOC->BSRR |= (1 << 7); // Set PC7 to turn on the blue LED
 179:Src/main.c    **** 
 180:Src/main.c    **** }
 181:Src/main.c    **** 
 182:Src/main.c    **** /** System Clock Configuration
 183:Src/main.c    **** */
 184:Src/main.c    **** void SystemClock_Config(void)
 185:Src/main.c    **** {
 186:Src/main.c    **** 
 187:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 188:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 189:Src/main.c    **** 
 190:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 191:Src/main.c    ****     */
 192:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 193:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 194:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 195:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 196:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 197:Src/main.c    ****   {
 198:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 199:Src/main.c    ****   }
 200:Src/main.c    **** 
 201:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 202:Src/main.c    ****     */
 203:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 5


 204:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 205:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 206:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 207:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 208:Src/main.c    **** 
 209:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 210:Src/main.c    ****   {
 211:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 212:Src/main.c    ****   }
 213:Src/main.c    **** 
 214:Src/main.c    ****     /**Configure the Systick interrupt time
 215:Src/main.c    ****     */
 216:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 217:Src/main.c    **** 
 218:Src/main.c    ****     /**Configure the Systick
 219:Src/main.c    ****     */
 220:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 221:Src/main.c    **** 
 222:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 223:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 224:Src/main.c    **** }
 225:Src/main.c    **** 
 226:Src/main.c    **** /* USER CODE BEGIN 4 */
 227:Src/main.c    **** 
 228:Src/main.c    **** /* USER CODE END 4 */
 229:Src/main.c    **** 
 230:Src/main.c    **** /**
 231:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 232:Src/main.c    ****   * @param  None
 233:Src/main.c    ****   * @retval None
 234:Src/main.c    ****   */
 235:Src/main.c    **** void _Error_Handler(char * file, int line)
 236:Src/main.c    **** {
  27              		.loc 1 236 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
 237:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 238:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 239:Src/main.c    ****   while(1)
  35              		.loc 1 239 3 view .LVU1
 240:Src/main.c    ****   {
 241:Src/main.c    ****   }
  36              		.loc 1 241 3 view .LVU2
 239:Src/main.c    ****   {
  37              		.loc 1 239 8 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE42:
  42              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
  43              		.align	2
  44              	.LC0:
  45 0000 5372632F 		.ascii	"Src/main.c\000"
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 6


  45      6D61696E 
  45      2E6300
  46              		.global	__aeabi_uidiv
  47              		.section	.text.SystemClock_Config,"ax",%progbits
  48              		.align	1
  49              		.global	SystemClock_Config
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  54              	SystemClock_Config:
  55              	.LFB41:
 185:Src/main.c    **** 
  56              		.loc 1 185 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 72
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 00B5     		push	{lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 14, -4
  64 0002 93B0     		sub	sp, sp, #76
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 80
 187:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  67              		.loc 1 187 3 view .LVU5
 188:Src/main.c    **** 
  68              		.loc 1 188 3 view .LVU6
 192:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  69              		.loc 1 192 3 view .LVU7
 192:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  70              		.loc 1 192 36 is_stmt 0 view .LVU8
  71 0004 0223     		movs	r3, #2
  72 0006 0593     		str	r3, [sp, #20]
 193:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  73              		.loc 1 193 3 is_stmt 1 view .LVU9
 193:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  74              		.loc 1 193 30 is_stmt 0 view .LVU10
  75 0008 013B     		subs	r3, r3, #1
  76 000a 0893     		str	r3, [sp, #32]
 194:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  77              		.loc 1 194 3 is_stmt 1 view .LVU11
 194:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  78              		.loc 1 194 41 is_stmt 0 view .LVU12
  79 000c 0F33     		adds	r3, r3, #15
  80 000e 0993     		str	r3, [sp, #36]
 195:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  81              		.loc 1 195 3 is_stmt 1 view .LVU13
 195:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  82              		.loc 1 195 34 is_stmt 0 view .LVU14
  83 0010 0023     		movs	r3, #0
  84 0012 0E93     		str	r3, [sp, #56]
 196:Src/main.c    ****   {
  85              		.loc 1 196 3 is_stmt 1 view .LVU15
 196:Src/main.c    ****   {
  86              		.loc 1 196 7 is_stmt 0 view .LVU16
  87 0014 05A8     		add	r0, sp, #20
  88 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 7


  89              	.LVL1:
 196:Src/main.c    ****   {
  90              		.loc 1 196 6 discriminator 1 view .LVU17
  91 001a 0028     		cmp	r0, #0
  92 001c 1ED1     		bne	.L6
 203:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  93              		.loc 1 203 3 is_stmt 1 view .LVU18
 203:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  94              		.loc 1 203 31 is_stmt 0 view .LVU19
  95 001e 0723     		movs	r3, #7
  96 0020 0193     		str	r3, [sp, #4]
 205:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  97              		.loc 1 205 3 is_stmt 1 view .LVU20
 205:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 205 34 is_stmt 0 view .LVU21
  99 0022 0023     		movs	r3, #0
 100 0024 0293     		str	r3, [sp, #8]
 206:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 101              		.loc 1 206 3 is_stmt 1 view .LVU22
 206:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 206 35 is_stmt 0 view .LVU23
 103 0026 0393     		str	r3, [sp, #12]
 207:Src/main.c    **** 
 104              		.loc 1 207 3 is_stmt 1 view .LVU24
 207:Src/main.c    **** 
 105              		.loc 1 207 36 is_stmt 0 view .LVU25
 106 0028 0493     		str	r3, [sp, #16]
 209:Src/main.c    ****   {
 107              		.loc 1 209 3 is_stmt 1 view .LVU26
 209:Src/main.c    ****   {
 108              		.loc 1 209 7 is_stmt 0 view .LVU27
 109 002a 0021     		movs	r1, #0
 110 002c 01A8     		add	r0, sp, #4
 111 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 112              	.LVL2:
 209:Src/main.c    ****   {
 113              		.loc 1 209 6 discriminator 1 view .LVU28
 114 0032 0028     		cmp	r0, #0
 115 0034 16D1     		bne	.L7
 216:Src/main.c    **** 
 116              		.loc 1 216 3 is_stmt 1 view .LVU29
 216:Src/main.c    **** 
 117              		.loc 1 216 22 is_stmt 0 view .LVU30
 118 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 119              	.LVL3:
 216:Src/main.c    **** 
 120              		.loc 1 216 3 discriminator 1 view .LVU31
 121 003a FA21     		movs	r1, #250
 122 003c 8900     		lsls	r1, r1, #2
 123 003e FFF7FEFF 		bl	__aeabi_uidiv
 124              	.LVL4:
 125 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 126              	.LVL5:
 220:Src/main.c    **** 
 127              		.loc 1 220 3 is_stmt 1 view .LVU32
 128 0046 0420     		movs	r0, #4
 129 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 8


 130              	.LVL6:
 223:Src/main.c    **** }
 131              		.loc 1 223 3 view .LVU33
 132 004c 0120     		movs	r0, #1
 133 004e 0022     		movs	r2, #0
 134 0050 0021     		movs	r1, #0
 135 0052 4042     		rsbs	r0, r0, #0
 136 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 137              	.LVL7:
 224:Src/main.c    **** 
 138              		.loc 1 224 1 is_stmt 0 view .LVU34
 139 0058 13B0     		add	sp, sp, #76
 140              		@ sp needed
 141 005a 00BD     		pop	{pc}
 142              	.L6:
 198:Src/main.c    ****   }
 143              		.loc 1 198 5 is_stmt 1 view .LVU35
 144 005c 0348     		ldr	r0, .L8
 145 005e C621     		movs	r1, #198
 146 0060 FFF7FEFF 		bl	_Error_Handler
 147              	.LVL8:
 148              	.L7:
 211:Src/main.c    ****   }
 149              		.loc 1 211 5 view .LVU36
 150 0064 0148     		ldr	r0, .L8
 151 0066 D321     		movs	r1, #211
 152 0068 FFF7FEFF 		bl	_Error_Handler
 153              	.LVL9:
 154              	.L9:
 155              		.align	2
 156              	.L8:
 157 006c 00000000 		.word	.LC0
 158              		.cfi_endproc
 159              	.LFE41:
 161              		.section	.text.main,"ax",%progbits
 162              		.align	1
 163              		.global	main
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 168              	main:
 169              	.LFB40:
  72:Src/main.c    ****   HAL_Init();               // Reset of all peripherals, init the Flash and Systick
 170              		.loc 1 72 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 10B5     		push	{r4, lr}
 175              	.LCFI2:
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 4, -8
 178              		.cfi_offset 14, -4
  73:Src/main.c    ****   SystemClock_Config();     // Configure the system clock
 179              		.loc 1 73 3 view .LVU38
 180 0002 FFF7FEFF 		bl	HAL_Init
 181              	.LVL10:
  74:Src/main.c    **** 
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 9


 182              		.loc 1 74 3 view .LVU39
 183 0006 FFF7FEFF 		bl	SystemClock_Config
 184              	.LVL11:
  77:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 185              		.loc 1 77 3 view .LVU40
  77:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 186              		.loc 1 77 6 is_stmt 0 view .LVU41
 187 000a 514A     		ldr	r2, .L26
 188 000c 5169     		ldr	r1, [r2, #20]
  77:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 189              		.loc 1 77 15 view .LVU42
 190 000e 8023     		movs	r3, #128
 191 0010 DB02     		lsls	r3, r3, #11
 192 0012 0B43     		orrs	r3, r1
 193 0014 5361     		str	r3, [r2, #20]
  78:Src/main.c    **** 
 194              		.loc 1 78 3 is_stmt 1 view .LVU43
  78:Src/main.c    **** 
 195              		.loc 1 78 6 is_stmt 0 view .LVU44
 196 0016 5169     		ldr	r1, [r2, #20]
  78:Src/main.c    **** 
 197              		.loc 1 78 15 view .LVU45
 198 0018 8023     		movs	r3, #128
 199 001a 1B03     		lsls	r3, r3, #12
 200 001c 0B43     		orrs	r3, r1
 201 001e 5361     		str	r3, [r2, #20]
  81:Src/main.c    ****   GPIOC->BSRR = (1 << 0);    // Set PC0 (CS) line high, selects I2C mode on gyro
 202              		.loc 1 81 3 is_stmt 1 view .LVU46
  81:Src/main.c    ****   GPIOC->BSRR = (1 << 0);    // Set PC0 (CS) line high, selects I2C mode on gyro
 203              		.loc 1 81 8 is_stmt 0 view .LVU47
 204 0020 4C4B     		ldr	r3, .L26+4
 205 0022 1868     		ldr	r0, [r3]
  81:Src/main.c    ****   GPIOC->BSRR = (1 << 0);    // Set PC0 (CS) line high, selects I2C mode on gyro
 206              		.loc 1 81 16 view .LVU48
 207 0024 4C49     		ldr	r1, .L26+8
 208 0026 0143     		orrs	r1, r0
 209 0028 1960     		str	r1, [r3]
  82:Src/main.c    **** 
 210              		.loc 1 82 3 is_stmt 1 view .LVU49
  82:Src/main.c    **** 
 211              		.loc 1 82 15 is_stmt 0 view .LVU50
 212 002a 0120     		movs	r0, #1
 213 002c 9861     		str	r0, [r3, #24]
  84:Src/main.c    ****   GPIOB->OTYPER |= (1 << 11) | (1 << 13);              // Set PB11 & PB13 to open-drain output type
 214              		.loc 1 84 3 is_stmt 1 view .LVU51
  84:Src/main.c    ****   GPIOB->OTYPER |= (1 << 11) | (1 << 13);              // Set PB11 & PB13 to open-drain output type
 215              		.loc 1 84 8 is_stmt 0 view .LVU52
 216 002e 4B4B     		ldr	r3, .L26+12
 217 0030 1C68     		ldr	r4, [r3]
  84:Src/main.c    ****   GPIOB->OTYPER |= (1 << 11) | (1 << 13);              // Set PB11 & PB13 to open-drain output type
 218              		.loc 1 84 17 view .LVU53
 219 0032 C421     		movs	r1, #196
 220 0034 4905     		lsls	r1, r1, #21
 221 0036 2143     		orrs	r1, r4
 222 0038 1960     		str	r1, [r3]
  85:Src/main.c    ****   GPIOB->PUPDR  |= (1 << 22) | (1 << 26);              // Set internal pull-up resistors on PB 11 &
 223              		.loc 1 85 3 is_stmt 1 view .LVU54
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 10


  85:Src/main.c    ****   GPIOB->PUPDR  |= (1 << 22) | (1 << 26);              // Set internal pull-up resistors on PB 11 &
 224              		.loc 1 85 8 is_stmt 0 view .LVU55
 225 003a 5C68     		ldr	r4, [r3, #4]
  85:Src/main.c    ****   GPIOB->PUPDR  |= (1 << 22) | (1 << 26);              // Set internal pull-up resistors on PB 11 &
 226              		.loc 1 85 17 view .LVU56
 227 003c A021     		movs	r1, #160
 228 003e 8901     		lsls	r1, r1, #6
 229 0040 2143     		orrs	r1, r4
 230 0042 5960     		str	r1, [r3, #4]
  86:Src/main.c    ****   GPIOB->AFR[1] = 0x00501000;                          // Set AF1 on PB11(I2C2_SDA) & AF5 on PB13(I
 231              		.loc 1 86 3 is_stmt 1 view .LVU57
  86:Src/main.c    ****   GPIOB->AFR[1] = 0x00501000;                          // Set AF1 on PB11(I2C2_SDA) & AF5 on PB13(I
 232              		.loc 1 86 8 is_stmt 0 view .LVU58
 233 0044 DC68     		ldr	r4, [r3, #12]
  86:Src/main.c    ****   GPIOB->AFR[1] = 0x00501000;                          // Set AF1 on PB11(I2C2_SDA) & AF5 on PB13(I
 234              		.loc 1 86 17 view .LVU59
 235 0046 8821     		movs	r1, #136
 236 0048 C904     		lsls	r1, r1, #19
 237 004a 2143     		orrs	r1, r4
 238 004c D960     		str	r1, [r3, #12]
  87:Src/main.c    ****   GPIOB->BSRR = (1 << 14);                             // Set PB14 (address select) line high
 239              		.loc 1 87 3 is_stmt 1 view .LVU60
  87:Src/main.c    ****   GPIOB->BSRR = (1 << 14);                             // Set PB14 (address select) line high
 240              		.loc 1 87 17 is_stmt 0 view .LVU61
 241 004e 4449     		ldr	r1, .L26+16
 242 0050 5962     		str	r1, [r3, #36]
  88:Src/main.c    **** 
 243              		.loc 1 88 3 is_stmt 1 view .LVU62
  88:Src/main.c    **** 
 244              		.loc 1 88 15 is_stmt 0 view .LVU63
 245 0052 8021     		movs	r1, #128
 246 0054 C901     		lsls	r1, r1, #7
 247 0056 9961     		str	r1, [r3, #24]
  91:Src/main.c    **** 
 248              		.loc 1 91 3 is_stmt 1 view .LVU64
  91:Src/main.c    **** 
 249              		.loc 1 91 6 is_stmt 0 view .LVU65
 250 0058 D169     		ldr	r1, [r2, #28]
  91:Src/main.c    **** 
 251              		.loc 1 91 16 view .LVU66
 252 005a 8023     		movs	r3, #128
 253 005c DB03     		lsls	r3, r3, #15
 254 005e 0B43     		orrs	r3, r1
 255 0060 D361     		str	r3, [r2, #28]
  94:Src/main.c    **** 
 256              		.loc 1 94 3 is_stmt 1 view .LVU67
  94:Src/main.c    **** 
 257              		.loc 1 94 17 is_stmt 0 view .LVU68
 258 0062 404B     		ldr	r3, .L26+20
 259 0064 404A     		ldr	r2, .L26+24
 260 0066 1A61     		str	r2, [r3, #16]
  97:Src/main.c    **** 
 261              		.loc 1 97 3 is_stmt 1 view .LVU69
  97:Src/main.c    **** 
 262              		.loc 1 97 7 is_stmt 0 view .LVU70
 263 0068 1A68     		ldr	r2, [r3]
  97:Src/main.c    **** 
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 11


 264              		.loc 1 97 13 view .LVU71
 265 006a 0243     		orrs	r2, r0
 266 006c 1A60     		str	r2, [r3]
 105:Src/main.c    **** 
 267              		.loc 1 105 3 is_stmt 1 view .LVU72
 105:Src/main.c    **** 
 268              		.loc 1 105 13 is_stmt 0 view .LVU73
 269 006e 3F4A     		ldr	r2, .L26+28
 270 0070 5A60     		str	r2, [r3, #4]
 108:Src/main.c    **** 
 271              		.loc 1 108 3 is_stmt 1 view .LVU74
 108:Src/main.c    **** 
 272              		.loc 1 108 7 is_stmt 0 view .LVU75
 273 0072 5968     		ldr	r1, [r3, #4]
 108:Src/main.c    **** 
 274              		.loc 1 108 13 view .LVU76
 275 0074 8022     		movs	r2, #128
 276 0076 9201     		lsls	r2, r2, #6
 277 0078 0A43     		orrs	r2, r1
 278 007a 5A60     		str	r2, [r3, #4]
 111:Src/main.c    ****   {
 279              		.loc 1 111 3 is_stmt 1 view .LVU77
 111:Src/main.c    ****   {
 280              		.loc 1 111 9 is_stmt 0 view .LVU78
 281 007c 04E0     		b	.L11
 282              	.L12:
 113:Src/main.c    ****     // Handle the error
 283              		.loc 1 113 5 is_stmt 1 view .LVU79
 113:Src/main.c    ****     // Handle the error
 284              		.loc 1 113 10 is_stmt 0 view .LVU80
 285 007e 354A     		ldr	r2, .L26+4
 286 0080 9369     		ldr	r3, [r2, #24]
 113:Src/main.c    ****     // Handle the error
 287              		.loc 1 113 17 view .LVU81
 288 0082 4021     		movs	r1, #64
 289 0084 0B43     		orrs	r3, r1
 290 0086 9361     		str	r3, [r2, #24]
 291              	.L11:
 111:Src/main.c    ****   {
 292              		.loc 1 111 10 is_stmt 1 view .LVU82
 111:Src/main.c    ****   {
 293              		.loc 1 111 16 is_stmt 0 view .LVU83
 294 0088 364B     		ldr	r3, .L26+20
 295 008a 9B69     		ldr	r3, [r3, #24]
 111:Src/main.c    ****   {
 296              		.loc 1 111 22 view .LVU84
 297 008c 1222     		movs	r2, #18
 111:Src/main.c    ****   {
 298              		.loc 1 111 10 view .LVU85
 299 008e 1A42     		tst	r2, r3
 300 0090 F5D0     		beq	.L12
 118:Src/main.c    ****   {
 301              		.loc 1 118 3 is_stmt 1 view .LVU86
 118:Src/main.c    ****   {
 302              		.loc 1 118 11 is_stmt 0 view .LVU87
 303 0092 344B     		ldr	r3, .L26+20
 304 0094 9B69     		ldr	r3, [r3, #24]
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 12


 118:Src/main.c    ****   {
 305              		.loc 1 118 6 view .LVU88
 306 0096 DB06     		lsls	r3, r3, #27
 307 0098 04D5     		bpl	.L13
 120:Src/main.c    ****     // Handle the error
 308              		.loc 1 120 5 is_stmt 1 view .LVU89
 120:Src/main.c    ****     // Handle the error
 309              		.loc 1 120 10 is_stmt 0 view .LVU90
 310 009a 2E4A     		ldr	r2, .L26+4
 311 009c 9169     		ldr	r1, [r2, #24]
 120:Src/main.c    ****     // Handle the error
 312              		.loc 1 120 17 view .LVU91
 313 009e 4023     		movs	r3, #64
 314 00a0 0B43     		orrs	r3, r1
 315 00a2 9361     		str	r3, [r2, #24]
 316              	.L13:
 125:Src/main.c    **** 
 317              		.loc 1 125 3 is_stmt 1 view .LVU92
 125:Src/main.c    **** 
 318              		.loc 1 125 7 is_stmt 0 view .LVU93
 319 00a4 2F4A     		ldr	r2, .L26+20
 320 00a6 936A     		ldr	r3, [r2, #40]
 125:Src/main.c    **** 
 321              		.loc 1 125 14 view .LVU94
 322 00a8 0F21     		movs	r1, #15
 323 00aa 0B43     		orrs	r3, r1
 324 00ac 9362     		str	r3, [r2, #40]
 128:Src/main.c    ****   {
 325              		.loc 1 128 3 is_stmt 1 view .LVU95
 128:Src/main.c    ****   {
 326              		.loc 1 128 9 is_stmt 0 view .LVU96
 327 00ae 04E0     		b	.L14
 328              	.L15:
 130:Src/main.c    ****     // Handle the error
 329              		.loc 1 130 5 is_stmt 1 view .LVU97
 130:Src/main.c    ****     // Handle the error
 330              		.loc 1 130 10 is_stmt 0 view .LVU98
 331 00b0 284A     		ldr	r2, .L26+4
 332 00b2 9369     		ldr	r3, [r2, #24]
 130:Src/main.c    ****     // Handle the error
 333              		.loc 1 130 17 view .LVU99
 334 00b4 4021     		movs	r1, #64
 335 00b6 0B43     		orrs	r3, r1
 336 00b8 9361     		str	r3, [r2, #24]
 337              	.L14:
 128:Src/main.c    ****   {
 338              		.loc 1 128 10 is_stmt 1 view .LVU100
 128:Src/main.c    ****   {
 339              		.loc 1 128 16 is_stmt 0 view .LVU101
 340 00ba 2A4B     		ldr	r3, .L26+20
 341 00bc 9B69     		ldr	r3, [r3, #24]
 128:Src/main.c    ****   {
 342              		.loc 1 128 22 view .LVU102
 343 00be 5022     		movs	r2, #80
 128:Src/main.c    ****   {
 344              		.loc 1 128 10 view .LVU103
 345 00c0 1A42     		tst	r2, r3
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 13


 346 00c2 F5D0     		beq	.L15
 135:Src/main.c    ****   {
 347              		.loc 1 135 3 is_stmt 1 view .LVU104
 135:Src/main.c    ****   {
 348              		.loc 1 135 11 is_stmt 0 view .LVU105
 349 00c4 274B     		ldr	r3, .L26+20
 350 00c6 9B69     		ldr	r3, [r3, #24]
 135:Src/main.c    ****   {
 351              		.loc 1 135 6 view .LVU106
 352 00c8 DB06     		lsls	r3, r3, #27
 353 00ca 04D5     		bpl	.L16
 137:Src/main.c    ****     // Handle the error
 354              		.loc 1 137 5 is_stmt 1 view .LVU107
 137:Src/main.c    ****     // Handle the error
 355              		.loc 1 137 10 is_stmt 0 view .LVU108
 356 00cc 214A     		ldr	r2, .L26+4
 357 00ce 9169     		ldr	r1, [r2, #24]
 137:Src/main.c    ****     // Handle the error
 358              		.loc 1 137 17 view .LVU109
 359 00d0 4023     		movs	r3, #64
 360 00d2 0B43     		orrs	r3, r1
 361 00d4 9361     		str	r3, [r2, #24]
 362              	.L16:
 142:Src/main.c    **** 
 363              		.loc 1 142 3 is_stmt 1 view .LVU110
 142:Src/main.c    **** 
 364              		.loc 1 142 13 is_stmt 0 view .LVU111
 365 00d6 234B     		ldr	r3, .L26+20
 366 00d8 254A     		ldr	r2, .L26+32
 367 00da 5A60     		str	r2, [r3, #4]
 145:Src/main.c    ****   {
 368              		.loc 1 145 3 is_stmt 1 view .LVU112
 145:Src/main.c    ****   {
 369              		.loc 1 145 9 is_stmt 0 view .LVU113
 370 00dc 04E0     		b	.L17
 371              	.L18:
 147:Src/main.c    ****     // Handle the error
 372              		.loc 1 147 5 is_stmt 1 view .LVU114
 147:Src/main.c    ****     // Handle the error
 373              		.loc 1 147 10 is_stmt 0 view .LVU115
 374 00de 1D4A     		ldr	r2, .L26+4
 375 00e0 9369     		ldr	r3, [r2, #24]
 147:Src/main.c    ****     // Handle the error
 376              		.loc 1 147 17 view .LVU116
 377 00e2 4021     		movs	r1, #64
 378 00e4 0B43     		orrs	r3, r1
 379 00e6 9361     		str	r3, [r2, #24]
 380              	.L17:
 145:Src/main.c    ****   {
 381              		.loc 1 145 10 is_stmt 1 view .LVU117
 145:Src/main.c    ****   {
 382              		.loc 1 145 16 is_stmt 0 view .LVU118
 383 00e8 1E4B     		ldr	r3, .L26+20
 384 00ea 9B69     		ldr	r3, [r3, #24]
 145:Src/main.c    ****   {
 385              		.loc 1 145 22 view .LVU119
 386 00ec 1422     		movs	r2, #20
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 14


 145:Src/main.c    ****   {
 387              		.loc 1 145 10 view .LVU120
 388 00ee 1A42     		tst	r2, r3
 389 00f0 F5D0     		beq	.L18
 152:Src/main.c    ****   {
 390              		.loc 1 152 3 is_stmt 1 view .LVU121
 152:Src/main.c    ****   {
 391              		.loc 1 152 11 is_stmt 0 view .LVU122
 392 00f2 1C4B     		ldr	r3, .L26+20
 393 00f4 9B69     		ldr	r3, [r3, #24]
 152:Src/main.c    ****   {
 394              		.loc 1 152 6 view .LVU123
 395 00f6 DB06     		lsls	r3, r3, #27
 396 00f8 0AD5     		bpl	.L20
 154:Src/main.c    ****     // Handle the error
 397              		.loc 1 154 5 is_stmt 1 view .LVU124
 154:Src/main.c    ****     // Handle the error
 398              		.loc 1 154 10 is_stmt 0 view .LVU125
 399 00fa 164A     		ldr	r2, .L26+4
 400 00fc 9169     		ldr	r1, [r2, #24]
 154:Src/main.c    ****     // Handle the error
 401              		.loc 1 154 17 view .LVU126
 402 00fe 4023     		movs	r3, #64
 403 0100 0B43     		orrs	r3, r1
 404 0102 9361     		str	r3, [r2, #24]
 405 0104 04E0     		b	.L20
 406              	.L21:
 161:Src/main.c    ****     // Handle the error
 407              		.loc 1 161 5 is_stmt 1 view .LVU127
 161:Src/main.c    ****     // Handle the error
 408              		.loc 1 161 10 is_stmt 0 view .LVU128
 409 0106 134A     		ldr	r2, .L26+4
 410 0108 9369     		ldr	r3, [r2, #24]
 161:Src/main.c    ****     // Handle the error
 411              		.loc 1 161 17 view .LVU129
 412 010a 4021     		movs	r1, #64
 413 010c 0B43     		orrs	r3, r1
 414 010e 9361     		str	r3, [r2, #24]
 415              	.L20:
 159:Src/main.c    ****   {
 416              		.loc 1 159 10 is_stmt 1 view .LVU130
 159:Src/main.c    ****   {
 417              		.loc 1 159 16 is_stmt 0 view .LVU131
 418 0110 144B     		ldr	r3, .L26+20
 419 0112 9B69     		ldr	r3, [r3, #24]
 159:Src/main.c    ****   {
 420              		.loc 1 159 22 view .LVU132
 421 0114 5022     		movs	r2, #80
 159:Src/main.c    ****   {
 422              		.loc 1 159 10 view .LVU133
 423 0116 1A42     		tst	r2, r3
 424 0118 F5D0     		beq	.L21
 166:Src/main.c    **** 
 425              		.loc 1 166 3 is_stmt 1 view .LVU134
 166:Src/main.c    **** 
 426              		.loc 1 166 7 is_stmt 0 view .LVU135
 427 011a 124B     		ldr	r3, .L26+20
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 15


 428 011c 5968     		ldr	r1, [r3, #4]
 166:Src/main.c    **** 
 429              		.loc 1 166 13 view .LVU136
 430 011e 8022     		movs	r2, #128
 431 0120 D201     		lsls	r2, r2, #7
 432 0122 0A43     		orrs	r2, r1
 433 0124 5A60     		str	r2, [r3, #4]
 169:Src/main.c    ****   {
 434              		.loc 1 169 3 is_stmt 1 view .LVU137
 169:Src/main.c    ****   {
 435              		.loc 1 169 11 is_stmt 0 view .LVU138
 436 0126 5B6A     		ldr	r3, [r3, #36]
 169:Src/main.c    ****   {
 437              		.loc 1 169 6 view .LVU139
 438 0128 D32B     		cmp	r3, #211
 439 012a 04D0     		beq	.L22
 171:Src/main.c    ****     // Handle the error
 440              		.loc 1 171 5 is_stmt 1 view .LVU140
 171:Src/main.c    ****     // Handle the error
 441              		.loc 1 171 10 is_stmt 0 view .LVU141
 442 012c 094A     		ldr	r2, .L26+4
 443 012e 9169     		ldr	r1, [r2, #24]
 171:Src/main.c    ****     // Handle the error
 444              		.loc 1 171 17 view .LVU142
 445 0130 4023     		movs	r3, #64
 446 0132 0B43     		orrs	r3, r1
 447 0134 9361     		str	r3, [r2, #24]
 448              	.L22:
 175:Src/main.c    **** 
 449              		.loc 1 175 3 is_stmt 1 view .LVU143
 175:Src/main.c    **** 
 450              		.loc 1 175 8 is_stmt 0 view .LVU144
 451 0136 074B     		ldr	r3, .L26+4
 452 0138 9969     		ldr	r1, [r3, #24]
 175:Src/main.c    **** 
 453              		.loc 1 175 15 view .LVU145
 454 013a 8022     		movs	r2, #128
 455 013c D203     		lsls	r2, r2, #15
 456 013e 0A43     		orrs	r2, r1
 457 0140 9A61     		str	r2, [r3, #24]
 178:Src/main.c    **** 
 458              		.loc 1 178 3 is_stmt 1 view .LVU146
 178:Src/main.c    **** 
 459              		.loc 1 178 8 is_stmt 0 view .LVU147
 460 0142 9A69     		ldr	r2, [r3, #24]
 178:Src/main.c    **** 
 461              		.loc 1 178 15 view .LVU148
 462 0144 8021     		movs	r1, #128
 463 0146 0A43     		orrs	r2, r1
 464 0148 9A61     		str	r2, [r3, #24]
 180:Src/main.c    **** 
 465              		.loc 1 180 1 view .LVU149
 466 014a 0020     		movs	r0, #0
 467              		@ sp needed
 468 014c 10BD     		pop	{r4, pc}
 469              	.L27:
 470 014e C046     		.align	2
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 16


 471              	.L26:
 472 0150 00100240 		.word	1073876992
 473 0154 00080048 		.word	1207961600
 474 0158 01500500 		.word	348161
 475 015c 00040048 		.word	1207960576
 476 0160 00105000 		.word	5246976
 477 0164 00580040 		.word	1073764352
 478 0168 130F4210 		.word	272764691
 479 016c D2000100 		.word	65746
 480 0170 D2240100 		.word	74962
 481              		.cfi_endproc
 482              	.LFE40:
 484              		.text
 485              	.Letext0:
 486              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 487              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 488              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 489              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 490              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 491              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 492              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s:19     .text._Error_Handler:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s:25     .text._Error_Handler:00000000 _Error_Handler
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s:43     .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s:48     .text.SystemClock_Config:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s:54     .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s:157    .text.SystemClock_Config:0000006c $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s:162    .text.main:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s:168    .text.main:00000000 main
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccLCDh2Q.s:472    .text.main:00000150 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
