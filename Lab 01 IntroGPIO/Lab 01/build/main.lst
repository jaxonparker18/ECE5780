ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text._Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	_Error_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_Error_Handler:
  26              	.LFB42:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   * Jaxon Parker
   4:Src/main.c    ****   * U1289670
   5:Src/main.c    ****   *
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * File Name          : main.c
   8:Src/main.c    ****   * Description        : Main program body
   9:Src/main.c    ****   ******************************************************************************
  10:Src/main.c    ****   ** This notice applies to any and all portions of this file
  11:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
  12:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  13:Src/main.c    ****   * inserted by the user or by software development tools
  14:Src/main.c    ****   * are owned by their respective copyright owners.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  19:Src/main.c    ****   * are permitted provided that the following conditions are met:
  20:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  21:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  22:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  24:Src/main.c    ****   *      and/or other materials provided with the distribution.
  25:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  26:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  27:Src/main.c    ****   *      without specific prior written permission.
  28:Src/main.c    ****   *
  29:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  32:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s 			page 2


  33:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  35:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  37:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  38:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  39:Src/main.c    ****   *
  40:Src/main.c    ****   ******************************************************************************
  41:Src/main.c    ****   */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f0xx_hal.h"
  46:Src/main.c    **** void _Error_Handler(char * file, int line);
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** void SystemClock_Config(void);
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** int main(void) {
  72:Src/main.c    ****   HAL_Init();               // Reset of all peripherals, init the Flash and Systick
  73:Src/main.c    ****   SystemClock_Config();     // Configure the system clock
  74:Src/main.c    **** 
  75:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN; // Enable the GPIOC clock in the RCC
  76:Src/main.c    **** 
  77:Src/main.c    ****   // Configure the LED pins to slow-speed, push-pull output mode without pull-up/down resistors
  78:Src/main.c    ****   // Blue LED 14 15 == 7
  79:Src/main.c    ****   GPIOC->MODER |= (1 << 14);
  80:Src/main.c    ****   GPIOC->MODER &= ~(1 << 15);
  81:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
  82:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 14);
  83:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 15);
  84:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 14);
  85:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 15);
  86:Src/main.c    **** 
  87:Src/main.c    ****   // Red LED
  88:Src/main.c    ****   GPIOC->MODER |= (1 << 12);
  89:Src/main.c    ****   GPIOC->MODER &= ~(1 << 13);
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s 			page 3


  90:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
  91:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 12);
  92:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 13);
  93:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 12); 
  94:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 13); 
  95:Src/main.c    **** 
  96:Src/main.c    **** 
  97:Src/main.c    ****   // User Button
  98:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOAEN; 
  99:Src/main.c    **** 
 100:Src/main.c    ****   GPIOA->MODER &= ~(3 << 0);      // Set as input
 101:Src/main.c    ****   GPIOA->OSPEEDR &= ~(3 << 0);    // Set as low speed
 102:Src/main.c    ****   GPIOA->PUPDR |= (1 << 0);       // Enable pull-down resistor
 103:Src/main.c    **** 
 104:Src/main.c    ****   // Initialize one pin logic high and the other to low
 105:Src/main.c    ****   GPIOC->ODR |= (1 << 7);  // Red High
 106:Src/main.c    ****   GPIOC->ODR &= ~(1 << 6); // Blue Low
 107:Src/main.c    **** 
 108:Src/main.c    ****   uint32_t debouncer = 0;
 109:Src/main.c    **** 
 110:Src/main.c    ****   while (1) {
 111:Src/main.c    ****     debouncer = (debouncer << 1); 
 112:Src/main.c    ****     if (GPIOA->IDR & (1 << 0)) {   
 113:Src/main.c    ****       debouncer |= 0x01;         
 114:Src/main.c    ****     }
 115:Src/main.c    ****     if (debouncer == 0xFFFFFFFF) {
 116:Src/main.c    ****       // This code triggers repeatedly when the button is steady high!
 117:Src/main.c    ****     }
 118:Src/main.c    ****     if (debouncer == 0x00000000) {
 119:Src/main.c    ****       // This code triggers repeatedly when button is steady low!
 120:Src/main.c    ****     }
 121:Src/main.c    ****     if (debouncer == 0x7FFFFFFF) {
 122:Src/main.c    ****       // This code triggers only once when transitioning to steady high!
 123:Src/main.c    ****       // Toggle the LED states
 124:Src/main.c    ****       GPIOC->ODR ^= (1 << 7); // Toggle Red 
 125:Src/main.c    ****       GPIOC->ODR ^= (1 << 6); // Toggle Blue
 126:Src/main.c    ****     }
 127:Src/main.c    **** 
 128:Src/main.c    ****   }
 129:Src/main.c    **** }
 130:Src/main.c    **** 
 131:Src/main.c    **** /** System Clock Configuration
 132:Src/main.c    **** */
 133:Src/main.c    **** void SystemClock_Config(void)
 134:Src/main.c    **** {
 135:Src/main.c    **** 
 136:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 137:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 138:Src/main.c    **** 
 139:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 140:Src/main.c    ****     */
 141:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 142:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 143:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 144:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 145:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 146:Src/main.c    ****   {
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s 			page 4


 147:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 148:Src/main.c    ****   }
 149:Src/main.c    **** 
 150:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 151:Src/main.c    ****     */
 152:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 153:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 154:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 155:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 156:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 157:Src/main.c    **** 
 158:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 159:Src/main.c    ****   {
 160:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 161:Src/main.c    ****   }
 162:Src/main.c    **** 
 163:Src/main.c    ****     /**Configure the Systick interrupt time
 164:Src/main.c    ****     */
 165:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 166:Src/main.c    **** 
 167:Src/main.c    ****     /**Configure the Systick
 168:Src/main.c    ****     */
 169:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 170:Src/main.c    **** 
 171:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 172:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 173:Src/main.c    **** }
 174:Src/main.c    **** 
 175:Src/main.c    **** /* USER CODE BEGIN 4 */
 176:Src/main.c    **** 
 177:Src/main.c    **** /* USER CODE END 4 */
 178:Src/main.c    **** 
 179:Src/main.c    **** /**
 180:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 181:Src/main.c    ****   * @param  None
 182:Src/main.c    ****   * @retval None
 183:Src/main.c    ****   */
 184:Src/main.c    **** void _Error_Handler(char * file, int line)
 185:Src/main.c    **** {
  27              		.loc 1 185 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
 186:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 187:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 188:Src/main.c    ****   while(1)
  35              		.loc 1 188 3 view .LVU1
 189:Src/main.c    ****   {
 190:Src/main.c    ****   }
  36              		.loc 1 190 3 view .LVU2
 188:Src/main.c    ****   {
  37              		.loc 1 188 8 view .LVU3
  38 0000 FEE7     		b	.L2
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s 			page 5


  39              		.cfi_endproc
  40              	.LFE42:
  42              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
  43              		.align	2
  44              	.LC0:
  45 0000 5372632F 		.ascii	"Src/main.c\000"
  45      6D61696E 
  45      2E6300
  46              		.global	__aeabi_uidiv
  47              		.section	.text.SystemClock_Config,"ax",%progbits
  48              		.align	1
  49              		.global	SystemClock_Config
  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  54              	SystemClock_Config:
  55              	.LFB41:
 134:Src/main.c    **** 
  56              		.loc 1 134 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 72
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 00B5     		push	{lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 14, -4
  64 0002 93B0     		sub	sp, sp, #76
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 80
 136:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  67              		.loc 1 136 3 view .LVU5
 137:Src/main.c    **** 
  68              		.loc 1 137 3 view .LVU6
 141:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  69              		.loc 1 141 3 view .LVU7
 141:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  70              		.loc 1 141 36 is_stmt 0 view .LVU8
  71 0004 0223     		movs	r3, #2
  72 0006 0593     		str	r3, [sp, #20]
 142:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  73              		.loc 1 142 3 is_stmt 1 view .LVU9
 142:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  74              		.loc 1 142 30 is_stmt 0 view .LVU10
  75 0008 013B     		subs	r3, r3, #1
  76 000a 0893     		str	r3, [sp, #32]
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  77              		.loc 1 143 3 is_stmt 1 view .LVU11
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  78              		.loc 1 143 41 is_stmt 0 view .LVU12
  79 000c 0F33     		adds	r3, r3, #15
  80 000e 0993     		str	r3, [sp, #36]
 144:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  81              		.loc 1 144 3 is_stmt 1 view .LVU13
 144:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  82              		.loc 1 144 34 is_stmt 0 view .LVU14
  83 0010 0023     		movs	r3, #0
  84 0012 0E93     		str	r3, [sp, #56]
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s 			page 6


 145:Src/main.c    ****   {
  85              		.loc 1 145 3 is_stmt 1 view .LVU15
 145:Src/main.c    ****   {
  86              		.loc 1 145 7 is_stmt 0 view .LVU16
  87 0014 05A8     		add	r0, sp, #20
  88 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
  89              	.LVL1:
 145:Src/main.c    ****   {
  90              		.loc 1 145 6 discriminator 1 view .LVU17
  91 001a 0028     		cmp	r0, #0
  92 001c 1ED1     		bne	.L6
 152:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  93              		.loc 1 152 3 is_stmt 1 view .LVU18
 152:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  94              		.loc 1 152 31 is_stmt 0 view .LVU19
  95 001e 0723     		movs	r3, #7
  96 0020 0193     		str	r3, [sp, #4]
 154:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  97              		.loc 1 154 3 is_stmt 1 view .LVU20
 154:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 154 34 is_stmt 0 view .LVU21
  99 0022 0023     		movs	r3, #0
 100 0024 0293     		str	r3, [sp, #8]
 155:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 101              		.loc 1 155 3 is_stmt 1 view .LVU22
 155:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 155 35 is_stmt 0 view .LVU23
 103 0026 0393     		str	r3, [sp, #12]
 156:Src/main.c    **** 
 104              		.loc 1 156 3 is_stmt 1 view .LVU24
 156:Src/main.c    **** 
 105              		.loc 1 156 36 is_stmt 0 view .LVU25
 106 0028 0493     		str	r3, [sp, #16]
 158:Src/main.c    ****   {
 107              		.loc 1 158 3 is_stmt 1 view .LVU26
 158:Src/main.c    ****   {
 108              		.loc 1 158 7 is_stmt 0 view .LVU27
 109 002a 0021     		movs	r1, #0
 110 002c 01A8     		add	r0, sp, #4
 111 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 112              	.LVL2:
 158:Src/main.c    ****   {
 113              		.loc 1 158 6 discriminator 1 view .LVU28
 114 0032 0028     		cmp	r0, #0
 115 0034 16D1     		bne	.L7
 165:Src/main.c    **** 
 116              		.loc 1 165 3 is_stmt 1 view .LVU29
 165:Src/main.c    **** 
 117              		.loc 1 165 22 is_stmt 0 view .LVU30
 118 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 119              	.LVL3:
 165:Src/main.c    **** 
 120              		.loc 1 165 3 discriminator 1 view .LVU31
 121 003a FA21     		movs	r1, #250
 122 003c 8900     		lsls	r1, r1, #2
 123 003e FFF7FEFF 		bl	__aeabi_uidiv
 124              	.LVL4:
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s 			page 7


 125 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 126              	.LVL5:
 169:Src/main.c    **** 
 127              		.loc 1 169 3 is_stmt 1 view .LVU32
 128 0046 0420     		movs	r0, #4
 129 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 130              	.LVL6:
 172:Src/main.c    **** }
 131              		.loc 1 172 3 view .LVU33
 132 004c 0120     		movs	r0, #1
 133 004e 0022     		movs	r2, #0
 134 0050 0021     		movs	r1, #0
 135 0052 4042     		rsbs	r0, r0, #0
 136 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 137              	.LVL7:
 173:Src/main.c    **** 
 138              		.loc 1 173 1 is_stmt 0 view .LVU34
 139 0058 13B0     		add	sp, sp, #76
 140              		@ sp needed
 141 005a 00BD     		pop	{pc}
 142              	.L6:
 147:Src/main.c    ****   }
 143              		.loc 1 147 5 is_stmt 1 view .LVU35
 144 005c 0348     		ldr	r0, .L8
 145 005e 9321     		movs	r1, #147
 146 0060 FFF7FEFF 		bl	_Error_Handler
 147              	.LVL8:
 148              	.L7:
 160:Src/main.c    ****   }
 149              		.loc 1 160 5 view .LVU36
 150 0064 0148     		ldr	r0, .L8
 151 0066 A021     		movs	r1, #160
 152 0068 FFF7FEFF 		bl	_Error_Handler
 153              	.LVL9:
 154              	.L9:
 155              		.align	2
 156              	.L8:
 157 006c 00000000 		.word	.LC0
 158              		.cfi_endproc
 159              	.LFE41:
 161              		.section	.text.main,"ax",%progbits
 162              		.align	1
 163              		.global	main
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 168              	main:
 169              	.LFB40:
  71:Src/main.c    ****   HAL_Init();               // Reset of all peripherals, init the Flash and Systick
 170              		.loc 1 71 16 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 70B5     		push	{r4, r5, r6, lr}
 175              	.LCFI2:
 176              		.cfi_def_cfa_offset 16
 177              		.cfi_offset 4, -16
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s 			page 8


 178              		.cfi_offset 5, -12
 179              		.cfi_offset 6, -8
 180              		.cfi_offset 14, -4
  72:Src/main.c    ****   SystemClock_Config();     // Configure the system clock
 181              		.loc 1 72 3 view .LVU38
 182 0002 FFF7FEFF 		bl	HAL_Init
 183              	.LVL10:
  73:Src/main.c    **** 
 184              		.loc 1 73 3 view .LVU39
 185 0006 FFF7FEFF 		bl	SystemClock_Config
 186              	.LVL11:
  75:Src/main.c    **** 
 187              		.loc 1 75 3 view .LVU40
  75:Src/main.c    **** 
 188              		.loc 1 75 6 is_stmt 0 view .LVU41
 189 000a 354A     		ldr	r2, .L16
 190 000c 5169     		ldr	r1, [r2, #20]
  75:Src/main.c    **** 
 191              		.loc 1 75 15 view .LVU42
 192 000e 8023     		movs	r3, #128
 193 0010 1B03     		lsls	r3, r3, #12
 194 0012 0B43     		orrs	r3, r1
 195 0014 5361     		str	r3, [r2, #20]
  79:Src/main.c    ****   GPIOC->MODER &= ~(1 << 15);
 196              		.loc 1 79 3 is_stmt 1 view .LVU43
  79:Src/main.c    ****   GPIOC->MODER &= ~(1 << 15);
 197              		.loc 1 79 8 is_stmt 0 view .LVU44
 198 0016 334B     		ldr	r3, .L16+4
 199 0018 1868     		ldr	r0, [r3]
  79:Src/main.c    ****   GPIOC->MODER &= ~(1 << 15);
 200              		.loc 1 79 16 view .LVU45
 201 001a 8021     		movs	r1, #128
 202 001c C901     		lsls	r1, r1, #7
 203 001e 0143     		orrs	r1, r0
 204 0020 1960     		str	r1, [r3]
  80:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 205              		.loc 1 80 3 is_stmt 1 view .LVU46
  80:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 206              		.loc 1 80 8 is_stmt 0 view .LVU47
 207 0022 1968     		ldr	r1, [r3]
  80:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 208              		.loc 1 80 16 view .LVU48
 209 0024 3048     		ldr	r0, .L16+8
 210 0026 0140     		ands	r1, r0
 211 0028 1960     		str	r1, [r3]
  81:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 14);
 212              		.loc 1 81 3 is_stmt 1 view .LVU49
  81:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 14);
 213              		.loc 1 81 8 is_stmt 0 view .LVU50
 214 002a 5968     		ldr	r1, [r3, #4]
  81:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 14);
 215              		.loc 1 81 17 view .LVU51
 216 002c 8024     		movs	r4, #128
 217 002e A143     		bics	r1, r4
 218 0030 5960     		str	r1, [r3, #4]
  82:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 15);
 219              		.loc 1 82 3 is_stmt 1 view .LVU52
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s 			page 9


  82:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 15);
 220              		.loc 1 82 8 is_stmt 0 view .LVU53
 221 0032 9968     		ldr	r1, [r3, #8]
  82:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 15);
 222              		.loc 1 82 18 view .LVU54
 223 0034 2D4D     		ldr	r5, .L16+12
 224 0036 2940     		ands	r1, r5
 225 0038 9960     		str	r1, [r3, #8]
  83:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 14);
 226              		.loc 1 83 3 is_stmt 1 view .LVU55
  83:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 14);
 227              		.loc 1 83 8 is_stmt 0 view .LVU56
 228 003a 9968     		ldr	r1, [r3, #8]
  83:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 14);
 229              		.loc 1 83 18 view .LVU57
 230 003c 0140     		ands	r1, r0
 231 003e 9960     		str	r1, [r3, #8]
  84:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 15);
 232              		.loc 1 84 3 is_stmt 1 view .LVU58
  84:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 15);
 233              		.loc 1 84 8 is_stmt 0 view .LVU59
 234 0040 D968     		ldr	r1, [r3, #12]
  84:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 15);
 235              		.loc 1 84 16 view .LVU60
 236 0042 2940     		ands	r1, r5
 237 0044 D960     		str	r1, [r3, #12]
  85:Src/main.c    **** 
 238              		.loc 1 85 3 is_stmt 1 view .LVU61
  85:Src/main.c    **** 
 239              		.loc 1 85 8 is_stmt 0 view .LVU62
 240 0046 D968     		ldr	r1, [r3, #12]
  85:Src/main.c    **** 
 241              		.loc 1 85 16 view .LVU63
 242 0048 0140     		ands	r1, r0
 243 004a D960     		str	r1, [r3, #12]
  88:Src/main.c    ****   GPIOC->MODER &= ~(1 << 13);
 244              		.loc 1 88 3 is_stmt 1 view .LVU64
  88:Src/main.c    ****   GPIOC->MODER &= ~(1 << 13);
 245              		.loc 1 88 8 is_stmt 0 view .LVU65
 246 004c 1868     		ldr	r0, [r3]
  88:Src/main.c    ****   GPIOC->MODER &= ~(1 << 13);
 247              		.loc 1 88 16 view .LVU66
 248 004e 8021     		movs	r1, #128
 249 0050 4901     		lsls	r1, r1, #5
 250 0052 0143     		orrs	r1, r0
 251 0054 1960     		str	r1, [r3]
  89:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
 252              		.loc 1 89 3 is_stmt 1 view .LVU67
  89:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
 253              		.loc 1 89 8 is_stmt 0 view .LVU68
 254 0056 1968     		ldr	r1, [r3]
  89:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
 255              		.loc 1 89 16 view .LVU69
 256 0058 254D     		ldr	r5, .L16+16
 257 005a 2940     		ands	r1, r5
 258 005c 1960     		str	r1, [r3]
  90:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 12);
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s 			page 10


 259              		.loc 1 90 3 is_stmt 1 view .LVU70
  90:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 12);
 260              		.loc 1 90 8 is_stmt 0 view .LVU71
 261 005e 5968     		ldr	r1, [r3, #4]
  90:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 12);
 262              		.loc 1 90 17 view .LVU72
 263 0060 4020     		movs	r0, #64
 264 0062 8143     		bics	r1, r0
 265 0064 5960     		str	r1, [r3, #4]
  91:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 13);
 266              		.loc 1 91 3 is_stmt 1 view .LVU73
  91:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 13);
 267              		.loc 1 91 8 is_stmt 0 view .LVU74
 268 0066 9968     		ldr	r1, [r3, #8]
  91:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 13);
 269              		.loc 1 91 18 view .LVU75
 270 0068 224E     		ldr	r6, .L16+20
 271 006a 3140     		ands	r1, r6
 272 006c 9960     		str	r1, [r3, #8]
  92:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 12); 
 273              		.loc 1 92 3 is_stmt 1 view .LVU76
  92:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 12); 
 274              		.loc 1 92 8 is_stmt 0 view .LVU77
 275 006e 9968     		ldr	r1, [r3, #8]
  92:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 12); 
 276              		.loc 1 92 18 view .LVU78
 277 0070 2940     		ands	r1, r5
 278 0072 9960     		str	r1, [r3, #8]
  93:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 13); 
 279              		.loc 1 93 3 is_stmt 1 view .LVU79
  93:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 13); 
 280              		.loc 1 93 8 is_stmt 0 view .LVU80
 281 0074 D968     		ldr	r1, [r3, #12]
  93:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 13); 
 282              		.loc 1 93 16 view .LVU81
 283 0076 3140     		ands	r1, r6
 284 0078 D960     		str	r1, [r3, #12]
  94:Src/main.c    **** 
 285              		.loc 1 94 3 is_stmt 1 view .LVU82
  94:Src/main.c    **** 
 286              		.loc 1 94 8 is_stmt 0 view .LVU83
 287 007a D968     		ldr	r1, [r3, #12]
  94:Src/main.c    **** 
 288              		.loc 1 94 16 view .LVU84
 289 007c 2940     		ands	r1, r5
 290 007e D960     		str	r1, [r3, #12]
  98:Src/main.c    **** 
 291              		.loc 1 98 3 is_stmt 1 view .LVU85
  98:Src/main.c    **** 
 292              		.loc 1 98 6 is_stmt 0 view .LVU86
 293 0080 5569     		ldr	r5, [r2, #20]
  98:Src/main.c    **** 
 294              		.loc 1 98 15 view .LVU87
 295 0082 8021     		movs	r1, #128
 296 0084 8902     		lsls	r1, r1, #10
 297 0086 2943     		orrs	r1, r5
 298 0088 5161     		str	r1, [r2, #20]
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s 			page 11


 100:Src/main.c    ****   GPIOA->OSPEEDR &= ~(3 << 0);    // Set as low speed
 299              		.loc 1 100 3 is_stmt 1 view .LVU88
 100:Src/main.c    ****   GPIOA->OSPEEDR &= ~(3 << 0);    // Set as low speed
 300              		.loc 1 100 8 is_stmt 0 view .LVU89
 301 008a 9022     		movs	r2, #144
 302 008c D205     		lsls	r2, r2, #23
 303 008e 1168     		ldr	r1, [r2]
 100:Src/main.c    ****   GPIOA->OSPEEDR &= ~(3 << 0);    // Set as low speed
 304              		.loc 1 100 16 view .LVU90
 305 0090 0325     		movs	r5, #3
 306 0092 A943     		bics	r1, r5
 307 0094 1160     		str	r1, [r2]
 101:Src/main.c    ****   GPIOA->PUPDR |= (1 << 0);       // Enable pull-down resistor
 308              		.loc 1 101 3 is_stmt 1 view .LVU91
 101:Src/main.c    ****   GPIOA->PUPDR |= (1 << 0);       // Enable pull-down resistor
 309              		.loc 1 101 8 is_stmt 0 view .LVU92
 310 0096 9168     		ldr	r1, [r2, #8]
 101:Src/main.c    ****   GPIOA->PUPDR |= (1 << 0);       // Enable pull-down resistor
 311              		.loc 1 101 18 view .LVU93
 312 0098 A943     		bics	r1, r5
 313 009a 9160     		str	r1, [r2, #8]
 102:Src/main.c    **** 
 314              		.loc 1 102 3 is_stmt 1 view .LVU94
 102:Src/main.c    **** 
 315              		.loc 1 102 8 is_stmt 0 view .LVU95
 316 009c D168     		ldr	r1, [r2, #12]
 102:Src/main.c    **** 
 317              		.loc 1 102 16 view .LVU96
 318 009e 023D     		subs	r5, r5, #2
 319 00a0 2943     		orrs	r1, r5
 320 00a2 D160     		str	r1, [r2, #12]
 105:Src/main.c    ****   GPIOC->ODR &= ~(1 << 6); // Blue Low
 321              		.loc 1 105 3 is_stmt 1 view .LVU97
 105:Src/main.c    ****   GPIOC->ODR &= ~(1 << 6); // Blue Low
 322              		.loc 1 105 8 is_stmt 0 view .LVU98
 323 00a4 5A69     		ldr	r2, [r3, #20]
 105:Src/main.c    ****   GPIOC->ODR &= ~(1 << 6); // Blue Low
 324              		.loc 1 105 14 view .LVU99
 325 00a6 2243     		orrs	r2, r4
 326 00a8 5A61     		str	r2, [r3, #20]
 106:Src/main.c    **** 
 327              		.loc 1 106 3 is_stmt 1 view .LVU100
 106:Src/main.c    **** 
 328              		.loc 1 106 8 is_stmt 0 view .LVU101
 329 00aa 5A69     		ldr	r2, [r3, #20]
 106:Src/main.c    **** 
 330              		.loc 1 106 14 view .LVU102
 331 00ac 8243     		bics	r2, r0
 332 00ae 5A61     		str	r2, [r3, #20]
 108:Src/main.c    **** 
 333              		.loc 1 108 3 is_stmt 1 view .LVU103
 334              	.LVL12:
 108:Src/main.c    **** 
 335              		.loc 1 108 12 is_stmt 0 view .LVU104
 336 00b0 0023     		movs	r3, #0
 337 00b2 02E0     		b	.L11
 338              	.LVL13:
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s 			page 12


 339              	.L12:
 115:Src/main.c    ****       // This code triggers repeatedly when the button is steady high!
 340              		.loc 1 115 5 is_stmt 1 view .LVU105
 117:Src/main.c    ****     if (debouncer == 0x00000000) {
 341              		.loc 1 117 5 view .LVU106
 118:Src/main.c    ****       // This code triggers repeatedly when button is steady low!
 342              		.loc 1 118 5 view .LVU107
 120:Src/main.c    ****     if (debouncer == 0x7FFFFFFF) {
 343              		.loc 1 120 5 view .LVU108
 121:Src/main.c    ****       // This code triggers only once when transitioning to steady high!
 344              		.loc 1 121 5 view .LVU109
 121:Src/main.c    ****       // This code triggers only once when transitioning to steady high!
 345              		.loc 1 121 8 is_stmt 0 view .LVU110
 346 00b4 104A     		ldr	r2, .L16+24
 347 00b6 9342     		cmp	r3, r2
 348 00b8 08D0     		beq	.L15
 349              	.LVL14:
 350              	.L11:
 110:Src/main.c    ****     debouncer = (debouncer << 1); 
 351              		.loc 1 110 3 is_stmt 1 view .LVU111
 111:Src/main.c    ****     if (GPIOA->IDR & (1 << 0)) {   
 352              		.loc 1 111 5 view .LVU112
 111:Src/main.c    ****     if (GPIOA->IDR & (1 << 0)) {   
 353              		.loc 1 111 15 is_stmt 0 view .LVU113
 354 00ba 5B00     		lsls	r3, r3, #1
 355              	.LVL15:
 112:Src/main.c    ****       debouncer |= 0x01;         
 356              		.loc 1 112 5 is_stmt 1 view .LVU114
 112:Src/main.c    ****       debouncer |= 0x01;         
 357              		.loc 1 112 14 is_stmt 0 view .LVU115
 358 00bc 9022     		movs	r2, #144
 359 00be D205     		lsls	r2, r2, #23
 360 00c0 1269     		ldr	r2, [r2, #16]
 112:Src/main.c    ****       debouncer |= 0x01;         
 361              		.loc 1 112 8 view .LVU116
 362 00c2 D207     		lsls	r2, r2, #31
 363 00c4 F6D5     		bpl	.L12
 113:Src/main.c    ****     }
 364              		.loc 1 113 7 is_stmt 1 view .LVU117
 113:Src/main.c    ****     }
 365              		.loc 1 113 17 is_stmt 0 view .LVU118
 366 00c6 0122     		movs	r2, #1
 367 00c8 1343     		orrs	r3, r2
 368              	.LVL16:
 113:Src/main.c    ****     }
 369              		.loc 1 113 17 view .LVU119
 370 00ca F3E7     		b	.L12
 371              	.L15:
 124:Src/main.c    ****       GPIOC->ODR ^= (1 << 6); // Toggle Blue
 372              		.loc 1 124 7 is_stmt 1 view .LVU120
 124:Src/main.c    ****       GPIOC->ODR ^= (1 << 6); // Toggle Blue
 373              		.loc 1 124 12 is_stmt 0 view .LVU121
 374 00cc 054A     		ldr	r2, .L16+4
 375 00ce 5169     		ldr	r1, [r2, #20]
 124:Src/main.c    ****       GPIOC->ODR ^= (1 << 6); // Toggle Blue
 376              		.loc 1 124 18 view .LVU122
 377 00d0 8020     		movs	r0, #128
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s 			page 13


 378 00d2 4140     		eors	r1, r0
 379 00d4 5161     		str	r1, [r2, #20]
 125:Src/main.c    ****     }
 380              		.loc 1 125 7 is_stmt 1 view .LVU123
 125:Src/main.c    ****     }
 381              		.loc 1 125 12 is_stmt 0 view .LVU124
 382 00d6 5169     		ldr	r1, [r2, #20]
 125:Src/main.c    ****     }
 383              		.loc 1 125 18 view .LVU125
 384 00d8 4038     		subs	r0, r0, #64
 385 00da 4140     		eors	r1, r0
 386 00dc 5161     		str	r1, [r2, #20]
 387 00de ECE7     		b	.L11
 388              	.L17:
 389              		.align	2
 390              	.L16:
 391 00e0 00100240 		.word	1073876992
 392 00e4 00080048 		.word	1207961600
 393 00e8 FF7FFFFF 		.word	-32769
 394 00ec FFBFFFFF 		.word	-16385
 395 00f0 FFDFFFFF 		.word	-8193
 396 00f4 FFEFFFFF 		.word	-4097
 397 00f8 FFFFFF7F 		.word	2147483647
 398              		.cfi_endproc
 399              	.LFE40:
 401              		.text
 402              	.Letext0:
 403              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 404              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 405              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 406              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 407              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 408              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 409              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s:19     .text._Error_Handler:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s:25     .text._Error_Handler:00000000 _Error_Handler
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s:43     .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s:48     .text.SystemClock_Config:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s:54     .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s:157    .text.SystemClock_Config:0000006c $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s:162    .text.main:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s:168    .text.main:00000000 main
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccxf2qiV.s:391    .text.main:000000e0 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
