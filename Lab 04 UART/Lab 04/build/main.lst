ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.USART_TransmitChar,"ax",%progbits
  19              		.align	1
  20              		.global	USART_TransmitChar
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	USART_TransmitChar:
  26              	.LFB41:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   * Jaxon Parker
   4:Src/main.c    ****   * U1289670
   5:Src/main.c    ****   *
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * File Name          : main.c
   8:Src/main.c    ****   * Description        : Main program body
   9:Src/main.c    ****   ******************************************************************************
  10:Src/main.c    ****   ** This notice applies to any and all portions of this file
  11:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
  12:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  13:Src/main.c    ****   * inserted by the user or by software development tools
  14:Src/main.c    ****   * are owned by their respective copyright owners.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  19:Src/main.c    ****   * are permitted provided that the following conditions are met:
  20:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  21:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  22:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  24:Src/main.c    ****   *      and/or other materials provided with the distribution.
  25:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  26:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  27:Src/main.c    ****   *      without specific prior written permission.
  28:Src/main.c    ****   *
  29:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  32:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 2


  33:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  35:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  37:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  38:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  39:Src/main.c    ****   *
  40:Src/main.c    ****   ******************************************************************************
  41:Src/main.c    ****   */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f0xx_hal.h"
  46:Src/main.c    **** void _Error_Handler(char * file, int line);
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** void SystemClock_Config(void);
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** int main(void) {
  72:Src/main.c    ****   HAL_Init();               // Reset of all peripherals, init the Flash and Systick
  73:Src/main.c    ****   SystemClock_Config();     // Configure the system clock
  74:Src/main.c    **** 
  75:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN; // Enable the GPIOC clock in the RCC
  76:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN; // Enable GPIOB clock for USART3 pins
  77:Src/main.c    **** 
  78:Src/main.c    ****   // Configure the LED pins to slow-speed, push-pull output mode without pull-up/down resistors
  79:Src/main.c    ****   // Blue LED (PC7)
  80:Src/main.c    ****   GPIOC->MODER |= (1 << 14);
  81:Src/main.c    ****   GPIOC->MODER &= ~(1 << 15);
  82:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
  83:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 14);
  84:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 15);
  85:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 14);
  86:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 15);
  87:Src/main.c    **** 
  88:Src/main.c    ****   // Red LED (PC6)
  89:Src/main.c    ****   GPIOC->MODER |= (1 << 12);
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 3


  90:Src/main.c    ****   GPIOC->MODER &= ~(1 << 13);
  91:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
  92:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 12);
  93:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 13);
  94:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 12); 
  95:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 13); 
  96:Src/main.c    **** 
  97:Src/main.c    ****   // Green LED (PC9)
  98:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
  99:Src/main.c    ****   GPIOC->MODER &= ~(1 << 19);
 100:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 101:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 18);
 102:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 19);
 103:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 18); 
 104:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 19);
 105:Src/main.c    **** 
 106:Src/main.c    ****   // Orange LED (PC8) 
 107:Src/main.c    ****   GPIOC->MODER |= (1 << 16);
 108:Src/main.c    ****   GPIOC->MODER &= ~(1 << 17);
 109:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 110:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 16);
 111:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 17);
 112:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 16); 
 113:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 17);
 114:Src/main.c    **** 
 115:Src/main.c    ****   // User Button
 116:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOAEN; 
 117:Src/main.c    **** 
 118:Src/main.c    ****   GPIOA->MODER &= ~(3 << 0);      // Set as input
 119:Src/main.c    ****   GPIOA->OSPEEDR &= ~(3 << 0);    // Set as low speed
 120:Src/main.c    ****   GPIOA->PUPDR |= (1 << 0);       // Enable pull-down resistor
 121:Src/main.c    **** 
 122:Src/main.c    ****   // USART3 configuration for PB10 (TX) and PB11 (RX)
 123:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_USART3EN; // Enable USART3 clock
 124:Src/main.c    **** 
 125:Src/main.c    ****   // Set the Baud rate to 115200 bits/second
 126:Src/main.c    ****   uint32_t hclk_freq = HAL_RCC_GetHCLKFreq();
 127:Src/main.c    ****   uint32_t baud_rate = 115200;
 128:Src/main.c    ****   USART3->BRR = hclk_freq / baud_rate;
 129:Src/main.c    **** 
 130:Src/main.c    ****   // Enable transmitter and receiver hardware
 131:Src/main.c    ****   USART3->CR1 |= USART_CR1_TE | USART_CR1_RE;
 132:Src/main.c    **** 
 133:Src/main.c    ****   // Enable USART peripheral
 134:Src/main.c    ****   USART3->CR1 |= USART_CR1_UE;
 135:Src/main.c    **** 
 136:Src/main.c    ****   // Set PB10 and PB11 to alternate function mode
 137:Src/main.c    ****   GPIOB->MODER &= ~(GPIO_MODER_MODER10 | GPIO_MODER_MODER11);
 138:Src/main.c    ****   GPIOB->MODER |= (GPIO_MODER_MODER10_1 | GPIO_MODER_MODER11_1);
 139:Src/main.c    **** 
 140:Src/main.c    ****   // Program the correct alternate function number into the GPIO AFR registers
 141:Src/main.c    ****   GPIOB->AFR[1] |= (0x04 << GPIO_AFRH_AFSEL10_Pos) | (0x04 << GPIO_AFRH_AFSEL11_Pos);
 142:Src/main.c    **** 
 143:Src/main.c    ****   // Initialize one pin logic high and the other to low
 144:Src/main.c    ****   GPIOC->ODR |= (1 << 7);   // Red High
 145:Src/main.c    ****   GPIOC->ODR &= ~(1 << 6);  // Blue Low
 146:Src/main.c    ****   GPIOC->ODR |= (1 << 9);   // Green high
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 4


 147:Src/main.c    ****   GPIOC->ODR &= ~(1 << 8);  // Orange Low
 148:Src/main.c    **** 
 149:Src/main.c    ****   // Flag to ensure the string is transmitted only once
 150:Src/main.c    ****   uint8_t transmittedFlag = 0;
 151:Src/main.c    **** 
 152:Src/main.c    ****   while (1) {
 153:Src/main.c    ****     // Toggle red LED (PC6) with a delay of 400-600ms
 154:Src/main.c    ****     GPIOC->ODR ^= (1 << 6);
 155:Src/main.c    ****     HAL_Delay(500);
 156:Src/main.c    **** 
 157:Src/main.c    ****     // // Transmit a character (for example, 'A') using the USART
 158:Src/main.c    ****     // USART_TransmitChar('A');
 159:Src/main.c    **** 
 160:Src/main.c    ****     // Transmit the string using the USART only if not transmitted yet
 161:Src/main.c    ****     if (!transmittedFlag) {
 162:Src/main.c    ****       USART_TransmitString("Hello, USART!");
 163:Src/main.c    ****       transmittedFlag = 1; // Set the flag to indicate that the string has been transmitted
 164:Src/main.c    ****     }
 165:Src/main.c    ****   }
 166:Src/main.c    **** }
 167:Src/main.c    **** 
 168:Src/main.c    **** // Function to transmit a single character on USART3
 169:Src/main.c    **** void USART_TransmitChar(char c) {
  27              		.loc 1 169 33 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              	.L2:
 170:Src/main.c    ****   // Wait for the USART transmit data register to be empty
 171:Src/main.c    ****   while (!(USART3->ISR & USART_ISR_TXE));
  34              		.loc 1 171 10 discriminator 1 view .LVU1
  35              		.loc 1 171 18 is_stmt 0 discriminator 1 view .LVU2
  36 0000 034B     		ldr	r3, .L4
  37 0002 DB69     		ldr	r3, [r3, #28]
  38              		.loc 1 171 10 discriminator 1 view .LVU3
  39 0004 1B06     		lsls	r3, r3, #24
  40 0006 FBD5     		bpl	.L2
 172:Src/main.c    **** 
 173:Src/main.c    ****   // Write the character into the transmit data register
 174:Src/main.c    ****   USART3->TDR = (uint16_t)c;
  41              		.loc 1 174 3 is_stmt 1 view .LVU4
  42              		.loc 1 174 15 is_stmt 0 view .LVU5
  43 0008 014B     		ldr	r3, .L4
  44 000a 1885     		strh	r0, [r3, #40]
 175:Src/main.c    **** }
  45              		.loc 1 175 1 view .LVU6
  46              		@ sp needed
  47 000c 7047     		bx	lr
  48              	.L5:
  49 000e C046     		.align	2
  50              	.L4:
  51 0010 00480040 		.word	1073760256
  52              		.cfi_endproc
  53              	.LFE41:
  55              		.section	.text.USART_TransmitString,"ax",%progbits
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 5


  56              		.align	1
  57              		.global	USART_TransmitString
  58              		.syntax unified
  59              		.code	16
  60              		.thumb_func
  62              	USART_TransmitString:
  63              	.LVL1:
  64              	.LFB42:
 176:Src/main.c    **** 
 177:Src/main.c    **** // Function to transmit a string on USART3
 178:Src/main.c    **** void USART_TransmitString(const char* str) {
  65              		.loc 1 178 44 is_stmt 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69              		.loc 1 178 44 is_stmt 0 view .LVU8
  70 0000 10B5     		push	{r4, lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
  75 0002 0400     		movs	r4, r0
 179:Src/main.c    ****   // Loop over each character in the array
 180:Src/main.c    ****   while (*str != '\0') {
  76              		.loc 1 180 3 is_stmt 1 view .LVU9
  77              		.loc 1 180 9 is_stmt 0 view .LVU10
  78 0004 02E0     		b	.L7
  79              	.LVL2:
  80              	.L8:
 181:Src/main.c    ****     // Transmit the current character
 182:Src/main.c    ****     USART_TransmitChar(*str);
  81              		.loc 1 182 5 is_stmt 1 view .LVU11
  82 0006 FFF7FEFF 		bl	USART_TransmitChar
  83              	.LVL3:
 183:Src/main.c    ****     
 184:Src/main.c    ****     // Move to the next character in the array
 185:Src/main.c    ****     str++;
  84              		.loc 1 185 5 view .LVU12
  85              		.loc 1 185 8 is_stmt 0 view .LVU13
  86 000a 0134     		adds	r4, r4, #1
  87              	.LVL4:
  88              	.L7:
 180:Src/main.c    ****     // Transmit the current character
  89              		.loc 1 180 15 is_stmt 1 view .LVU14
 180:Src/main.c    ****     // Transmit the current character
  90              		.loc 1 180 10 is_stmt 0 view .LVU15
  91 000c 2078     		ldrb	r0, [r4]
 180:Src/main.c    ****     // Transmit the current character
  92              		.loc 1 180 15 view .LVU16
  93 000e 0028     		cmp	r0, #0
  94 0010 F9D1     		bne	.L8
 186:Src/main.c    ****   }
 187:Src/main.c    **** }
  95              		.loc 1 187 1 view .LVU17
  96              		@ sp needed
  97              	.LVL5:
  98              		.loc 1 187 1 view .LVU18
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 6


  99 0012 10BD     		pop	{r4, pc}
 100              		.cfi_endproc
 101              	.LFE42:
 103              		.section	.text._Error_Handler,"ax",%progbits
 104              		.align	1
 105              		.global	_Error_Handler
 106              		.syntax unified
 107              		.code	16
 108              		.thumb_func
 110              	_Error_Handler:
 111              	.LFB44:
 188:Src/main.c    **** 
 189:Src/main.c    **** /** System Clock Configuration
 190:Src/main.c    **** */
 191:Src/main.c    **** void SystemClock_Config(void)
 192:Src/main.c    **** {
 193:Src/main.c    **** 
 194:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 195:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 196:Src/main.c    **** 
 197:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 198:Src/main.c    ****     */
 199:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 200:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 201:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 202:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 203:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 204:Src/main.c    ****   {
 205:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 206:Src/main.c    ****   }
 207:Src/main.c    **** 
 208:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 209:Src/main.c    ****     */
 210:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 211:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 212:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 213:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 214:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 215:Src/main.c    **** 
 216:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 217:Src/main.c    ****   {
 218:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 219:Src/main.c    ****   }
 220:Src/main.c    **** 
 221:Src/main.c    ****     /**Configure the Systick interrupt time
 222:Src/main.c    ****     */
 223:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 224:Src/main.c    **** 
 225:Src/main.c    ****     /**Configure the Systick
 226:Src/main.c    ****     */
 227:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 228:Src/main.c    **** 
 229:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 230:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 231:Src/main.c    **** }
 232:Src/main.c    **** 
 233:Src/main.c    **** /* USER CODE BEGIN 4 */
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 7


 234:Src/main.c    **** 
 235:Src/main.c    **** /* USER CODE END 4 */
 236:Src/main.c    **** 
 237:Src/main.c    **** /**
 238:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 239:Src/main.c    ****   * @param  None
 240:Src/main.c    ****   * @retval None
 241:Src/main.c    ****   */
 242:Src/main.c    **** void _Error_Handler(char * file, int line)
 243:Src/main.c    **** {
 112              		.loc 1 243 1 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ Volatile: function does not return.
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              		@ link register save eliminated.
 118              	.LVL6:
 119              	.L10:
 244:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 245:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 246:Src/main.c    ****   while(1)
 120              		.loc 1 246 3 view .LVU20
 247:Src/main.c    ****   {
 248:Src/main.c    ****   }
 121              		.loc 1 248 3 view .LVU21
 246:Src/main.c    ****   {
 122              		.loc 1 246 8 view .LVU22
 123 0000 FEE7     		b	.L10
 124              		.cfi_endproc
 125              	.LFE44:
 127              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 128              		.align	2
 129              	.LC0:
 130 0000 5372632F 		.ascii	"Src/main.c\000"
 130      6D61696E 
 130      2E6300
 131              		.global	__aeabi_uidiv
 132              		.section	.text.SystemClock_Config,"ax",%progbits
 133              		.align	1
 134              		.global	SystemClock_Config
 135              		.syntax unified
 136              		.code	16
 137              		.thumb_func
 139              	SystemClock_Config:
 140              	.LFB43:
 192:Src/main.c    **** 
 141              		.loc 1 192 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 72
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 00B5     		push	{lr}
 146              	.LCFI1:
 147              		.cfi_def_cfa_offset 4
 148              		.cfi_offset 14, -4
 149 0002 93B0     		sub	sp, sp, #76
 150              	.LCFI2:
 151              		.cfi_def_cfa_offset 80
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 8


 194:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 152              		.loc 1 194 3 view .LVU24
 195:Src/main.c    **** 
 153              		.loc 1 195 3 view .LVU25
 199:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 154              		.loc 1 199 3 view .LVU26
 199:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 155              		.loc 1 199 36 is_stmt 0 view .LVU27
 156 0004 0223     		movs	r3, #2
 157 0006 0593     		str	r3, [sp, #20]
 200:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 158              		.loc 1 200 3 is_stmt 1 view .LVU28
 200:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 159              		.loc 1 200 30 is_stmt 0 view .LVU29
 160 0008 013B     		subs	r3, r3, #1
 161 000a 0893     		str	r3, [sp, #32]
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 162              		.loc 1 201 3 is_stmt 1 view .LVU30
 201:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 163              		.loc 1 201 41 is_stmt 0 view .LVU31
 164 000c 0F33     		adds	r3, r3, #15
 165 000e 0993     		str	r3, [sp, #36]
 202:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 166              		.loc 1 202 3 is_stmt 1 view .LVU32
 202:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 167              		.loc 1 202 34 is_stmt 0 view .LVU33
 168 0010 0023     		movs	r3, #0
 169 0012 0E93     		str	r3, [sp, #56]
 203:Src/main.c    ****   {
 170              		.loc 1 203 3 is_stmt 1 view .LVU34
 203:Src/main.c    ****   {
 171              		.loc 1 203 7 is_stmt 0 view .LVU35
 172 0014 05A8     		add	r0, sp, #20
 173 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 174              	.LVL7:
 203:Src/main.c    ****   {
 175              		.loc 1 203 6 discriminator 1 view .LVU36
 176 001a 0028     		cmp	r0, #0
 177 001c 1ED1     		bne	.L14
 210:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 178              		.loc 1 210 3 is_stmt 1 view .LVU37
 210:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 179              		.loc 1 210 31 is_stmt 0 view .LVU38
 180 001e 0723     		movs	r3, #7
 181 0020 0193     		str	r3, [sp, #4]
 212:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 182              		.loc 1 212 3 is_stmt 1 view .LVU39
 212:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 183              		.loc 1 212 34 is_stmt 0 view .LVU40
 184 0022 0023     		movs	r3, #0
 185 0024 0293     		str	r3, [sp, #8]
 213:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 186              		.loc 1 213 3 is_stmt 1 view .LVU41
 213:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 187              		.loc 1 213 35 is_stmt 0 view .LVU42
 188 0026 0393     		str	r3, [sp, #12]
 214:Src/main.c    **** 
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 9


 189              		.loc 1 214 3 is_stmt 1 view .LVU43
 214:Src/main.c    **** 
 190              		.loc 1 214 36 is_stmt 0 view .LVU44
 191 0028 0493     		str	r3, [sp, #16]
 216:Src/main.c    ****   {
 192              		.loc 1 216 3 is_stmt 1 view .LVU45
 216:Src/main.c    ****   {
 193              		.loc 1 216 7 is_stmt 0 view .LVU46
 194 002a 0021     		movs	r1, #0
 195 002c 01A8     		add	r0, sp, #4
 196 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 197              	.LVL8:
 216:Src/main.c    ****   {
 198              		.loc 1 216 6 discriminator 1 view .LVU47
 199 0032 0028     		cmp	r0, #0
 200 0034 16D1     		bne	.L15
 223:Src/main.c    **** 
 201              		.loc 1 223 3 is_stmt 1 view .LVU48
 223:Src/main.c    **** 
 202              		.loc 1 223 22 is_stmt 0 view .LVU49
 203 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 204              	.LVL9:
 223:Src/main.c    **** 
 205              		.loc 1 223 3 discriminator 1 view .LVU50
 206 003a FA21     		movs	r1, #250
 207 003c 8900     		lsls	r1, r1, #2
 208 003e FFF7FEFF 		bl	__aeabi_uidiv
 209              	.LVL10:
 210 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 211              	.LVL11:
 227:Src/main.c    **** 
 212              		.loc 1 227 3 is_stmt 1 view .LVU51
 213 0046 0420     		movs	r0, #4
 214 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 215              	.LVL12:
 230:Src/main.c    **** }
 216              		.loc 1 230 3 view .LVU52
 217 004c 0120     		movs	r0, #1
 218 004e 0022     		movs	r2, #0
 219 0050 0021     		movs	r1, #0
 220 0052 4042     		rsbs	r0, r0, #0
 221 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 222              	.LVL13:
 231:Src/main.c    **** 
 223              		.loc 1 231 1 is_stmt 0 view .LVU53
 224 0058 13B0     		add	sp, sp, #76
 225              		@ sp needed
 226 005a 00BD     		pop	{pc}
 227              	.L14:
 205:Src/main.c    ****   }
 228              		.loc 1 205 5 is_stmt 1 view .LVU54
 229 005c 0348     		ldr	r0, .L16
 230 005e CD21     		movs	r1, #205
 231 0060 FFF7FEFF 		bl	_Error_Handler
 232              	.LVL14:
 233              	.L15:
 218:Src/main.c    ****   }
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 10


 234              		.loc 1 218 5 view .LVU55
 235 0064 0148     		ldr	r0, .L16
 236 0066 DA21     		movs	r1, #218
 237 0068 FFF7FEFF 		bl	_Error_Handler
 238              	.LVL15:
 239              	.L17:
 240              		.align	2
 241              	.L16:
 242 006c 00000000 		.word	.LC0
 243              		.cfi_endproc
 244              	.LFE43:
 246              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 247              		.align	2
 248              	.LC2:
 249 0000 48656C6C 		.ascii	"Hello, USART!\000"
 249      6F2C2055 
 249      53415254 
 249      2100
 250              		.section	.text.main,"ax",%progbits
 251              		.align	1
 252              		.global	main
 253              		.syntax unified
 254              		.code	16
 255              		.thumb_func
 257              	main:
 258              	.LFB40:
  71:Src/main.c    ****   HAL_Init();               // Reset of all peripherals, init the Flash and Systick
 259              		.loc 1 71 16 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 264              	.LCFI3:
 265              		.cfi_def_cfa_offset 24
 266              		.cfi_offset 3, -24
 267              		.cfi_offset 4, -20
 268              		.cfi_offset 5, -16
 269              		.cfi_offset 6, -12
 270              		.cfi_offset 7, -8
 271              		.cfi_offset 14, -4
 272 0002 CE46     		mov	lr, r9
 273 0004 4746     		mov	r7, r8
 274 0006 80B5     		push	{r7, lr}
 275              	.LCFI4:
 276              		.cfi_def_cfa_offset 32
 277              		.cfi_offset 8, -32
 278              		.cfi_offset 9, -28
  72:Src/main.c    ****   SystemClock_Config();     // Configure the system clock
 279              		.loc 1 72 3 view .LVU57
 280 0008 FFF7FEFF 		bl	HAL_Init
 281              	.LVL16:
  73:Src/main.c    **** 
 282              		.loc 1 73 3 view .LVU58
 283 000c FFF7FEFF 		bl	SystemClock_Config
 284              	.LVL17:
  75:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN; // Enable GPIOB clock for USART3 pins
 285              		.loc 1 75 3 view .LVU59
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 11


  75:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN; // Enable GPIOB clock for USART3 pins
 286              		.loc 1 75 6 is_stmt 0 view .LVU60
 287 0010 624B     		ldr	r3, .L21
 288 0012 5969     		ldr	r1, [r3, #20]
  75:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN; // Enable GPIOB clock for USART3 pins
 289              		.loc 1 75 15 view .LVU61
 290 0014 8022     		movs	r2, #128
 291 0016 1203     		lsls	r2, r2, #12
 292 0018 0A43     		orrs	r2, r1
 293 001a 5A61     		str	r2, [r3, #20]
  76:Src/main.c    **** 
 294              		.loc 1 76 3 is_stmt 1 view .LVU62
  76:Src/main.c    **** 
 295              		.loc 1 76 6 is_stmt 0 view .LVU63
 296 001c 5A69     		ldr	r2, [r3, #20]
  76:Src/main.c    **** 
 297              		.loc 1 76 15 view .LVU64
 298 001e 8021     		movs	r1, #128
 299 0020 C902     		lsls	r1, r1, #11
 300 0022 0A43     		orrs	r2, r1
 301 0024 5A61     		str	r2, [r3, #20]
  80:Src/main.c    ****   GPIOC->MODER &= ~(1 << 15);
 302              		.loc 1 80 3 is_stmt 1 view .LVU65
  80:Src/main.c    ****   GPIOC->MODER &= ~(1 << 15);
 303              		.loc 1 80 8 is_stmt 0 view .LVU66
 304 0026 5E4C     		ldr	r4, .L21+4
 305 0028 2068     		ldr	r0, [r4]
  80:Src/main.c    ****   GPIOC->MODER &= ~(1 << 15);
 306              		.loc 1 80 16 view .LVU67
 307 002a 8022     		movs	r2, #128
 308 002c D201     		lsls	r2, r2, #7
 309 002e 0243     		orrs	r2, r0
 310 0030 2260     		str	r2, [r4]
  81:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 311              		.loc 1 81 3 is_stmt 1 view .LVU68
  81:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 312              		.loc 1 81 8 is_stmt 0 view .LVU69
 313 0032 2268     		ldr	r2, [r4]
  81:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 314              		.loc 1 81 16 view .LVU70
 315 0034 5B48     		ldr	r0, .L21+8
 316 0036 0240     		ands	r2, r0
 317 0038 2260     		str	r2, [r4]
  82:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 14);
 318              		.loc 1 82 3 is_stmt 1 view .LVU71
  82:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 14);
 319              		.loc 1 82 8 is_stmt 0 view .LVU72
 320 003a 6268     		ldr	r2, [r4, #4]
  82:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 14);
 321              		.loc 1 82 17 view .LVU73
 322 003c 8027     		movs	r7, #128
 323 003e BA43     		bics	r2, r7
 324 0040 6260     		str	r2, [r4, #4]
  83:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 15);
 325              		.loc 1 83 3 is_stmt 1 view .LVU74
  83:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 15);
 326              		.loc 1 83 8 is_stmt 0 view .LVU75
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 12


 327 0042 A268     		ldr	r2, [r4, #8]
  83:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 15);
 328              		.loc 1 83 18 view .LVU76
 329 0044 584D     		ldr	r5, .L21+12
 330 0046 2A40     		ands	r2, r5
 331 0048 A260     		str	r2, [r4, #8]
  84:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 14);
 332              		.loc 1 84 3 is_stmt 1 view .LVU77
  84:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 14);
 333              		.loc 1 84 8 is_stmt 0 view .LVU78
 334 004a A268     		ldr	r2, [r4, #8]
  84:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 14);
 335              		.loc 1 84 18 view .LVU79
 336 004c 0240     		ands	r2, r0
 337 004e A260     		str	r2, [r4, #8]
  85:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 15);
 338              		.loc 1 85 3 is_stmt 1 view .LVU80
  85:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 15);
 339              		.loc 1 85 8 is_stmt 0 view .LVU81
 340 0050 E268     		ldr	r2, [r4, #12]
  85:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 15);
 341              		.loc 1 85 16 view .LVU82
 342 0052 2A40     		ands	r2, r5
 343 0054 E260     		str	r2, [r4, #12]
  86:Src/main.c    **** 
 344              		.loc 1 86 3 is_stmt 1 view .LVU83
  86:Src/main.c    **** 
 345              		.loc 1 86 8 is_stmt 0 view .LVU84
 346 0056 E268     		ldr	r2, [r4, #12]
  86:Src/main.c    **** 
 347              		.loc 1 86 16 view .LVU85
 348 0058 0240     		ands	r2, r0
 349 005a E260     		str	r2, [r4, #12]
  89:Src/main.c    ****   GPIOC->MODER &= ~(1 << 13);
 350              		.loc 1 89 3 is_stmt 1 view .LVU86
  89:Src/main.c    ****   GPIOC->MODER &= ~(1 << 13);
 351              		.loc 1 89 8 is_stmt 0 view .LVU87
 352 005c 2068     		ldr	r0, [r4]
  89:Src/main.c    ****   GPIOC->MODER &= ~(1 << 13);
 353              		.loc 1 89 16 view .LVU88
 354 005e 8022     		movs	r2, #128
 355 0060 5201     		lsls	r2, r2, #5
 356 0062 0243     		orrs	r2, r0
 357 0064 2260     		str	r2, [r4]
  90:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
 358              		.loc 1 90 3 is_stmt 1 view .LVU89
  90:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
 359              		.loc 1 90 8 is_stmt 0 view .LVU90
 360 0066 2268     		ldr	r2, [r4]
  90:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
 361              		.loc 1 90 16 view .LVU91
 362 0068 5048     		ldr	r0, .L21+16
 363 006a 0240     		ands	r2, r0
 364 006c 2260     		str	r2, [r4]
  91:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 12);
 365              		.loc 1 91 3 is_stmt 1 view .LVU92
  91:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 12);
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 13


 366              		.loc 1 91 8 is_stmt 0 view .LVU93
 367 006e 6268     		ldr	r2, [r4, #4]
  91:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 12);
 368              		.loc 1 91 17 view .LVU94
 369 0070 4026     		movs	r6, #64
 370 0072 B243     		bics	r2, r6
 371 0074 6260     		str	r2, [r4, #4]
  92:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 13);
 372              		.loc 1 92 3 is_stmt 1 view .LVU95
  92:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 13);
 373              		.loc 1 92 8 is_stmt 0 view .LVU96
 374 0076 A268     		ldr	r2, [r4, #8]
  92:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 13);
 375              		.loc 1 92 18 view .LVU97
 376 0078 4D4D     		ldr	r5, .L21+20
 377 007a 2A40     		ands	r2, r5
 378 007c A260     		str	r2, [r4, #8]
  93:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 12); 
 379              		.loc 1 93 3 is_stmt 1 view .LVU98
  93:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 12); 
 380              		.loc 1 93 8 is_stmt 0 view .LVU99
 381 007e A268     		ldr	r2, [r4, #8]
  93:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 12); 
 382              		.loc 1 93 18 view .LVU100
 383 0080 0240     		ands	r2, r0
 384 0082 A260     		str	r2, [r4, #8]
  94:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 13); 
 385              		.loc 1 94 3 is_stmt 1 view .LVU101
  94:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 13); 
 386              		.loc 1 94 8 is_stmt 0 view .LVU102
 387 0084 E268     		ldr	r2, [r4, #12]
  94:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 13); 
 388              		.loc 1 94 16 view .LVU103
 389 0086 2A40     		ands	r2, r5
 390 0088 E260     		str	r2, [r4, #12]
  95:Src/main.c    **** 
 391              		.loc 1 95 3 is_stmt 1 view .LVU104
  95:Src/main.c    **** 
 392              		.loc 1 95 8 is_stmt 0 view .LVU105
 393 008a E268     		ldr	r2, [r4, #12]
  95:Src/main.c    **** 
 394              		.loc 1 95 16 view .LVU106
 395 008c 0240     		ands	r2, r0
 396 008e E260     		str	r2, [r4, #12]
  98:Src/main.c    ****   GPIOC->MODER &= ~(1 << 19);
 397              		.loc 1 98 3 is_stmt 1 view .LVU107
  98:Src/main.c    ****   GPIOC->MODER &= ~(1 << 19);
 398              		.loc 1 98 8 is_stmt 0 view .LVU108
 399 0090 2268     		ldr	r2, [r4]
  98:Src/main.c    ****   GPIOC->MODER &= ~(1 << 19);
 400              		.loc 1 98 16 view .LVU109
 401 0092 0A43     		orrs	r2, r1
 402 0094 2260     		str	r2, [r4]
  99:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 403              		.loc 1 99 3 is_stmt 1 view .LVU110
  99:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 404              		.loc 1 99 8 is_stmt 0 view .LVU111
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 14


 405 0096 2268     		ldr	r2, [r4]
  99:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 406              		.loc 1 99 16 view .LVU112
 407 0098 4648     		ldr	r0, .L21+24
 408 009a 0240     		ands	r2, r0
 409 009c 2260     		str	r2, [r4]
 100:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 18);
 410              		.loc 1 100 3 is_stmt 1 view .LVU113
 100:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 18);
 411              		.loc 1 100 8 is_stmt 0 view .LVU114
 412 009e 6268     		ldr	r2, [r4, #4]
 100:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 18);
 413              		.loc 1 100 17 view .LVU115
 414 00a0 454D     		ldr	r5, .L21+28
 415 00a2 2A40     		ands	r2, r5
 416 00a4 6260     		str	r2, [r4, #4]
 101:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 19);
 417              		.loc 1 101 3 is_stmt 1 view .LVU116
 101:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 19);
 418              		.loc 1 101 8 is_stmt 0 view .LVU117
 419 00a6 A268     		ldr	r2, [r4, #8]
 101:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 19);
 420              		.loc 1 101 18 view .LVU118
 421 00a8 444D     		ldr	r5, .L21+32
 422 00aa 2A40     		ands	r2, r5
 423 00ac A260     		str	r2, [r4, #8]
 102:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 18); 
 424              		.loc 1 102 3 is_stmt 1 view .LVU119
 102:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 18); 
 425              		.loc 1 102 8 is_stmt 0 view .LVU120
 426 00ae A268     		ldr	r2, [r4, #8]
 102:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 18); 
 427              		.loc 1 102 18 view .LVU121
 428 00b0 0240     		ands	r2, r0
 429 00b2 A260     		str	r2, [r4, #8]
 103:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 19);
 430              		.loc 1 103 3 is_stmt 1 view .LVU122
 103:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 19);
 431              		.loc 1 103 8 is_stmt 0 view .LVU123
 432 00b4 E268     		ldr	r2, [r4, #12]
 103:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 19);
 433              		.loc 1 103 16 view .LVU124
 434 00b6 2A40     		ands	r2, r5
 435 00b8 E260     		str	r2, [r4, #12]
 104:Src/main.c    **** 
 436              		.loc 1 104 3 is_stmt 1 view .LVU125
 104:Src/main.c    **** 
 437              		.loc 1 104 8 is_stmt 0 view .LVU126
 438 00ba E268     		ldr	r2, [r4, #12]
 104:Src/main.c    **** 
 439              		.loc 1 104 16 view .LVU127
 440 00bc 0240     		ands	r2, r0
 441 00be E260     		str	r2, [r4, #12]
 107:Src/main.c    ****   GPIOC->MODER &= ~(1 << 17);
 442              		.loc 1 107 3 is_stmt 1 view .LVU128
 107:Src/main.c    ****   GPIOC->MODER &= ~(1 << 17);
 443              		.loc 1 107 8 is_stmt 0 view .LVU129
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 15


 444 00c0 2068     		ldr	r0, [r4]
 107:Src/main.c    ****   GPIOC->MODER &= ~(1 << 17);
 445              		.loc 1 107 16 view .LVU130
 446 00c2 8022     		movs	r2, #128
 447 00c4 5202     		lsls	r2, r2, #9
 448 00c6 0243     		orrs	r2, r0
 449 00c8 2260     		str	r2, [r4]
 108:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 450              		.loc 1 108 3 is_stmt 1 view .LVU131
 108:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 451              		.loc 1 108 8 is_stmt 0 view .LVU132
 452 00ca 2268     		ldr	r2, [r4]
 108:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 453              		.loc 1 108 16 view .LVU133
 454 00cc 3C48     		ldr	r0, .L21+36
 455 00ce 0240     		ands	r2, r0
 456 00d0 2260     		str	r2, [r4]
 109:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 16);
 457              		.loc 1 109 3 is_stmt 1 view .LVU134
 109:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 16);
 458              		.loc 1 109 8 is_stmt 0 view .LVU135
 459 00d2 6268     		ldr	r2, [r4, #4]
 109:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 16);
 460              		.loc 1 109 17 view .LVU136
 461 00d4 3B4D     		ldr	r5, .L21+40
 462 00d6 A946     		mov	r9, r5
 463 00d8 2A40     		ands	r2, r5
 464 00da 6260     		str	r2, [r4, #4]
 110:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 17);
 465              		.loc 1 110 3 is_stmt 1 view .LVU137
 110:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 17);
 466              		.loc 1 110 8 is_stmt 0 view .LVU138
 467 00dc A268     		ldr	r2, [r4, #8]
 110:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 17);
 468              		.loc 1 110 18 view .LVU139
 469 00de 3A4D     		ldr	r5, .L21+44
 470 00e0 2A40     		ands	r2, r5
 471 00e2 A260     		str	r2, [r4, #8]
 111:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 16); 
 472              		.loc 1 111 3 is_stmt 1 view .LVU140
 111:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 16); 
 473              		.loc 1 111 8 is_stmt 0 view .LVU141
 474 00e4 A268     		ldr	r2, [r4, #8]
 111:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 16); 
 475              		.loc 1 111 18 view .LVU142
 476 00e6 0240     		ands	r2, r0
 477 00e8 A260     		str	r2, [r4, #8]
 112:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 17);
 478              		.loc 1 112 3 is_stmt 1 view .LVU143
 112:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 17);
 479              		.loc 1 112 8 is_stmt 0 view .LVU144
 480 00ea E268     		ldr	r2, [r4, #12]
 112:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 17);
 481              		.loc 1 112 16 view .LVU145
 482 00ec 2A40     		ands	r2, r5
 483 00ee E260     		str	r2, [r4, #12]
 113:Src/main.c    **** 
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 16


 484              		.loc 1 113 3 is_stmt 1 view .LVU146
 113:Src/main.c    **** 
 485              		.loc 1 113 8 is_stmt 0 view .LVU147
 486 00f0 E268     		ldr	r2, [r4, #12]
 113:Src/main.c    **** 
 487              		.loc 1 113 16 view .LVU148
 488 00f2 0240     		ands	r2, r0
 489 00f4 E260     		str	r2, [r4, #12]
 116:Src/main.c    **** 
 490              		.loc 1 116 3 is_stmt 1 view .LVU149
 116:Src/main.c    **** 
 491              		.loc 1 116 6 is_stmt 0 view .LVU150
 492 00f6 5869     		ldr	r0, [r3, #20]
 116:Src/main.c    **** 
 493              		.loc 1 116 15 view .LVU151
 494 00f8 8022     		movs	r2, #128
 495 00fa 9202     		lsls	r2, r2, #10
 496 00fc 0243     		orrs	r2, r0
 497 00fe 5A61     		str	r2, [r3, #20]
 118:Src/main.c    ****   GPIOA->OSPEEDR &= ~(3 << 0);    // Set as low speed
 498              		.loc 1 118 3 is_stmt 1 view .LVU152
 118:Src/main.c    ****   GPIOA->OSPEEDR &= ~(3 << 0);    // Set as low speed
 499              		.loc 1 118 8 is_stmt 0 view .LVU153
 500 0100 9022     		movs	r2, #144
 501 0102 D205     		lsls	r2, r2, #23
 502 0104 1068     		ldr	r0, [r2]
 118:Src/main.c    ****   GPIOA->OSPEEDR &= ~(3 << 0);    // Set as low speed
 503              		.loc 1 118 16 view .LVU154
 504 0106 0325     		movs	r5, #3
 505 0108 A843     		bics	r0, r5
 506 010a 1060     		str	r0, [r2]
 119:Src/main.c    ****   GPIOA->PUPDR |= (1 << 0);       // Enable pull-down resistor
 507              		.loc 1 119 3 is_stmt 1 view .LVU155
 119:Src/main.c    ****   GPIOA->PUPDR |= (1 << 0);       // Enable pull-down resistor
 508              		.loc 1 119 8 is_stmt 0 view .LVU156
 509 010c 9068     		ldr	r0, [r2, #8]
 119:Src/main.c    ****   GPIOA->PUPDR |= (1 << 0);       // Enable pull-down resistor
 510              		.loc 1 119 18 view .LVU157
 511 010e A843     		bics	r0, r5
 512 0110 9060     		str	r0, [r2, #8]
 120:Src/main.c    **** 
 513              		.loc 1 120 3 is_stmt 1 view .LVU158
 120:Src/main.c    **** 
 514              		.loc 1 120 8 is_stmt 0 view .LVU159
 515 0112 D068     		ldr	r0, [r2, #12]
 120:Src/main.c    **** 
 516              		.loc 1 120 16 view .LVU160
 517 0114 023D     		subs	r5, r5, #2
 518 0116 2843     		orrs	r0, r5
 519 0118 D060     		str	r0, [r2, #12]
 123:Src/main.c    **** 
 520              		.loc 1 123 3 is_stmt 1 view .LVU161
 123:Src/main.c    **** 
 521              		.loc 1 123 6 is_stmt 0 view .LVU162
 522 011a DA69     		ldr	r2, [r3, #28]
 123:Src/main.c    **** 
 523              		.loc 1 123 16 view .LVU163
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 17


 524 011c 1143     		orrs	r1, r2
 525 011e D961     		str	r1, [r3, #28]
 126:Src/main.c    ****   uint32_t baud_rate = 115200;
 526              		.loc 1 126 3 is_stmt 1 view .LVU164
 126:Src/main.c    ****   uint32_t baud_rate = 115200;
 527              		.loc 1 126 24 is_stmt 0 view .LVU165
 528 0120 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 529              	.LVL18:
 127:Src/main.c    ****   USART3->BRR = hclk_freq / baud_rate;
 530              		.loc 1 127 3 is_stmt 1 view .LVU166
 128:Src/main.c    **** 
 531              		.loc 1 128 3 view .LVU167
 128:Src/main.c    **** 
 532              		.loc 1 128 27 is_stmt 0 view .LVU168
 533 0124 E121     		movs	r1, #225
 534 0126 4902     		lsls	r1, r1, #9
 535 0128 FFF7FEFF 		bl	__aeabi_uidiv
 536              	.LVL19:
 128:Src/main.c    **** 
 537              		.loc 1 128 15 view .LVU169
 538 012c 274B     		ldr	r3, .L21+48
 539 012e D860     		str	r0, [r3, #12]
 131:Src/main.c    **** 
 540              		.loc 1 131 3 is_stmt 1 view .LVU170
 131:Src/main.c    **** 
 541              		.loc 1 131 9 is_stmt 0 view .LVU171
 542 0130 1A68     		ldr	r2, [r3]
 131:Src/main.c    **** 
 543              		.loc 1 131 15 view .LVU172
 544 0132 0C21     		movs	r1, #12
 545 0134 0A43     		orrs	r2, r1
 546 0136 1A60     		str	r2, [r3]
 134:Src/main.c    **** 
 547              		.loc 1 134 3 is_stmt 1 view .LVU173
 134:Src/main.c    **** 
 548              		.loc 1 134 9 is_stmt 0 view .LVU174
 549 0138 1A68     		ldr	r2, [r3]
 134:Src/main.c    **** 
 550              		.loc 1 134 15 view .LVU175
 551 013a 2A43     		orrs	r2, r5
 552 013c 1A60     		str	r2, [r3]
 137:Src/main.c    ****   GPIOB->MODER |= (GPIO_MODER_MODER10_1 | GPIO_MODER_MODER11_1);
 553              		.loc 1 137 3 is_stmt 1 view .LVU176
 137:Src/main.c    ****   GPIOB->MODER |= (GPIO_MODER_MODER10_1 | GPIO_MODER_MODER11_1);
 554              		.loc 1 137 8 is_stmt 0 view .LVU177
 555 013e 244B     		ldr	r3, .L21+52
 556 0140 1A68     		ldr	r2, [r3]
 137:Src/main.c    ****   GPIOB->MODER |= (GPIO_MODER_MODER10_1 | GPIO_MODER_MODER11_1);
 557              		.loc 1 137 16 view .LVU178
 558 0142 2449     		ldr	r1, .L21+56
 559 0144 0A40     		ands	r2, r1
 560 0146 1A60     		str	r2, [r3]
 138:Src/main.c    **** 
 561              		.loc 1 138 3 is_stmt 1 view .LVU179
 138:Src/main.c    **** 
 562              		.loc 1 138 8 is_stmt 0 view .LVU180
 563 0148 1968     		ldr	r1, [r3]
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 18


 138:Src/main.c    **** 
 564              		.loc 1 138 16 view .LVU181
 565 014a A022     		movs	r2, #160
 566 014c 1204     		lsls	r2, r2, #16
 567 014e 0A43     		orrs	r2, r1
 568 0150 1A60     		str	r2, [r3]
 141:Src/main.c    **** 
 569              		.loc 1 141 3 is_stmt 1 view .LVU182
 141:Src/main.c    **** 
 570              		.loc 1 141 13 is_stmt 0 view .LVU183
 571 0152 596A     		ldr	r1, [r3, #36]
 141:Src/main.c    **** 
 572              		.loc 1 141 17 view .LVU184
 573 0154 8822     		movs	r2, #136
 574 0156 D201     		lsls	r2, r2, #7
 575 0158 0A43     		orrs	r2, r1
 576 015a 5A62     		str	r2, [r3, #36]
 144:Src/main.c    ****   GPIOC->ODR &= ~(1 << 6);  // Blue Low
 577              		.loc 1 144 3 is_stmt 1 view .LVU185
 144:Src/main.c    ****   GPIOC->ODR &= ~(1 << 6);  // Blue Low
 578              		.loc 1 144 8 is_stmt 0 view .LVU186
 579 015c 6369     		ldr	r3, [r4, #20]
 144:Src/main.c    ****   GPIOC->ODR &= ~(1 << 6);  // Blue Low
 580              		.loc 1 144 14 view .LVU187
 581 015e 3B43     		orrs	r3, r7
 582 0160 6361     		str	r3, [r4, #20]
 145:Src/main.c    ****   GPIOC->ODR |= (1 << 9);   // Green high
 583              		.loc 1 145 3 is_stmt 1 view .LVU188
 145:Src/main.c    ****   GPIOC->ODR |= (1 << 9);   // Green high
 584              		.loc 1 145 8 is_stmt 0 view .LVU189
 585 0162 6369     		ldr	r3, [r4, #20]
 145:Src/main.c    ****   GPIOC->ODR |= (1 << 9);   // Green high
 586              		.loc 1 145 14 view .LVU190
 587 0164 B343     		bics	r3, r6
 588 0166 6361     		str	r3, [r4, #20]
 146:Src/main.c    ****   GPIOC->ODR &= ~(1 << 8);  // Orange Low
 589              		.loc 1 146 3 is_stmt 1 view .LVU191
 146:Src/main.c    ****   GPIOC->ODR &= ~(1 << 8);  // Orange Low
 590              		.loc 1 146 8 is_stmt 0 view .LVU192
 591 0168 6269     		ldr	r2, [r4, #20]
 146:Src/main.c    ****   GPIOC->ODR &= ~(1 << 8);  // Orange Low
 592              		.loc 1 146 14 view .LVU193
 593 016a 8023     		movs	r3, #128
 594 016c 9B00     		lsls	r3, r3, #2
 595 016e 1343     		orrs	r3, r2
 596 0170 6361     		str	r3, [r4, #20]
 147:Src/main.c    **** 
 597              		.loc 1 147 3 is_stmt 1 view .LVU194
 147:Src/main.c    **** 
 598              		.loc 1 147 8 is_stmt 0 view .LVU195
 599 0172 6369     		ldr	r3, [r4, #20]
 147:Src/main.c    **** 
 600              		.loc 1 147 14 view .LVU196
 601 0174 4A46     		mov	r2, r9
 602 0176 1340     		ands	r3, r2
 603 0178 6361     		str	r3, [r4, #20]
 150:Src/main.c    **** 
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 19


 604              		.loc 1 150 3 is_stmt 1 view .LVU197
 605              	.LVL20:
 150:Src/main.c    **** 
 606              		.loc 1 150 11 is_stmt 0 view .LVU198
 607 017a 0024     		movs	r4, #0
 608              	.LVL21:
 609              	.L19:
 152:Src/main.c    ****     // Toggle red LED (PC6) with a delay of 400-600ms
 610              		.loc 1 152 3 is_stmt 1 view .LVU199
 154:Src/main.c    ****     HAL_Delay(500);
 611              		.loc 1 154 5 view .LVU200
 154:Src/main.c    ****     HAL_Delay(500);
 612              		.loc 1 154 10 is_stmt 0 view .LVU201
 613 017c 084A     		ldr	r2, .L21+4
 614 017e 5369     		ldr	r3, [r2, #20]
 154:Src/main.c    ****     HAL_Delay(500);
 615              		.loc 1 154 16 view .LVU202
 616 0180 4021     		movs	r1, #64
 617 0182 4B40     		eors	r3, r1
 618 0184 5361     		str	r3, [r2, #20]
 155:Src/main.c    **** 
 619              		.loc 1 155 5 is_stmt 1 view .LVU203
 620 0186 FA20     		movs	r0, #250
 621 0188 4000     		lsls	r0, r0, #1
 622 018a FFF7FEFF 		bl	HAL_Delay
 623              	.LVL22:
 161:Src/main.c    ****       USART_TransmitString("Hello, USART!");
 624              		.loc 1 161 5 view .LVU204
 161:Src/main.c    ****       USART_TransmitString("Hello, USART!");
 625              		.loc 1 161 8 is_stmt 0 view .LVU205
 626 018e 002C     		cmp	r4, #0
 627 0190 F4D1     		bne	.L19
 628              	.LBB2:
 162:Src/main.c    ****       transmittedFlag = 1; // Set the flag to indicate that the string has been transmitted
 629              		.loc 1 162 7 is_stmt 1 view .LVU206
 630 0192 1148     		ldr	r0, .L21+60
 631 0194 FFF7FEFF 		bl	USART_TransmitString
 632              	.LVL23:
 163:Src/main.c    ****     }
 633              		.loc 1 163 7 view .LVU207
 163:Src/main.c    ****     }
 634              		.loc 1 163 23 is_stmt 0 view .LVU208
 635 0198 0134     		adds	r4, r4, #1
 636 019a EFE7     		b	.L19
 637              	.L22:
 638              		.align	2
 639              	.L21:
 640 019c 00100240 		.word	1073876992
 641 01a0 00080048 		.word	1207961600
 642 01a4 FF7FFFFF 		.word	-32769
 643 01a8 FFBFFFFF 		.word	-16385
 644 01ac FFDFFFFF 		.word	-8193
 645 01b0 FFEFFFFF 		.word	-4097
 646 01b4 FFFFF7FF 		.word	-524289
 647 01b8 FFFDFFFF 		.word	-513
 648 01bc FFFFFBFF 		.word	-262145
 649 01c0 FFFFFDFF 		.word	-131073
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 20


 650 01c4 FFFEFFFF 		.word	-257
 651 01c8 FFFFFEFF 		.word	-65537
 652 01cc 00480040 		.word	1073760256
 653 01d0 00040048 		.word	1207960576
 654 01d4 FFFF0FFF 		.word	-15728641
 655 01d8 00000000 		.word	.LC2
 656              	.LBE2:
 657              		.cfi_endproc
 658              	.LFE40:
 660              		.text
 661              	.Letext0:
 662              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 663              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 664              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 665              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 666              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 667              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 668              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s:19     .text.USART_TransmitChar:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s:25     .text.USART_TransmitChar:00000000 USART_TransmitChar
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s:51     .text.USART_TransmitChar:00000010 $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s:56     .text.USART_TransmitString:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s:62     .text.USART_TransmitString:00000000 USART_TransmitString
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s:104    .text._Error_Handler:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s:110    .text._Error_Handler:00000000 _Error_Handler
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s:128    .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s:133    .text.SystemClock_Config:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s:139    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s:242    .text.SystemClock_Config:0000006c $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s:247    .rodata.main.str1.4:00000000 $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s:251    .text.main:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s:257    .text.main:00000000 main
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccloMAR5.s:640    .text.main:0000019c $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
HAL_Delay
