ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text.USART_TransmitChar,"ax",%progbits
  19              		.align	1
  20              		.global	USART_TransmitChar
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	USART_TransmitChar:
  26              	.LFB42:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   * Jaxon Parker
   4:Src/main.c    ****   * U1289670
   5:Src/main.c    ****   *
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * File Name          : main.c
   8:Src/main.c    ****   * Description        : Main program body
   9:Src/main.c    ****   ******************************************************************************
  10:Src/main.c    ****   ** This notice applies to any and all portions of this file
  11:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
  12:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  13:Src/main.c    ****   * inserted by the user or by software development tools
  14:Src/main.c    ****   * are owned by their respective copyright owners.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  19:Src/main.c    ****   * are permitted provided that the following conditions are met:
  20:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  21:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  22:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  24:Src/main.c    ****   *      and/or other materials provided with the distribution.
  25:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  26:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  27:Src/main.c    ****   *      without specific prior written permission.
  28:Src/main.c    ****   *
  29:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  32:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 2


  33:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  35:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  37:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  38:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  39:Src/main.c    ****   *
  40:Src/main.c    ****   ******************************************************************************
  41:Src/main.c    ****   */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f0xx_hal.h"
  46:Src/main.c    **** void _Error_Handler(char * file, int line);
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** void SystemClock_Config(void);
  61:Src/main.c    **** 
  62:Src/main.c    **** // Function prototypes
  63:Src/main.c    **** char USART_ReceiveChar(void);
  64:Src/main.c    **** void USART_TransmitString(const char* str);
  65:Src/main.c    **** void USART_TransmitChar(char c);
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN PFP */
  68:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE END PFP */
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE BEGIN 0 */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* USER CODE END 0 */
  75:Src/main.c    **** 
  76:Src/main.c    **** int main(void) {
  77:Src/main.c    ****   HAL_Init();               // Reset of all peripherals, init the Flash and Systick
  78:Src/main.c    ****   SystemClock_Config();     // Configure the system clock
  79:Src/main.c    **** 
  80:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOCEN; // Enable the GPIOC clock in the RCC
  81:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN; // Enable GPIOB clock for USART3 pins
  82:Src/main.c    **** 
  83:Src/main.c    ****   // Configure the LED pins to slow-speed, push-pull output mode without pull-up/down resistors
  84:Src/main.c    ****   // Blue LED (PC7)
  85:Src/main.c    ****   GPIOC->MODER |= (1 << 14);
  86:Src/main.c    ****   GPIOC->MODER &= ~(1 << 15);
  87:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
  88:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 14);
  89:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 15);
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 3


  90:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 14);
  91:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 15);
  92:Src/main.c    **** 
  93:Src/main.c    ****   // Red LED (PC6)
  94:Src/main.c    ****   GPIOC->MODER |= (1 << 12);
  95:Src/main.c    ****   GPIOC->MODER &= ~(1 << 13);
  96:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
  97:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 12);
  98:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 13);
  99:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 12); 
 100:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 13); 
 101:Src/main.c    **** 
 102:Src/main.c    ****   // Green LED (PC9)
 103:Src/main.c    ****   GPIOC->MODER |= (1 << 18);
 104:Src/main.c    ****   GPIOC->MODER &= ~(1 << 19);
 105:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 106:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 18);
 107:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 19);
 108:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 18); 
 109:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 19);
 110:Src/main.c    **** 
 111:Src/main.c    ****   // Orange LED (PC8) 
 112:Src/main.c    ****   GPIOC->MODER |= (1 << 16);
 113:Src/main.c    ****   GPIOC->MODER &= ~(1 << 17);
 114:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 115:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 16);
 116:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 17);
 117:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 16); 
 118:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 17);
 119:Src/main.c    **** 
 120:Src/main.c    ****   // User Button
 121:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOAEN; 
 122:Src/main.c    **** 
 123:Src/main.c    ****   GPIOA->MODER &= ~(3 << 0);      // Set as input
 124:Src/main.c    ****   GPIOA->OSPEEDR &= ~(3 << 0);    // Set as low speed
 125:Src/main.c    ****   GPIOA->PUPDR |= (1 << 0);       // Enable pull-down resistor
 126:Src/main.c    **** 
 127:Src/main.c    ****   // USART3 configuration for PB10 (TX) and PB11 (RX)
 128:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_USART3EN; // Enable USART3 clock
 129:Src/main.c    **** 
 130:Src/main.c    ****   // Set the Baud rate to 115200 bits/second
 131:Src/main.c    ****   uint32_t hclk_freq = HAL_RCC_GetHCLKFreq();
 132:Src/main.c    ****   uint32_t baud_rate = 115200;
 133:Src/main.c    ****   USART3->BRR = hclk_freq / baud_rate;
 134:Src/main.c    **** 
 135:Src/main.c    ****   // Enable transmitter and receiver hardware
 136:Src/main.c    ****   USART3->CR1 |= USART_CR1_TE | USART_CR1_RE;
 137:Src/main.c    **** 
 138:Src/main.c    ****   // Enable USART peripheral
 139:Src/main.c    ****   USART3->CR1 |= USART_CR1_UE;
 140:Src/main.c    **** 
 141:Src/main.c    ****   // Set PB10 and PB11 to alternate function mode
 142:Src/main.c    ****   GPIOB->MODER &= ~(GPIO_MODER_MODER10 | GPIO_MODER_MODER11);
 143:Src/main.c    ****   GPIOB->MODER |= (GPIO_MODER_MODER10_1 | GPIO_MODER_MODER11_1);
 144:Src/main.c    **** 
 145:Src/main.c    ****   // Program the correct alternate function number into the GPIO AFR registers
 146:Src/main.c    ****   GPIOB->AFR[1] |= (0x04 << GPIO_AFRH_AFSEL10_Pos) | (0x04 << GPIO_AFRH_AFSEL11_Pos);
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 4


 147:Src/main.c    **** 
 148:Src/main.c    ****   // Initialize one pin logic high and the other to low
 149:Src/main.c    ****   GPIOC->ODR |= (1 << 7);   // Red High
 150:Src/main.c    ****   GPIOC->ODR &= ~(1 << 6);  // Blue Low
 151:Src/main.c    ****   GPIOC->ODR &= ~(1 << 9);   // Green Low
 152:Src/main.c    ****   GPIOC->ODR &= ~(1 << 8);  // Orange Low
 153:Src/main.c    **** 
 154:Src/main.c    ****   // Flag to ensure the string is transmitted only once
 155:Src/main.c    ****   uint8_t transmittedFlag = 0;
 156:Src/main.c    **** 
 157:Src/main.c    ****   char receivedChar;
 158:Src/main.c    **** 
 159:Src/main.c    ****   while (1) {
 160:Src/main.c    ****     // Wait for a character to be received
 161:Src/main.c    ****     receivedChar = USART_ReceiveChar();
 162:Src/main.c    **** 
 163:Src/main.c    ****     // Toggle the appropriate LED based on the received character
 164:Src/main.c    ****     switch (receivedChar) {
 165:Src/main.c    ****       case 'r':
 166:Src/main.c    ****         // Toggle red LED
 167:Src/main.c    ****         GPIOC->ODR ^= (1 << 6);
 168:Src/main.c    ****         break;
 169:Src/main.c    ****       case 'g':
 170:Src/main.c    ****         // Toggle green LED
 171:Src/main.c    ****         GPIOC->ODR ^= (1 << 9);
 172:Src/main.c    ****         break;
 173:Src/main.c    ****       case 'b':
 174:Src/main.c    ****         // Toggle blue LED
 175:Src/main.c    ****         GPIOC->ODR ^= (1 << 7);
 176:Src/main.c    ****         break;
 177:Src/main.c    ****       case 'o':
 178:Src/main.c    ****         // Toggle orange LED
 179:Src/main.c    ****         GPIOC->ODR ^= (1 << 8);
 180:Src/main.c    ****         break;
 181:Src/main.c    ****       default:
 182:Src/main.c    ****         // Print an error message for unrecognized characters
 183:Src/main.c    ****         USART_TransmitString("Error: Unrecognized command!\r\n");
 184:Src/main.c    ****     }
 185:Src/main.c    ****   }
 186:Src/main.c    **** 
 187:Src/main.c    ****   // while (1) {
 188:Src/main.c    ****     // // Toggle red LED (PC6) with a delay of 400-600ms
 189:Src/main.c    ****     // GPIOC->ODR ^= (1 << 6);
 190:Src/main.c    ****     // HAL_Delay(500);
 191:Src/main.c    **** 
 192:Src/main.c    ****     // // // Transmit a character (for example, 'A') using the USART
 193:Src/main.c    ****     // // USART_TransmitChar('A');
 194:Src/main.c    **** 
 195:Src/main.c    ****     // // Transmit the string using the USART only if not transmitted yet
 196:Src/main.c    ****     // if (!transmittedFlag) {
 197:Src/main.c    ****     //   USART_TransmitString("Hello, USART!");
 198:Src/main.c    ****     //   transmittedFlag = 1; // Set the flag to indicate that the string has been transmitted
 199:Src/main.c    ****     // }
 200:Src/main.c    ****   // }
 201:Src/main.c    **** }
 202:Src/main.c    **** 
 203:Src/main.c    **** // Function to transmit a string on USART3
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 5


 204:Src/main.c    **** void USART_TransmitString(const char* str) {
 205:Src/main.c    ****   // Loop over each character in the array
 206:Src/main.c    ****   while (*str != '\0') {
 207:Src/main.c    ****     // Transmit the current character
 208:Src/main.c    ****     USART_TransmitChar(*str);
 209:Src/main.c    ****     
 210:Src/main.c    ****     // Move to the next character in the array
 211:Src/main.c    ****     str++;
 212:Src/main.c    ****   }
 213:Src/main.c    **** }
 214:Src/main.c    **** 
 215:Src/main.c    **** // Function to transmit a single character on USART3
 216:Src/main.c    **** void USART_TransmitChar(char c) {
  27              		.loc 1 216 33 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              	.L2:
 217:Src/main.c    ****   // Wait for the USART transmit data register to be empty
 218:Src/main.c    ****   while (!(USART3->ISR & USART_ISR_TXE));
  34              		.loc 1 218 10 discriminator 1 view .LVU1
  35              		.loc 1 218 18 is_stmt 0 discriminator 1 view .LVU2
  36 0000 034B     		ldr	r3, .L4
  37 0002 DB69     		ldr	r3, [r3, #28]
  38              		.loc 1 218 10 discriminator 1 view .LVU3
  39 0004 1B06     		lsls	r3, r3, #24
  40 0006 FBD5     		bpl	.L2
 219:Src/main.c    **** 
 220:Src/main.c    ****   // Write the character into the transmit data register
 221:Src/main.c    ****   USART3->TDR = (uint16_t)c;
  41              		.loc 1 221 3 is_stmt 1 view .LVU4
  42              		.loc 1 221 15 is_stmt 0 view .LVU5
  43 0008 014B     		ldr	r3, .L4
  44 000a 1885     		strh	r0, [r3, #40]
 222:Src/main.c    **** }
  45              		.loc 1 222 1 view .LVU6
  46              		@ sp needed
  47 000c 7047     		bx	lr
  48              	.L5:
  49 000e C046     		.align	2
  50              	.L4:
  51 0010 00480040 		.word	1073760256
  52              		.cfi_endproc
  53              	.LFE42:
  55              		.section	.text.USART_TransmitString,"ax",%progbits
  56              		.align	1
  57              		.global	USART_TransmitString
  58              		.syntax unified
  59              		.code	16
  60              		.thumb_func
  62              	USART_TransmitString:
  63              	.LVL1:
  64              	.LFB41:
 204:Src/main.c    ****   // Loop over each character in the array
  65              		.loc 1 204 44 is_stmt 1 view -0
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 6


  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 0
  68              		@ frame_needed = 0, uses_anonymous_args = 0
 204:Src/main.c    ****   // Loop over each character in the array
  69              		.loc 1 204 44 is_stmt 0 view .LVU8
  70 0000 10B5     		push	{r4, lr}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 4, -8
  74              		.cfi_offset 14, -4
  75 0002 0400     		movs	r4, r0
 206:Src/main.c    ****     // Transmit the current character
  76              		.loc 1 206 3 is_stmt 1 view .LVU9
 206:Src/main.c    ****     // Transmit the current character
  77              		.loc 1 206 9 is_stmt 0 view .LVU10
  78 0004 02E0     		b	.L7
  79              	.LVL2:
  80              	.L8:
 208:Src/main.c    ****     
  81              		.loc 1 208 5 is_stmt 1 view .LVU11
  82 0006 FFF7FEFF 		bl	USART_TransmitChar
  83              	.LVL3:
 211:Src/main.c    ****   }
  84              		.loc 1 211 5 view .LVU12
 211:Src/main.c    ****   }
  85              		.loc 1 211 8 is_stmt 0 view .LVU13
  86 000a 0134     		adds	r4, r4, #1
  87              	.LVL4:
  88              	.L7:
 206:Src/main.c    ****     // Transmit the current character
  89              		.loc 1 206 15 is_stmt 1 view .LVU14
 206:Src/main.c    ****     // Transmit the current character
  90              		.loc 1 206 10 is_stmt 0 view .LVU15
  91 000c 2078     		ldrb	r0, [r4]
 206:Src/main.c    ****     // Transmit the current character
  92              		.loc 1 206 15 view .LVU16
  93 000e 0028     		cmp	r0, #0
  94 0010 F9D1     		bne	.L8
 213:Src/main.c    **** 
  95              		.loc 1 213 1 view .LVU17
  96              		@ sp needed
  97              	.LVL5:
 213:Src/main.c    **** 
  98              		.loc 1 213 1 view .LVU18
  99 0012 10BD     		pop	{r4, pc}
 100              		.cfi_endproc
 101              	.LFE41:
 103              		.section	.text.USART_ReceiveChar,"ax",%progbits
 104              		.align	1
 105              		.global	USART_ReceiveChar
 106              		.syntax unified
 107              		.code	16
 108              		.thumb_func
 110              	USART_ReceiveChar:
 111              	.LFB43:
 223:Src/main.c    **** 
 224:Src/main.c    **** // Function to receive a single character on USART3 (blocking)
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 7


 225:Src/main.c    **** char USART_ReceiveChar(void) {
 112              		.loc 1 225 30 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.L10:
 226:Src/main.c    ****   // Wait for the USART receive data register to not be empty
 227:Src/main.c    ****   while (!(USART3->ISR & USART_ISR_RXNE));
 118              		.loc 1 227 10 discriminator 1 view .LVU20
 119              		.loc 1 227 18 is_stmt 0 discriminator 1 view .LVU21
 120 0000 034B     		ldr	r3, .L12
 121 0002 DB69     		ldr	r3, [r3, #28]
 122              		.loc 1 227 10 discriminator 1 view .LVU22
 123 0004 9B06     		lsls	r3, r3, #26
 124 0006 FBD5     		bpl	.L10
 228:Src/main.c    **** 
 229:Src/main.c    ****   // Read and return the received character
 230:Src/main.c    ****   return (char)(USART3->RDR & 0xFF);
 125              		.loc 1 230 3 is_stmt 1 view .LVU23
 126              		.loc 1 230 23 is_stmt 0 view .LVU24
 127 0008 014B     		ldr	r3, .L12
 128 000a 988C     		ldrh	r0, [r3, #36]
 129              		.loc 1 230 10 discriminator 1 view .LVU25
 130 000c C0B2     		uxtb	r0, r0
 231:Src/main.c    **** }
 131              		.loc 1 231 1 view .LVU26
 132              		@ sp needed
 133 000e 7047     		bx	lr
 134              	.L13:
 135              		.align	2
 136              	.L12:
 137 0010 00480040 		.word	1073760256
 138              		.cfi_endproc
 139              	.LFE43:
 141              		.section	.text._Error_Handler,"ax",%progbits
 142              		.align	1
 143              		.global	_Error_Handler
 144              		.syntax unified
 145              		.code	16
 146              		.thumb_func
 148              	_Error_Handler:
 149              	.LFB45:
 232:Src/main.c    **** 
 233:Src/main.c    **** /** System Clock Configuration
 234:Src/main.c    **** */
 235:Src/main.c    **** void SystemClock_Config(void)
 236:Src/main.c    **** {
 237:Src/main.c    **** 
 238:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 239:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 240:Src/main.c    **** 
 241:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 242:Src/main.c    ****     */
 243:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 244:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 245:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 8


 246:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 247:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 248:Src/main.c    ****   {
 249:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 250:Src/main.c    ****   }
 251:Src/main.c    **** 
 252:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 253:Src/main.c    ****     */
 254:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 255:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 256:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 257:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 258:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 259:Src/main.c    **** 
 260:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 261:Src/main.c    ****   {
 262:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 263:Src/main.c    ****   }
 264:Src/main.c    **** 
 265:Src/main.c    ****     /**Configure the Systick interrupt time
 266:Src/main.c    ****     */
 267:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 268:Src/main.c    **** 
 269:Src/main.c    ****     /**Configure the Systick
 270:Src/main.c    ****     */
 271:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 272:Src/main.c    **** 
 273:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 274:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 275:Src/main.c    **** }
 276:Src/main.c    **** 
 277:Src/main.c    **** /* USER CODE BEGIN 4 */
 278:Src/main.c    **** 
 279:Src/main.c    **** /* USER CODE END 4 */
 280:Src/main.c    **** 
 281:Src/main.c    **** /**
 282:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 283:Src/main.c    ****   * @param  None
 284:Src/main.c    ****   * @retval None
 285:Src/main.c    ****   */
 286:Src/main.c    **** void _Error_Handler(char * file, int line)
 287:Src/main.c    **** {
 150              		.loc 1 287 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ Volatile: function does not return.
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 156              	.LVL6:
 157              	.L15:
 288:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 289:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 290:Src/main.c    ****   while(1)
 158              		.loc 1 290 3 view .LVU28
 291:Src/main.c    ****   {
 292:Src/main.c    ****   }
 159              		.loc 1 292 3 view .LVU29
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 9


 290:Src/main.c    ****   {
 160              		.loc 1 290 8 view .LVU30
 161 0000 FEE7     		b	.L15
 162              		.cfi_endproc
 163              	.LFE45:
 165              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 166              		.align	2
 167              	.LC0:
 168 0000 5372632F 		.ascii	"Src/main.c\000"
 168      6D61696E 
 168      2E6300
 169              		.global	__aeabi_uidiv
 170              		.section	.text.SystemClock_Config,"ax",%progbits
 171              		.align	1
 172              		.global	SystemClock_Config
 173              		.syntax unified
 174              		.code	16
 175              		.thumb_func
 177              	SystemClock_Config:
 178              	.LFB44:
 236:Src/main.c    **** 
 179              		.loc 1 236 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 72
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 00B5     		push	{lr}
 184              	.LCFI1:
 185              		.cfi_def_cfa_offset 4
 186              		.cfi_offset 14, -4
 187 0002 93B0     		sub	sp, sp, #76
 188              	.LCFI2:
 189              		.cfi_def_cfa_offset 80
 238:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 190              		.loc 1 238 3 view .LVU32
 239:Src/main.c    **** 
 191              		.loc 1 239 3 view .LVU33
 243:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 192              		.loc 1 243 3 view .LVU34
 243:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 193              		.loc 1 243 36 is_stmt 0 view .LVU35
 194 0004 0223     		movs	r3, #2
 195 0006 0593     		str	r3, [sp, #20]
 244:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 196              		.loc 1 244 3 is_stmt 1 view .LVU36
 244:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 197              		.loc 1 244 30 is_stmt 0 view .LVU37
 198 0008 013B     		subs	r3, r3, #1
 199 000a 0893     		str	r3, [sp, #32]
 245:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 200              		.loc 1 245 3 is_stmt 1 view .LVU38
 245:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 201              		.loc 1 245 41 is_stmt 0 view .LVU39
 202 000c 0F33     		adds	r3, r3, #15
 203 000e 0993     		str	r3, [sp, #36]
 246:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 204              		.loc 1 246 3 is_stmt 1 view .LVU40
 246:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 10


 205              		.loc 1 246 34 is_stmt 0 view .LVU41
 206 0010 0023     		movs	r3, #0
 207 0012 0E93     		str	r3, [sp, #56]
 247:Src/main.c    ****   {
 208              		.loc 1 247 3 is_stmt 1 view .LVU42
 247:Src/main.c    ****   {
 209              		.loc 1 247 7 is_stmt 0 view .LVU43
 210 0014 05A8     		add	r0, sp, #20
 211 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 212              	.LVL7:
 247:Src/main.c    ****   {
 213              		.loc 1 247 6 discriminator 1 view .LVU44
 214 001a 0028     		cmp	r0, #0
 215 001c 1ED1     		bne	.L19
 254:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 216              		.loc 1 254 3 is_stmt 1 view .LVU45
 254:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 217              		.loc 1 254 31 is_stmt 0 view .LVU46
 218 001e 0723     		movs	r3, #7
 219 0020 0193     		str	r3, [sp, #4]
 256:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 220              		.loc 1 256 3 is_stmt 1 view .LVU47
 256:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 221              		.loc 1 256 34 is_stmt 0 view .LVU48
 222 0022 0023     		movs	r3, #0
 223 0024 0293     		str	r3, [sp, #8]
 257:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 224              		.loc 1 257 3 is_stmt 1 view .LVU49
 257:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 225              		.loc 1 257 35 is_stmt 0 view .LVU50
 226 0026 0393     		str	r3, [sp, #12]
 258:Src/main.c    **** 
 227              		.loc 1 258 3 is_stmt 1 view .LVU51
 258:Src/main.c    **** 
 228              		.loc 1 258 36 is_stmt 0 view .LVU52
 229 0028 0493     		str	r3, [sp, #16]
 260:Src/main.c    ****   {
 230              		.loc 1 260 3 is_stmt 1 view .LVU53
 260:Src/main.c    ****   {
 231              		.loc 1 260 7 is_stmt 0 view .LVU54
 232 002a 0021     		movs	r1, #0
 233 002c 01A8     		add	r0, sp, #4
 234 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 235              	.LVL8:
 260:Src/main.c    ****   {
 236              		.loc 1 260 6 discriminator 1 view .LVU55
 237 0032 0028     		cmp	r0, #0
 238 0034 16D1     		bne	.L20
 267:Src/main.c    **** 
 239              		.loc 1 267 3 is_stmt 1 view .LVU56
 267:Src/main.c    **** 
 240              		.loc 1 267 22 is_stmt 0 view .LVU57
 241 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 242              	.LVL9:
 267:Src/main.c    **** 
 243              		.loc 1 267 3 discriminator 1 view .LVU58
 244 003a FA21     		movs	r1, #250
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 11


 245 003c 8900     		lsls	r1, r1, #2
 246 003e FFF7FEFF 		bl	__aeabi_uidiv
 247              	.LVL10:
 248 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 249              	.LVL11:
 271:Src/main.c    **** 
 250              		.loc 1 271 3 is_stmt 1 view .LVU59
 251 0046 0420     		movs	r0, #4
 252 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 253              	.LVL12:
 274:Src/main.c    **** }
 254              		.loc 1 274 3 view .LVU60
 255 004c 0120     		movs	r0, #1
 256 004e 0022     		movs	r2, #0
 257 0050 0021     		movs	r1, #0
 258 0052 4042     		rsbs	r0, r0, #0
 259 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 260              	.LVL13:
 275:Src/main.c    **** 
 261              		.loc 1 275 1 is_stmt 0 view .LVU61
 262 0058 13B0     		add	sp, sp, #76
 263              		@ sp needed
 264 005a 00BD     		pop	{pc}
 265              	.L19:
 249:Src/main.c    ****   }
 266              		.loc 1 249 5 is_stmt 1 view .LVU62
 267 005c 0448     		ldr	r0, .L21
 268 005e F921     		movs	r1, #249
 269 0060 FFF7FEFF 		bl	_Error_Handler
 270              	.LVL14:
 271              	.L20:
 262:Src/main.c    ****   }
 272              		.loc 1 262 5 view .LVU63
 273 0064 8321     		movs	r1, #131
 274 0066 0248     		ldr	r0, .L21
 275 0068 4900     		lsls	r1, r1, #1
 276 006a FFF7FEFF 		bl	_Error_Handler
 277              	.LVL15:
 278              	.L22:
 279 006e C046     		.align	2
 280              	.L21:
 281 0070 00000000 		.word	.LC0
 282              		.cfi_endproc
 283              	.LFE44:
 285              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 286              		.align	2
 287              	.LC2:
 288 0000 4572726F 		.ascii	"Error: Unrecognized command!\015\012\000"
 288      723A2055 
 288      6E726563 
 288      6F676E69 
 288      7A656420 
 289              		.section	.text.main,"ax",%progbits
 290              		.align	1
 291              		.global	main
 292              		.syntax unified
 293              		.code	16
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 12


 294              		.thumb_func
 296              	main:
 297              	.LFB40:
  76:Src/main.c    ****   HAL_Init();               // Reset of all peripherals, init the Flash and Systick
 298              		.loc 1 76 16 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 303              	.LCFI3:
 304              		.cfi_def_cfa_offset 20
 305              		.cfi_offset 4, -20
 306              		.cfi_offset 5, -16
 307              		.cfi_offset 6, -12
 308              		.cfi_offset 7, -8
 309              		.cfi_offset 14, -4
 310 0002 D646     		mov	lr, r10
 311 0004 4F46     		mov	r7, r9
 312 0006 4646     		mov	r6, r8
 313 0008 C0B5     		push	{r6, r7, lr}
 314              	.LCFI4:
 315              		.cfi_def_cfa_offset 32
 316              		.cfi_offset 8, -32
 317              		.cfi_offset 9, -28
 318              		.cfi_offset 10, -24
  77:Src/main.c    ****   SystemClock_Config();     // Configure the system clock
 319              		.loc 1 77 3 view .LVU65
 320 000a FFF7FEFF 		bl	HAL_Init
 321              	.LVL16:
  78:Src/main.c    **** 
 322              		.loc 1 78 3 view .LVU66
 323 000e FFF7FEFF 		bl	SystemClock_Config
 324              	.LVL17:
  80:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN; // Enable GPIOB clock for USART3 pins
 325              		.loc 1 80 3 view .LVU67
  80:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN; // Enable GPIOB clock for USART3 pins
 326              		.loc 1 80 6 is_stmt 0 view .LVU68
 327 0012 6F4B     		ldr	r3, .L31
 328 0014 5969     		ldr	r1, [r3, #20]
  80:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOBEN; // Enable GPIOB clock for USART3 pins
 329              		.loc 1 80 15 view .LVU69
 330 0016 8022     		movs	r2, #128
 331 0018 1203     		lsls	r2, r2, #12
 332 001a 0A43     		orrs	r2, r1
 333 001c 5A61     		str	r2, [r3, #20]
  81:Src/main.c    **** 
 334              		.loc 1 81 3 is_stmt 1 view .LVU70
  81:Src/main.c    **** 
 335              		.loc 1 81 6 is_stmt 0 view .LVU71
 336 001e 5A69     		ldr	r2, [r3, #20]
  81:Src/main.c    **** 
 337              		.loc 1 81 15 view .LVU72
 338 0020 8021     		movs	r1, #128
 339 0022 C902     		lsls	r1, r1, #11
 340 0024 0A43     		orrs	r2, r1
 341 0026 5A61     		str	r2, [r3, #20]
  85:Src/main.c    ****   GPIOC->MODER &= ~(1 << 15);
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 13


 342              		.loc 1 85 3 is_stmt 1 view .LVU73
  85:Src/main.c    ****   GPIOC->MODER &= ~(1 << 15);
 343              		.loc 1 85 8 is_stmt 0 view .LVU74
 344 0028 6A4C     		ldr	r4, .L31+4
 345 002a 2068     		ldr	r0, [r4]
  85:Src/main.c    ****   GPIOC->MODER &= ~(1 << 15);
 346              		.loc 1 85 16 view .LVU75
 347 002c 8022     		movs	r2, #128
 348 002e D201     		lsls	r2, r2, #7
 349 0030 0243     		orrs	r2, r0
 350 0032 2260     		str	r2, [r4]
  86:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 351              		.loc 1 86 3 is_stmt 1 view .LVU76
  86:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 352              		.loc 1 86 8 is_stmt 0 view .LVU77
 353 0034 2268     		ldr	r2, [r4]
  86:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 7);
 354              		.loc 1 86 16 view .LVU78
 355 0036 6848     		ldr	r0, .L31+8
 356 0038 0240     		ands	r2, r0
 357 003a 2260     		str	r2, [r4]
  87:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 14);
 358              		.loc 1 87 3 is_stmt 1 view .LVU79
  87:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 14);
 359              		.loc 1 87 8 is_stmt 0 view .LVU80
 360 003c 6268     		ldr	r2, [r4, #4]
  87:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 14);
 361              		.loc 1 87 17 view .LVU81
 362 003e 8025     		movs	r5, #128
 363 0040 A846     		mov	r8, r5
 364 0042 AA43     		bics	r2, r5
 365 0044 6260     		str	r2, [r4, #4]
  88:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 15);
 366              		.loc 1 88 3 is_stmt 1 view .LVU82
  88:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 15);
 367              		.loc 1 88 8 is_stmt 0 view .LVU83
 368 0046 A268     		ldr	r2, [r4, #8]
  88:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 15);
 369              		.loc 1 88 18 view .LVU84
 370 0048 644D     		ldr	r5, .L31+12
 371 004a 2A40     		ands	r2, r5
 372 004c A260     		str	r2, [r4, #8]
  89:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 14);
 373              		.loc 1 89 3 is_stmt 1 view .LVU85
  89:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 14);
 374              		.loc 1 89 8 is_stmt 0 view .LVU86
 375 004e A268     		ldr	r2, [r4, #8]
  89:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 14);
 376              		.loc 1 89 18 view .LVU87
 377 0050 0240     		ands	r2, r0
 378 0052 A260     		str	r2, [r4, #8]
  90:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 15);
 379              		.loc 1 90 3 is_stmt 1 view .LVU88
  90:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 15);
 380              		.loc 1 90 8 is_stmt 0 view .LVU89
 381 0054 E268     		ldr	r2, [r4, #12]
  90:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 15);
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 14


 382              		.loc 1 90 16 view .LVU90
 383 0056 2A40     		ands	r2, r5
 384 0058 E260     		str	r2, [r4, #12]
  91:Src/main.c    **** 
 385              		.loc 1 91 3 is_stmt 1 view .LVU91
  91:Src/main.c    **** 
 386              		.loc 1 91 8 is_stmt 0 view .LVU92
 387 005a E268     		ldr	r2, [r4, #12]
  91:Src/main.c    **** 
 388              		.loc 1 91 16 view .LVU93
 389 005c 0240     		ands	r2, r0
 390 005e E260     		str	r2, [r4, #12]
  94:Src/main.c    ****   GPIOC->MODER &= ~(1 << 13);
 391              		.loc 1 94 3 is_stmt 1 view .LVU94
  94:Src/main.c    ****   GPIOC->MODER &= ~(1 << 13);
 392              		.loc 1 94 8 is_stmt 0 view .LVU95
 393 0060 2068     		ldr	r0, [r4]
  94:Src/main.c    ****   GPIOC->MODER &= ~(1 << 13);
 394              		.loc 1 94 16 view .LVU96
 395 0062 8022     		movs	r2, #128
 396 0064 5201     		lsls	r2, r2, #5
 397 0066 0243     		orrs	r2, r0
 398 0068 2260     		str	r2, [r4]
  95:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
 399              		.loc 1 95 3 is_stmt 1 view .LVU97
  95:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
 400              		.loc 1 95 8 is_stmt 0 view .LVU98
 401 006a 2268     		ldr	r2, [r4]
  95:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 6);
 402              		.loc 1 95 16 view .LVU99
 403 006c 5C48     		ldr	r0, .L31+16
 404 006e 0240     		ands	r2, r0
 405 0070 2260     		str	r2, [r4]
  96:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 12);
 406              		.loc 1 96 3 is_stmt 1 view .LVU100
  96:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 12);
 407              		.loc 1 96 8 is_stmt 0 view .LVU101
 408 0072 6268     		ldr	r2, [r4, #4]
  96:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 12);
 409              		.loc 1 96 17 view .LVU102
 410 0074 4027     		movs	r7, #64
 411 0076 BA43     		bics	r2, r7
 412 0078 6260     		str	r2, [r4, #4]
  97:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 13);
 413              		.loc 1 97 3 is_stmt 1 view .LVU103
  97:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 13);
 414              		.loc 1 97 8 is_stmt 0 view .LVU104
 415 007a A268     		ldr	r2, [r4, #8]
  97:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 13);
 416              		.loc 1 97 18 view .LVU105
 417 007c 594D     		ldr	r5, .L31+20
 418 007e 2A40     		ands	r2, r5
 419 0080 A260     		str	r2, [r4, #8]
  98:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 12); 
 420              		.loc 1 98 3 is_stmt 1 view .LVU106
  98:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 12); 
 421              		.loc 1 98 8 is_stmt 0 view .LVU107
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 15


 422 0082 A268     		ldr	r2, [r4, #8]
  98:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 12); 
 423              		.loc 1 98 18 view .LVU108
 424 0084 0240     		ands	r2, r0
 425 0086 A260     		str	r2, [r4, #8]
  99:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 13); 
 426              		.loc 1 99 3 is_stmt 1 view .LVU109
  99:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 13); 
 427              		.loc 1 99 8 is_stmt 0 view .LVU110
 428 0088 E268     		ldr	r2, [r4, #12]
  99:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 13); 
 429              		.loc 1 99 16 view .LVU111
 430 008a 2A40     		ands	r2, r5
 431 008c E260     		str	r2, [r4, #12]
 100:Src/main.c    **** 
 432              		.loc 1 100 3 is_stmt 1 view .LVU112
 100:Src/main.c    **** 
 433              		.loc 1 100 8 is_stmt 0 view .LVU113
 434 008e E268     		ldr	r2, [r4, #12]
 100:Src/main.c    **** 
 435              		.loc 1 100 16 view .LVU114
 436 0090 0240     		ands	r2, r0
 437 0092 E260     		str	r2, [r4, #12]
 103:Src/main.c    ****   GPIOC->MODER &= ~(1 << 19);
 438              		.loc 1 103 3 is_stmt 1 view .LVU115
 103:Src/main.c    ****   GPIOC->MODER &= ~(1 << 19);
 439              		.loc 1 103 8 is_stmt 0 view .LVU116
 440 0094 2268     		ldr	r2, [r4]
 103:Src/main.c    ****   GPIOC->MODER &= ~(1 << 19);
 441              		.loc 1 103 16 view .LVU117
 442 0096 0A43     		orrs	r2, r1
 443 0098 2260     		str	r2, [r4]
 104:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 444              		.loc 1 104 3 is_stmt 1 view .LVU118
 104:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 445              		.loc 1 104 8 is_stmt 0 view .LVU119
 446 009a 2268     		ldr	r2, [r4]
 104:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 9);
 447              		.loc 1 104 16 view .LVU120
 448 009c 5248     		ldr	r0, .L31+24
 449 009e 0240     		ands	r2, r0
 450 00a0 2260     		str	r2, [r4]
 105:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 18);
 451              		.loc 1 105 3 is_stmt 1 view .LVU121
 105:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 18);
 452              		.loc 1 105 8 is_stmt 0 view .LVU122
 453 00a2 6268     		ldr	r2, [r4, #4]
 105:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 18);
 454              		.loc 1 105 17 view .LVU123
 455 00a4 514E     		ldr	r6, .L31+28
 456 00a6 3240     		ands	r2, r6
 457 00a8 6260     		str	r2, [r4, #4]
 106:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 19);
 458              		.loc 1 106 3 is_stmt 1 view .LVU124
 106:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 19);
 459              		.loc 1 106 8 is_stmt 0 view .LVU125
 460 00aa A268     		ldr	r2, [r4, #8]
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 16


 106:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 19);
 461              		.loc 1 106 18 view .LVU126
 462 00ac 504D     		ldr	r5, .L31+32
 463 00ae 2A40     		ands	r2, r5
 464 00b0 A260     		str	r2, [r4, #8]
 107:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 18); 
 465              		.loc 1 107 3 is_stmt 1 view .LVU127
 107:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 18); 
 466              		.loc 1 107 8 is_stmt 0 view .LVU128
 467 00b2 A268     		ldr	r2, [r4, #8]
 107:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 18); 
 468              		.loc 1 107 18 view .LVU129
 469 00b4 0240     		ands	r2, r0
 470 00b6 A260     		str	r2, [r4, #8]
 108:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 19);
 471              		.loc 1 108 3 is_stmt 1 view .LVU130
 108:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 19);
 472              		.loc 1 108 8 is_stmt 0 view .LVU131
 473 00b8 E268     		ldr	r2, [r4, #12]
 108:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 19);
 474              		.loc 1 108 16 view .LVU132
 475 00ba 2A40     		ands	r2, r5
 476 00bc E260     		str	r2, [r4, #12]
 109:Src/main.c    **** 
 477              		.loc 1 109 3 is_stmt 1 view .LVU133
 109:Src/main.c    **** 
 478              		.loc 1 109 8 is_stmt 0 view .LVU134
 479 00be E268     		ldr	r2, [r4, #12]
 109:Src/main.c    **** 
 480              		.loc 1 109 16 view .LVU135
 481 00c0 0240     		ands	r2, r0
 482 00c2 E260     		str	r2, [r4, #12]
 112:Src/main.c    ****   GPIOC->MODER &= ~(1 << 17);
 483              		.loc 1 112 3 is_stmt 1 view .LVU136
 112:Src/main.c    ****   GPIOC->MODER &= ~(1 << 17);
 484              		.loc 1 112 8 is_stmt 0 view .LVU137
 485 00c4 2068     		ldr	r0, [r4]
 112:Src/main.c    ****   GPIOC->MODER &= ~(1 << 17);
 486              		.loc 1 112 16 view .LVU138
 487 00c6 8022     		movs	r2, #128
 488 00c8 5202     		lsls	r2, r2, #9
 489 00ca 0243     		orrs	r2, r0
 490 00cc 2260     		str	r2, [r4]
 113:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 491              		.loc 1 113 3 is_stmt 1 view .LVU139
 113:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 492              		.loc 1 113 8 is_stmt 0 view .LVU140
 493 00ce 2268     		ldr	r2, [r4]
 113:Src/main.c    ****   GPIOC->OTYPER &= ~(1 << 8);
 494              		.loc 1 113 16 view .LVU141
 495 00d0 4848     		ldr	r0, .L31+36
 496 00d2 0240     		ands	r2, r0
 497 00d4 2260     		str	r2, [r4]
 114:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 16);
 498              		.loc 1 114 3 is_stmt 1 view .LVU142
 114:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 16);
 499              		.loc 1 114 8 is_stmt 0 view .LVU143
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 17


 500 00d6 6268     		ldr	r2, [r4, #4]
 114:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 16);
 501              		.loc 1 114 17 view .LVU144
 502 00d8 474D     		ldr	r5, .L31+40
 503 00da AA46     		mov	r10, r5
 504 00dc 2A40     		ands	r2, r5
 505 00de 6260     		str	r2, [r4, #4]
 115:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 17);
 506              		.loc 1 115 3 is_stmt 1 view .LVU145
 115:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 17);
 507              		.loc 1 115 8 is_stmt 0 view .LVU146
 508 00e0 A268     		ldr	r2, [r4, #8]
 115:Src/main.c    ****   GPIOC->OSPEEDR &= ~(1 << 17);
 509              		.loc 1 115 18 view .LVU147
 510 00e2 464D     		ldr	r5, .L31+44
 511 00e4 2A40     		ands	r2, r5
 512 00e6 A260     		str	r2, [r4, #8]
 116:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 16); 
 513              		.loc 1 116 3 is_stmt 1 view .LVU148
 116:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 16); 
 514              		.loc 1 116 8 is_stmt 0 view .LVU149
 515 00e8 A268     		ldr	r2, [r4, #8]
 116:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 16); 
 516              		.loc 1 116 18 view .LVU150
 517 00ea 0240     		ands	r2, r0
 518 00ec A260     		str	r2, [r4, #8]
 117:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 17);
 519              		.loc 1 117 3 is_stmt 1 view .LVU151
 117:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 17);
 520              		.loc 1 117 8 is_stmt 0 view .LVU152
 521 00ee E268     		ldr	r2, [r4, #12]
 117:Src/main.c    ****   GPIOC->PUPDR &= ~(1 << 17);
 522              		.loc 1 117 16 view .LVU153
 523 00f0 2A40     		ands	r2, r5
 524 00f2 E260     		str	r2, [r4, #12]
 118:Src/main.c    **** 
 525              		.loc 1 118 3 is_stmt 1 view .LVU154
 118:Src/main.c    **** 
 526              		.loc 1 118 8 is_stmt 0 view .LVU155
 527 00f4 E268     		ldr	r2, [r4, #12]
 118:Src/main.c    **** 
 528              		.loc 1 118 16 view .LVU156
 529 00f6 0240     		ands	r2, r0
 530 00f8 E260     		str	r2, [r4, #12]
 121:Src/main.c    **** 
 531              		.loc 1 121 3 is_stmt 1 view .LVU157
 121:Src/main.c    **** 
 532              		.loc 1 121 6 is_stmt 0 view .LVU158
 533 00fa 5869     		ldr	r0, [r3, #20]
 121:Src/main.c    **** 
 534              		.loc 1 121 15 view .LVU159
 535 00fc 8022     		movs	r2, #128
 536 00fe 9202     		lsls	r2, r2, #10
 537 0100 0243     		orrs	r2, r0
 538 0102 5A61     		str	r2, [r3, #20]
 123:Src/main.c    ****   GPIOA->OSPEEDR &= ~(3 << 0);    // Set as low speed
 539              		.loc 1 123 3 is_stmt 1 view .LVU160
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 18


 123:Src/main.c    ****   GPIOA->OSPEEDR &= ~(3 << 0);    // Set as low speed
 540              		.loc 1 123 8 is_stmt 0 view .LVU161
 541 0104 9022     		movs	r2, #144
 542 0106 D205     		lsls	r2, r2, #23
 543 0108 1068     		ldr	r0, [r2]
 123:Src/main.c    ****   GPIOA->OSPEEDR &= ~(3 << 0);    // Set as low speed
 544              		.loc 1 123 16 view .LVU162
 545 010a 0325     		movs	r5, #3
 546 010c A843     		bics	r0, r5
 547 010e 1060     		str	r0, [r2]
 124:Src/main.c    ****   GPIOA->PUPDR |= (1 << 0);       // Enable pull-down resistor
 548              		.loc 1 124 3 is_stmt 1 view .LVU163
 124:Src/main.c    ****   GPIOA->PUPDR |= (1 << 0);       // Enable pull-down resistor
 549              		.loc 1 124 8 is_stmt 0 view .LVU164
 550 0110 9068     		ldr	r0, [r2, #8]
 124:Src/main.c    ****   GPIOA->PUPDR |= (1 << 0);       // Enable pull-down resistor
 551              		.loc 1 124 18 view .LVU165
 552 0112 A843     		bics	r0, r5
 553 0114 9060     		str	r0, [r2, #8]
 125:Src/main.c    **** 
 554              		.loc 1 125 3 is_stmt 1 view .LVU166
 125:Src/main.c    **** 
 555              		.loc 1 125 8 is_stmt 0 view .LVU167
 556 0116 D068     		ldr	r0, [r2, #12]
 125:Src/main.c    **** 
 557              		.loc 1 125 16 view .LVU168
 558 0118 023D     		subs	r5, r5, #2
 559 011a 2843     		orrs	r0, r5
 560 011c D060     		str	r0, [r2, #12]
 128:Src/main.c    **** 
 561              		.loc 1 128 3 is_stmt 1 view .LVU169
 128:Src/main.c    **** 
 562              		.loc 1 128 6 is_stmt 0 view .LVU170
 563 011e DA69     		ldr	r2, [r3, #28]
 128:Src/main.c    **** 
 564              		.loc 1 128 16 view .LVU171
 565 0120 1143     		orrs	r1, r2
 566 0122 D961     		str	r1, [r3, #28]
 131:Src/main.c    ****   uint32_t baud_rate = 115200;
 567              		.loc 1 131 3 is_stmt 1 view .LVU172
 131:Src/main.c    ****   uint32_t baud_rate = 115200;
 568              		.loc 1 131 24 is_stmt 0 view .LVU173
 569 0124 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 570              	.LVL18:
 132:Src/main.c    ****   USART3->BRR = hclk_freq / baud_rate;
 571              		.loc 1 132 3 is_stmt 1 view .LVU174
 133:Src/main.c    **** 
 572              		.loc 1 133 3 view .LVU175
 133:Src/main.c    **** 
 573              		.loc 1 133 27 is_stmt 0 view .LVU176
 574 0128 E121     		movs	r1, #225
 575 012a 4902     		lsls	r1, r1, #9
 576 012c FFF7FEFF 		bl	__aeabi_uidiv
 577              	.LVL19:
 133:Src/main.c    **** 
 578              		.loc 1 133 15 view .LVU177
 579 0130 334B     		ldr	r3, .L31+48
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 19


 580 0132 D860     		str	r0, [r3, #12]
 136:Src/main.c    **** 
 581              		.loc 1 136 3 is_stmt 1 view .LVU178
 136:Src/main.c    **** 
 582              		.loc 1 136 9 is_stmt 0 view .LVU179
 583 0134 1A68     		ldr	r2, [r3]
 136:Src/main.c    **** 
 584              		.loc 1 136 15 view .LVU180
 585 0136 0C21     		movs	r1, #12
 586 0138 0A43     		orrs	r2, r1
 587 013a 1A60     		str	r2, [r3]
 139:Src/main.c    **** 
 588              		.loc 1 139 3 is_stmt 1 view .LVU181
 139:Src/main.c    **** 
 589              		.loc 1 139 9 is_stmt 0 view .LVU182
 590 013c 1A68     		ldr	r2, [r3]
 139:Src/main.c    **** 
 591              		.loc 1 139 15 view .LVU183
 592 013e 2A43     		orrs	r2, r5
 593 0140 1A60     		str	r2, [r3]
 142:Src/main.c    ****   GPIOB->MODER |= (GPIO_MODER_MODER10_1 | GPIO_MODER_MODER11_1);
 594              		.loc 1 142 3 is_stmt 1 view .LVU184
 142:Src/main.c    ****   GPIOB->MODER |= (GPIO_MODER_MODER10_1 | GPIO_MODER_MODER11_1);
 595              		.loc 1 142 8 is_stmt 0 view .LVU185
 596 0142 304B     		ldr	r3, .L31+52
 597 0144 1A68     		ldr	r2, [r3]
 142:Src/main.c    ****   GPIOB->MODER |= (GPIO_MODER_MODER10_1 | GPIO_MODER_MODER11_1);
 598              		.loc 1 142 16 view .LVU186
 599 0146 3049     		ldr	r1, .L31+56
 600 0148 0A40     		ands	r2, r1
 601 014a 1A60     		str	r2, [r3]
 143:Src/main.c    **** 
 602              		.loc 1 143 3 is_stmt 1 view .LVU187
 143:Src/main.c    **** 
 603              		.loc 1 143 8 is_stmt 0 view .LVU188
 604 014c 1968     		ldr	r1, [r3]
 143:Src/main.c    **** 
 605              		.loc 1 143 16 view .LVU189
 606 014e A022     		movs	r2, #160
 607 0150 1204     		lsls	r2, r2, #16
 608 0152 0A43     		orrs	r2, r1
 609 0154 1A60     		str	r2, [r3]
 146:Src/main.c    **** 
 610              		.loc 1 146 3 is_stmt 1 view .LVU190
 146:Src/main.c    **** 
 611              		.loc 1 146 13 is_stmt 0 view .LVU191
 612 0156 596A     		ldr	r1, [r3, #36]
 146:Src/main.c    **** 
 613              		.loc 1 146 17 view .LVU192
 614 0158 8822     		movs	r2, #136
 615 015a D201     		lsls	r2, r2, #7
 616 015c 0A43     		orrs	r2, r1
 617 015e 5A62     		str	r2, [r3, #36]
 149:Src/main.c    ****   GPIOC->ODR &= ~(1 << 6);  // Blue Low
 618              		.loc 1 149 3 is_stmt 1 view .LVU193
 149:Src/main.c    ****   GPIOC->ODR &= ~(1 << 6);  // Blue Low
 619              		.loc 1 149 8 is_stmt 0 view .LVU194
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 20


 620 0160 6369     		ldr	r3, [r4, #20]
 149:Src/main.c    ****   GPIOC->ODR &= ~(1 << 6);  // Blue Low
 621              		.loc 1 149 14 view .LVU195
 622 0162 4246     		mov	r2, r8
 623 0164 1343     		orrs	r3, r2
 624 0166 6361     		str	r3, [r4, #20]
 150:Src/main.c    ****   GPIOC->ODR &= ~(1 << 9);   // Green Low
 625              		.loc 1 150 3 is_stmt 1 view .LVU196
 150:Src/main.c    ****   GPIOC->ODR &= ~(1 << 9);   // Green Low
 626              		.loc 1 150 8 is_stmt 0 view .LVU197
 627 0168 6369     		ldr	r3, [r4, #20]
 150:Src/main.c    ****   GPIOC->ODR &= ~(1 << 9);   // Green Low
 628              		.loc 1 150 14 view .LVU198
 629 016a BB43     		bics	r3, r7
 630 016c 6361     		str	r3, [r4, #20]
 151:Src/main.c    ****   GPIOC->ODR &= ~(1 << 8);  // Orange Low
 631              		.loc 1 151 3 is_stmt 1 view .LVU199
 151:Src/main.c    ****   GPIOC->ODR &= ~(1 << 8);  // Orange Low
 632              		.loc 1 151 8 is_stmt 0 view .LVU200
 633 016e 6369     		ldr	r3, [r4, #20]
 151:Src/main.c    ****   GPIOC->ODR &= ~(1 << 8);  // Orange Low
 634              		.loc 1 151 14 view .LVU201
 635 0170 3340     		ands	r3, r6
 636 0172 6361     		str	r3, [r4, #20]
 152:Src/main.c    **** 
 637              		.loc 1 152 3 is_stmt 1 view .LVU202
 152:Src/main.c    **** 
 638              		.loc 1 152 8 is_stmt 0 view .LVU203
 639 0174 6369     		ldr	r3, [r4, #20]
 152:Src/main.c    **** 
 640              		.loc 1 152 14 view .LVU204
 641 0176 5246     		mov	r2, r10
 642 0178 1340     		ands	r3, r2
 643 017a 6361     		str	r3, [r4, #20]
 155:Src/main.c    **** 
 644              		.loc 1 155 3 is_stmt 1 view .LVU205
 645              	.LVL20:
 155:Src/main.c    **** 
 646              		.loc 1 155 3 is_stmt 0 view .LVU206
 647 017c 06E0     		b	.L24
 648              	.LVL21:
 649              	.L26:
 164:Src/main.c    ****       case 'r':
 650              		.loc 1 164 5 view .LVU207
 651 017e 7228     		cmp	r0, #114
 652 0180 21D1     		bne	.L29
 167:Src/main.c    ****         break;
 653              		.loc 1 167 9 is_stmt 1 view .LVU208
 167:Src/main.c    ****         break;
 654              		.loc 1 167 14 is_stmt 0 view .LVU209
 655 0182 144A     		ldr	r2, .L31+4
 656 0184 5369     		ldr	r3, [r2, #20]
 167:Src/main.c    ****         break;
 657              		.loc 1 167 20 view .LVU210
 658 0186 4021     		movs	r1, #64
 659 0188 4B40     		eors	r3, r1
 660 018a 5361     		str	r3, [r2, #20]
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 21


 168:Src/main.c    ****       case 'g':
 661              		.loc 1 168 9 is_stmt 1 view .LVU211
 662              	.LVL22:
 663              	.L24:
 157:Src/main.c    **** 
 664              		.loc 1 157 3 view .LVU212
 159:Src/main.c    ****     // Wait for a character to be received
 665              		.loc 1 159 3 view .LVU213
 161:Src/main.c    **** 
 666              		.loc 1 161 5 view .LVU214
 161:Src/main.c    **** 
 667              		.loc 1 161 20 is_stmt 0 view .LVU215
 668 018c FFF7FEFF 		bl	USART_ReceiveChar
 669              	.LVL23:
 164:Src/main.c    ****       case 'r':
 670              		.loc 1 164 5 is_stmt 1 view .LVU216
 671 0190 6F28     		cmp	r0, #111
 672 0192 11D0     		beq	.L25
 673 0194 F3D8     		bhi	.L26
 674 0196 6228     		cmp	r0, #98
 675 0198 08D0     		beq	.L27
 676 019a 6728     		cmp	r0, #103
 677 019c 13D1     		bne	.L29
 171:Src/main.c    ****         break;
 678              		.loc 1 171 9 view .LVU217
 171:Src/main.c    ****         break;
 679              		.loc 1 171 14 is_stmt 0 view .LVU218
 680 019e 0D4A     		ldr	r2, .L31+4
 681 01a0 5169     		ldr	r1, [r2, #20]
 171:Src/main.c    ****         break;
 682              		.loc 1 171 20 view .LVU219
 683 01a2 8023     		movs	r3, #128
 684 01a4 9B00     		lsls	r3, r3, #2
 685 01a6 4B40     		eors	r3, r1
 686 01a8 5361     		str	r3, [r2, #20]
 172:Src/main.c    ****       case 'b':
 687              		.loc 1 172 9 is_stmt 1 view .LVU220
 688 01aa EFE7     		b	.L24
 689              	.L27:
 175:Src/main.c    ****         break;
 690              		.loc 1 175 9 view .LVU221
 175:Src/main.c    ****         break;
 691              		.loc 1 175 14 is_stmt 0 view .LVU222
 692 01ac 094A     		ldr	r2, .L31+4
 693 01ae 5369     		ldr	r3, [r2, #20]
 175:Src/main.c    ****         break;
 694              		.loc 1 175 20 view .LVU223
 695 01b0 8021     		movs	r1, #128
 696 01b2 4B40     		eors	r3, r1
 697 01b4 5361     		str	r3, [r2, #20]
 176:Src/main.c    ****       case 'o':
 698              		.loc 1 176 9 is_stmt 1 view .LVU224
 699 01b6 E9E7     		b	.L24
 700              	.L25:
 179:Src/main.c    ****         break;
 701              		.loc 1 179 9 view .LVU225
 179:Src/main.c    ****         break;
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 22


 702              		.loc 1 179 14 is_stmt 0 view .LVU226
 703 01b8 064A     		ldr	r2, .L31+4
 704 01ba 5169     		ldr	r1, [r2, #20]
 179:Src/main.c    ****         break;
 705              		.loc 1 179 20 view .LVU227
 706 01bc 8023     		movs	r3, #128
 707 01be 5B00     		lsls	r3, r3, #1
 708 01c0 4B40     		eors	r3, r1
 709 01c2 5361     		str	r3, [r2, #20]
 180:Src/main.c    ****       default:
 710              		.loc 1 180 9 is_stmt 1 view .LVU228
 711 01c4 E2E7     		b	.L24
 712              	.L29:
 183:Src/main.c    ****     }
 713              		.loc 1 183 9 view .LVU229
 714 01c6 1148     		ldr	r0, .L31+60
 715              	.LVL24:
 183:Src/main.c    ****     }
 716              		.loc 1 183 9 is_stmt 0 view .LVU230
 717 01c8 FFF7FEFF 		bl	USART_TransmitString
 718              	.LVL25:
 719 01cc DEE7     		b	.L24
 720              	.L32:
 721 01ce C046     		.align	2
 722              	.L31:
 723 01d0 00100240 		.word	1073876992
 724 01d4 00080048 		.word	1207961600
 725 01d8 FF7FFFFF 		.word	-32769
 726 01dc FFBFFFFF 		.word	-16385
 727 01e0 FFDFFFFF 		.word	-8193
 728 01e4 FFEFFFFF 		.word	-4097
 729 01e8 FFFFF7FF 		.word	-524289
 730 01ec FFFDFFFF 		.word	-513
 731 01f0 FFFFFBFF 		.word	-262145
 732 01f4 FFFFFDFF 		.word	-131073
 733 01f8 FFFEFFFF 		.word	-257
 734 01fc FFFFFEFF 		.word	-65537
 735 0200 00480040 		.word	1073760256
 736 0204 00040048 		.word	1207960576
 737 0208 FFFF0FFF 		.word	-15728641
 738 020c 00000000 		.word	.LC2
 739              		.cfi_endproc
 740              	.LFE40:
 742              		.text
 743              	.Letext0:
 744              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 745              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 746              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 747              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 748              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 749              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 750              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:19     .text.USART_TransmitChar:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:25     .text.USART_TransmitChar:00000000 USART_TransmitChar
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:51     .text.USART_TransmitChar:00000010 $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:56     .text.USART_TransmitString:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:62     .text.USART_TransmitString:00000000 USART_TransmitString
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:104    .text.USART_ReceiveChar:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:110    .text.USART_ReceiveChar:00000000 USART_ReceiveChar
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:137    .text.USART_ReceiveChar:00000010 $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:142    .text._Error_Handler:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:148    .text._Error_Handler:00000000 _Error_Handler
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:166    .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:171    .text.SystemClock_Config:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:177    .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:281    .text.SystemClock_Config:00000070 $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:286    .rodata.main.str1.4:00000000 $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:290    .text.main:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:296    .text.main:00000000 main
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccgBGX2I.s:723    .text.main:000001d0 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
