ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Src/main.c"
  18              		.section	.text._Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	_Error_Handler
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	_Error_Handler:
  26              	.LFB42:
   1:Src/main.c    **** /**
   2:Src/main.c    ****   *
   3:Src/main.c    ****   * Jaxon Parker
   4:Src/main.c    ****   * U1289670
   5:Src/main.c    ****   *
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * File Name          : main.c
   8:Src/main.c    ****   * Description        : Main program body
   9:Src/main.c    ****   ******************************************************************************
  10:Src/main.c    ****   ** This notice applies to any and all portions of this file
  11:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
  12:Src/main.c    ****   * USER CODE END. Other portions of this file, whether
  13:Src/main.c    ****   * inserted by the user or by software development tools
  14:Src/main.c    ****   * are owned by their respective copyright owners.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  17:Src/main.c    ****   *
  18:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  19:Src/main.c    ****   * are permitted provided that the following conditions are met:
  20:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  21:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  22:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  24:Src/main.c    ****   *      and/or other materials provided with the distribution.
  25:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  26:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  27:Src/main.c    ****   *      without specific prior written permission.
  28:Src/main.c    ****   *
  29:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  30:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  31:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  32:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s 			page 2


  33:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  34:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  35:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  36:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  37:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  38:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  39:Src/main.c    ****   *
  40:Src/main.c    ****   ******************************************************************************
  41:Src/main.c    ****   */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  44:Src/main.c    **** #include "main.h"
  45:Src/main.c    **** #include "stm32f0xx_hal.h"
  46:Src/main.c    **** void _Error_Handler(char * file, int line);
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE END Includes */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  53:Src/main.c    **** 
  54:Src/main.c    **** /* USER CODE BEGIN PV */
  55:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PV */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  60:Src/main.c    **** void SystemClock_Config(void);
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PFP */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN 0 */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* USER CODE END 0 */
  70:Src/main.c    **** 
  71:Src/main.c    **** int main(void)
  72:Src/main.c    **** {
  73:Src/main.c    ****   SystemClock_Config();
  74:Src/main.c    **** 
  75:Src/main.c    ****   // ----------------------------------------------------------------------------------------------
  76:Src/main.c    ****   // 6.1 Measuring a Potentiometer With the ADCx
  77:Src/main.c    ****   // ----------------------------------------------------------------------------------------------
  78:Src/main.c    **** 
  79:Src/main.c    ****   // // Initialize LED pins (PC6 and PC7) to output
  80:Src/main.c    ****   // RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
  81:Src/main.c    ****   // GPIOC->MODER |= GPIO_MODER_MODER6_0 | GPIO_MODER_MODER7_0 | GPIO_MODER_MODER8_0 | GPIO_MODER_M
  82:Src/main.c    **** 
  83:Src/main.c    ****   // // Select PA0 as ADC input
  84:Src/main.c    ****   // RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
  85:Src/main.c    ****   // GPIOA->MODER |= GPIO_MODER_MODER0;
  86:Src/main.c    **** 
  87:Src/main.c    ****   // // Enable ADC1 in RCC peripheral
  88:Src/main.c    ****   // RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
  89:Src/main.c    **** 
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s 			page 3


  90:Src/main.c    ****   // // Configure ADC to 8-bit resolution, continuous conversion mode, software trigger
  91:Src/main.c    ****   // ADC1->CFGR1 |= ADC_CFGR1_CONT; // Continuous conversion mode
  92:Src/main.c    ****   // ADC1->CFGR1 &= ~ADC_CFGR1_RES; // 8-bit resolution
  93:Src/main.c    **** 
  94:Src/main.c    ****   // // Select PA0 as ADC input channel
  95:Src/main.c    ****   // ADC1->CHSELR |= ADC_CHSELR_CHSEL0;
  96:Src/main.c    **** 
  97:Src/main.c    ****   // // Perform ADC calibration
  98:Src/main.c    ****   // ADC1->CR |= ADC_CR_ADCAL;
  99:Src/main.c    ****   // while (ADC1->CR & ADC_CR_ADCAL); // Wait for calibration to finish
 100:Src/main.c    **** 
 101:Src/main.c    ****   // // Enable ADC
 102:Src/main.c    ****   // ADC1->CR |= ADC_CR_ADEN;
 103:Src/main.c    ****   // while (!(ADC1->ISR & ADC_ISR_ADRDY)); // Wait for ADC to be ready
 104:Src/main.c    **** 
 105:Src/main.c    ****   // // Start ADC conversion
 106:Src/main.c    ****   // ADC1->CR |= ADC_CR_ADSTART;
 107:Src/main.c    **** 
 108:Src/main.c    ****   // // Threshold values for LED activation
 109:Src/main.c    ****   // uint16_t thresholds[] = {500, 1500, 3000, 4000}; // Values for a 20k potentiometer
 110:Src/main.c    **** 
 111:Src/main.c    ****   // while (1) {
 112:Src/main.c    ****   //   // Read ADC data register
 113:Src/main.c    ****   //   uint16_t adc_value = ADC1->DR;
 114:Src/main.c    **** 
 115:Src/main.c    ****   //   // Adjust LEDs based on ADC value
 116:Src/main.c    ****   //   for (int i = 0; i < 4; i++) {
 117:Src/main.c    ****   //     if (adc_value >= thresholds[i]) {
 118:Src/main.c    ****   //       GPIOC->BSRR = (1 << (6 + i)); // Turn on LED
 119:Src/main.c    ****   //     } else {
 120:Src/main.c    ****   //       GPIOC->BSRR = (1 << (22 + i)); // Turn off LED
 121:Src/main.c    ****   //     }
 122:Src/main.c    ****   //   }
 123:Src/main.c    ****   // }
 124:Src/main.c    **** 
 125:Src/main.c    ****   // ----------------------------------------------------------------------------------------------
 126:Src/main.c    ****   // 6.2 Generating Waveforms with the DAC
 127:Src/main.c    ****   // ----------------------------------------------------------------------------------------------
 128:Src/main.c    **** 
 129:Src/main.c    ****   // Select PA4 as DAC output
 130:Src/main.c    ****   RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 131:Src/main.c    ****   GPIOA->MODER |= GPIO_MODER_MODER4;
 132:Src/main.c    **** 
 133:Src/main.c    ****   // Set PA4 to DAC output mode
 134:Src/main.c    ****   // GPIOA->MODER |= GPIO_MODER_MODER4_1;
 135:Src/main.c    ****   GPIOA->MODER |= (1<<8);
 136:Src/main.c    ****   GPIOA->MODER |= (1<<9);
 137:Src/main.c    **** 
 138:Src/main.c    ****   GPIOA->PUPDR  &= ~(1<<8);
 139:Src/main.c    ****   GPIOA->PUPDR &= ~(1<<9);
 140:Src/main.c    **** 
 141:Src/main.c    ****   // Enable DAC channel 1
 142:Src/main.c    ****   RCC->APB1ENR |= RCC_APB1ENR_DACEN;
 143:Src/main.c    ****   // DAC->CR |= DAC_CR_EN1;
 144:Src/main.c    ****   DAC->CR |= (1<<0);
 145:Src/main.c    **** 
 146:Src/main.c    ****   // Set DAC channel 1 to software trigger mode
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s 			page 4


 147:Src/main.c    ****   // DAC->CR |= DAC_CR_TEN1;
 148:Src/main.c    ****   // DAC->CR &= ~DAC_CR_TSEL1;
 149:Src/main.c    ****   DAC->CR |= (1<<3);
 150:Src/main.c    ****   DAC->CR |= (1<<4);
 151:Src/main.c    ****   DAC->CR |= (1<<5);
 152:Src/main.c    **** 
 153:Src/main.c    ****   // Sine Wave: 8-bit, 32 samples/cycle
 154:Src/main.c    ****   const uint8_t sine_wave[32] = {127,151,175,197,216,232,244,251,254,251,244,
 155:Src/main.c    ****   232,216,197,175,151,127,102,78,56,37,21,9,2,0,2,9,21,37,56,78,102};
 156:Src/main.c    **** 
 157:Src/main.c    ****   uint8_t index = 0;
 158:Src/main.c    **** 
 159:Src/main.c    ****   while (1) {
 160:Src/main.c    ****     // Write the next value from the wave-table to DAC channel 1 data register
 161:Src/main.c    ****     DAC->DHR8R1 = sine_wave[index];
 162:Src/main.c    **** 
 163:Src/main.c    ****     // Increment index 
 164:Src/main.c    ****     index = (index + 1);
 165:Src/main.c    ****     if(index == 32)
 166:Src/main.c    ****     {
 167:Src/main.c    ****       index = 0;
 168:Src/main.c    ****     }
 169:Src/main.c    **** 
 170:Src/main.c    ****     // 1ms delay
 171:Src/main.c    ****     HAL_Delay(1);
 172:Src/main.c    ****   }
 173:Src/main.c    **** 
 174:Src/main.c    **** }
 175:Src/main.c    **** 
 176:Src/main.c    **** /** System Clock Configuration
 177:Src/main.c    **** */
 178:Src/main.c    **** void SystemClock_Config(void)
 179:Src/main.c    **** {
 180:Src/main.c    **** 
 181:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 182:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 183:Src/main.c    **** 
 184:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 185:Src/main.c    ****     */
 186:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 187:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 188:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 189:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 190:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 191:Src/main.c    ****   {
 192:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 193:Src/main.c    ****   }
 194:Src/main.c    **** 
 195:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks
 196:Src/main.c    ****     */
 197:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 198:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
 199:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 200:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 201:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 202:Src/main.c    **** 
 203:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s 			page 5


 204:Src/main.c    ****   {
 205:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 206:Src/main.c    ****   }
 207:Src/main.c    **** 
 208:Src/main.c    ****     /**Configure the Systick interrupt time
 209:Src/main.c    ****     */
 210:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 211:Src/main.c    **** 
 212:Src/main.c    ****     /**Configure the Systick
 213:Src/main.c    ****     */
 214:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 215:Src/main.c    **** 
 216:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 217:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 218:Src/main.c    **** }
 219:Src/main.c    **** 
 220:Src/main.c    **** /* USER CODE BEGIN 4 */
 221:Src/main.c    **** 
 222:Src/main.c    **** /* USER CODE END 4 */
 223:Src/main.c    **** 
 224:Src/main.c    **** /**
 225:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 226:Src/main.c    ****   * @param  None
 227:Src/main.c    ****   * @retval None
 228:Src/main.c    ****   */
 229:Src/main.c    **** void _Error_Handler(char * file, int line)
 230:Src/main.c    **** {
  27              		.loc 1 230 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
 231:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 232:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 233:Src/main.c    ****   while(1)
  35              		.loc 1 233 3 view .LVU1
 234:Src/main.c    ****   {
 235:Src/main.c    ****   }
  36              		.loc 1 235 3 view .LVU2
 233:Src/main.c    ****   {
  37              		.loc 1 233 8 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE42:
  42              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
  43              		.align	2
  44              	.LC0:
  45 0000 5372632F 		.ascii	"Src/main.c\000"
  45      6D61696E 
  45      2E6300
  46              		.global	__aeabi_uidiv
  47              		.section	.text.SystemClock_Config,"ax",%progbits
  48              		.align	1
  49              		.global	SystemClock_Config
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s 			page 6


  50              		.syntax unified
  51              		.code	16
  52              		.thumb_func
  54              	SystemClock_Config:
  55              	.LFB41:
 179:Src/main.c    **** 
  56              		.loc 1 179 1 view -0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 72
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60 0000 00B5     		push	{lr}
  61              	.LCFI0:
  62              		.cfi_def_cfa_offset 4
  63              		.cfi_offset 14, -4
  64 0002 93B0     		sub	sp, sp, #76
  65              	.LCFI1:
  66              		.cfi_def_cfa_offset 80
 181:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  67              		.loc 1 181 3 view .LVU5
 182:Src/main.c    **** 
  68              		.loc 1 182 3 view .LVU6
 186:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  69              		.loc 1 186 3 view .LVU7
 186:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  70              		.loc 1 186 36 is_stmt 0 view .LVU8
  71 0004 0223     		movs	r3, #2
  72 0006 0593     		str	r3, [sp, #20]
 187:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  73              		.loc 1 187 3 is_stmt 1 view .LVU9
 187:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  74              		.loc 1 187 30 is_stmt 0 view .LVU10
  75 0008 013B     		subs	r3, r3, #1
  76 000a 0893     		str	r3, [sp, #32]
 188:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  77              		.loc 1 188 3 is_stmt 1 view .LVU11
 188:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
  78              		.loc 1 188 41 is_stmt 0 view .LVU12
  79 000c 0F33     		adds	r3, r3, #15
  80 000e 0993     		str	r3, [sp, #36]
 189:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  81              		.loc 1 189 3 is_stmt 1 view .LVU13
 189:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  82              		.loc 1 189 34 is_stmt 0 view .LVU14
  83 0010 0023     		movs	r3, #0
  84 0012 0E93     		str	r3, [sp, #56]
 190:Src/main.c    ****   {
  85              		.loc 1 190 3 is_stmt 1 view .LVU15
 190:Src/main.c    ****   {
  86              		.loc 1 190 7 is_stmt 0 view .LVU16
  87 0014 05A8     		add	r0, sp, #20
  88 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
  89              	.LVL1:
 190:Src/main.c    ****   {
  90              		.loc 1 190 6 discriminator 1 view .LVU17
  91 001a 0028     		cmp	r0, #0
  92 001c 1ED1     		bne	.L6
 197:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s 			page 7


  93              		.loc 1 197 3 is_stmt 1 view .LVU18
 197:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1;
  94              		.loc 1 197 31 is_stmt 0 view .LVU19
  95 001e 0723     		movs	r3, #7
  96 0020 0193     		str	r3, [sp, #4]
 199:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  97              		.loc 1 199 3 is_stmt 1 view .LVU20
 199:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  98              		.loc 1 199 34 is_stmt 0 view .LVU21
  99 0022 0023     		movs	r3, #0
 100 0024 0293     		str	r3, [sp, #8]
 200:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 101              		.loc 1 200 3 is_stmt 1 view .LVU22
 200:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 102              		.loc 1 200 35 is_stmt 0 view .LVU23
 103 0026 0393     		str	r3, [sp, #12]
 201:Src/main.c    **** 
 104              		.loc 1 201 3 is_stmt 1 view .LVU24
 201:Src/main.c    **** 
 105              		.loc 1 201 36 is_stmt 0 view .LVU25
 106 0028 0493     		str	r3, [sp, #16]
 203:Src/main.c    ****   {
 107              		.loc 1 203 3 is_stmt 1 view .LVU26
 203:Src/main.c    ****   {
 108              		.loc 1 203 7 is_stmt 0 view .LVU27
 109 002a 0021     		movs	r1, #0
 110 002c 01A8     		add	r0, sp, #4
 111 002e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 112              	.LVL2:
 203:Src/main.c    ****   {
 113              		.loc 1 203 6 discriminator 1 view .LVU28
 114 0032 0028     		cmp	r0, #0
 115 0034 16D1     		bne	.L7
 210:Src/main.c    **** 
 116              		.loc 1 210 3 is_stmt 1 view .LVU29
 210:Src/main.c    **** 
 117              		.loc 1 210 22 is_stmt 0 view .LVU30
 118 0036 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 119              	.LVL3:
 210:Src/main.c    **** 
 120              		.loc 1 210 3 discriminator 1 view .LVU31
 121 003a FA21     		movs	r1, #250
 122 003c 8900     		lsls	r1, r1, #2
 123 003e FFF7FEFF 		bl	__aeabi_uidiv
 124              	.LVL4:
 125 0042 FFF7FEFF 		bl	HAL_SYSTICK_Config
 126              	.LVL5:
 214:Src/main.c    **** 
 127              		.loc 1 214 3 is_stmt 1 view .LVU32
 128 0046 0420     		movs	r0, #4
 129 0048 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 130              	.LVL6:
 217:Src/main.c    **** }
 131              		.loc 1 217 3 view .LVU33
 132 004c 0120     		movs	r0, #1
 133 004e 0022     		movs	r2, #0
 134 0050 0021     		movs	r1, #0
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s 			page 8


 135 0052 4042     		rsbs	r0, r0, #0
 136 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 137              	.LVL7:
 218:Src/main.c    **** 
 138              		.loc 1 218 1 is_stmt 0 view .LVU34
 139 0058 13B0     		add	sp, sp, #76
 140              		@ sp needed
 141 005a 00BD     		pop	{pc}
 142              	.L6:
 192:Src/main.c    ****   }
 143              		.loc 1 192 5 is_stmt 1 view .LVU35
 144 005c 0348     		ldr	r0, .L8
 145 005e C021     		movs	r1, #192
 146 0060 FFF7FEFF 		bl	_Error_Handler
 147              	.LVL8:
 148              	.L7:
 205:Src/main.c    ****   }
 149              		.loc 1 205 5 view .LVU36
 150 0064 0148     		ldr	r0, .L8
 151 0066 CD21     		movs	r1, #205
 152 0068 FFF7FEFF 		bl	_Error_Handler
 153              	.LVL9:
 154              	.L9:
 155              		.align	2
 156              	.L8:
 157 006c 00000000 		.word	.LC0
 158              		.cfi_endproc
 159              	.LFE41:
 161              		.section	.text.main,"ax",%progbits
 162              		.align	1
 163              		.global	main
 164              		.syntax unified
 165              		.code	16
 166              		.thumb_func
 168              	main:
 169              	.LFB40:
  72:Src/main.c    ****   SystemClock_Config();
 170              		.loc 1 72 1 view -0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 32
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174 0000 30B5     		push	{r4, r5, lr}
 175              	.LCFI2:
 176              		.cfi_def_cfa_offset 12
 177              		.cfi_offset 4, -12
 178              		.cfi_offset 5, -8
 179              		.cfi_offset 14, -4
 180 0002 89B0     		sub	sp, sp, #36
 181              	.LCFI3:
 182              		.cfi_def_cfa_offset 48
  73:Src/main.c    **** 
 183              		.loc 1 73 3 view .LVU38
 184 0004 FFF7FEFF 		bl	SystemClock_Config
 185              	.LVL10:
 130:Src/main.c    ****   GPIOA->MODER |= GPIO_MODER_MODER4;
 186              		.loc 1 130 3 view .LVU39
 130:Src/main.c    ****   GPIOA->MODER |= GPIO_MODER_MODER4;
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s 			page 9


 187              		.loc 1 130 6 is_stmt 0 view .LVU40
 188 0008 274A     		ldr	r2, .L14
 189 000a 5169     		ldr	r1, [r2, #20]
 130:Src/main.c    ****   GPIOA->MODER |= GPIO_MODER_MODER4;
 190              		.loc 1 130 15 view .LVU41
 191 000c 8023     		movs	r3, #128
 192 000e 9B02     		lsls	r3, r3, #10
 193 0010 0B43     		orrs	r3, r1
 194 0012 5361     		str	r3, [r2, #20]
 131:Src/main.c    **** 
 195              		.loc 1 131 3 is_stmt 1 view .LVU42
 131:Src/main.c    **** 
 196              		.loc 1 131 8 is_stmt 0 view .LVU43
 197 0014 9023     		movs	r3, #144
 198 0016 DB05     		lsls	r3, r3, #23
 199 0018 1868     		ldr	r0, [r3]
 131:Src/main.c    **** 
 200              		.loc 1 131 16 view .LVU44
 201 001a C021     		movs	r1, #192
 202 001c 8900     		lsls	r1, r1, #2
 203 001e 0143     		orrs	r1, r0
 204 0020 1960     		str	r1, [r3]
 135:Src/main.c    ****   GPIOA->MODER |= (1<<9);
 205              		.loc 1 135 3 is_stmt 1 view .LVU45
 135:Src/main.c    ****   GPIOA->MODER |= (1<<9);
 206              		.loc 1 135 8 is_stmt 0 view .LVU46
 207 0022 1868     		ldr	r0, [r3]
 135:Src/main.c    ****   GPIOA->MODER |= (1<<9);
 208              		.loc 1 135 16 view .LVU47
 209 0024 8021     		movs	r1, #128
 210 0026 4900     		lsls	r1, r1, #1
 211 0028 0143     		orrs	r1, r0
 212 002a 1960     		str	r1, [r3]
 136:Src/main.c    **** 
 213              		.loc 1 136 3 is_stmt 1 view .LVU48
 136:Src/main.c    **** 
 214              		.loc 1 136 8 is_stmt 0 view .LVU49
 215 002c 1868     		ldr	r0, [r3]
 136:Src/main.c    **** 
 216              		.loc 1 136 16 view .LVU50
 217 002e 8021     		movs	r1, #128
 218 0030 8900     		lsls	r1, r1, #2
 219 0032 0143     		orrs	r1, r0
 220 0034 1960     		str	r1, [r3]
 138:Src/main.c    ****   GPIOA->PUPDR &= ~(1<<9);
 221              		.loc 1 138 3 is_stmt 1 view .LVU51
 138:Src/main.c    ****   GPIOA->PUPDR &= ~(1<<9);
 222              		.loc 1 138 8 is_stmt 0 view .LVU52
 223 0036 D968     		ldr	r1, [r3, #12]
 138:Src/main.c    ****   GPIOA->PUPDR &= ~(1<<9);
 224              		.loc 1 138 17 view .LVU53
 225 0038 1C48     		ldr	r0, .L14+4
 226 003a 0140     		ands	r1, r0
 227 003c D960     		str	r1, [r3, #12]
 139:Src/main.c    **** 
 228              		.loc 1 139 3 is_stmt 1 view .LVU54
 139:Src/main.c    **** 
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s 			page 10


 229              		.loc 1 139 8 is_stmt 0 view .LVU55
 230 003e D968     		ldr	r1, [r3, #12]
 139:Src/main.c    **** 
 231              		.loc 1 139 16 view .LVU56
 232 0040 1B48     		ldr	r0, .L14+8
 233 0042 0140     		ands	r1, r0
 234 0044 D960     		str	r1, [r3, #12]
 142:Src/main.c    ****   // DAC->CR |= DAC_CR_EN1;
 235              		.loc 1 142 3 is_stmt 1 view .LVU57
 142:Src/main.c    ****   // DAC->CR |= DAC_CR_EN1;
 236              		.loc 1 142 6 is_stmt 0 view .LVU58
 237 0046 D169     		ldr	r1, [r2, #28]
 142:Src/main.c    ****   // DAC->CR |= DAC_CR_EN1;
 238              		.loc 1 142 16 view .LVU59
 239 0048 8023     		movs	r3, #128
 240 004a 9B05     		lsls	r3, r3, #22
 241 004c 0B43     		orrs	r3, r1
 242 004e D361     		str	r3, [r2, #28]
 144:Src/main.c    **** 
 243              		.loc 1 144 3 is_stmt 1 view .LVU60
 144:Src/main.c    **** 
 244              		.loc 1 144 6 is_stmt 0 view .LVU61
 245 0050 184B     		ldr	r3, .L14+12
 246 0052 1A68     		ldr	r2, [r3]
 144:Src/main.c    **** 
 247              		.loc 1 144 11 view .LVU62
 248 0054 0121     		movs	r1, #1
 249 0056 0A43     		orrs	r2, r1
 250 0058 1A60     		str	r2, [r3]
 149:Src/main.c    ****   DAC->CR |= (1<<4);
 251              		.loc 1 149 3 is_stmt 1 view .LVU63
 149:Src/main.c    ****   DAC->CR |= (1<<4);
 252              		.loc 1 149 6 is_stmt 0 view .LVU64
 253 005a 1A68     		ldr	r2, [r3]
 149:Src/main.c    ****   DAC->CR |= (1<<4);
 254              		.loc 1 149 11 view .LVU65
 255 005c 0731     		adds	r1, r1, #7
 256 005e 0A43     		orrs	r2, r1
 257 0060 1A60     		str	r2, [r3]
 150:Src/main.c    ****   DAC->CR |= (1<<5);
 258              		.loc 1 150 3 is_stmt 1 view .LVU66
 150:Src/main.c    ****   DAC->CR |= (1<<5);
 259              		.loc 1 150 6 is_stmt 0 view .LVU67
 260 0062 1A68     		ldr	r2, [r3]
 150:Src/main.c    ****   DAC->CR |= (1<<5);
 261              		.loc 1 150 11 view .LVU68
 262 0064 0831     		adds	r1, r1, #8
 263 0066 0A43     		orrs	r2, r1
 264 0068 1A60     		str	r2, [r3]
 151:Src/main.c    **** 
 265              		.loc 1 151 3 is_stmt 1 view .LVU69
 151:Src/main.c    **** 
 266              		.loc 1 151 6 is_stmt 0 view .LVU70
 267 006a 1A68     		ldr	r2, [r3]
 151:Src/main.c    **** 
 268              		.loc 1 151 11 view .LVU71
 269 006c 1031     		adds	r1, r1, #16
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s 			page 11


 270 006e 0A43     		orrs	r2, r1
 271 0070 1A60     		str	r2, [r3]
 154:Src/main.c    ****   232,216,197,175,151,127,102,78,56,37,21,9,2,0,2,9,21,37,56,78,102};
 272              		.loc 1 154 3 is_stmt 1 view .LVU72
 154:Src/main.c    ****   232,216,197,175,151,127,102,78,56,37,21,9,2,0,2,9,21,37,56,78,102};
 273              		.loc 1 154 17 is_stmt 0 view .LVU73
 274 0072 6946     		mov	r1, sp
 275 0074 104A     		ldr	r2, .L14+16
 276 0076 1300     		movs	r3, r2
 277 0078 31CB     		ldmia	r3!, {r0, r4, r5}
 278 007a 31C1     		stmia	r1!, {r0, r4, r5}
 279 007c 1A00     		movs	r2, r3
 280 007e 0B00     		movs	r3, r1
 281 0080 13CA     		ldmia	r2!, {r0, r1, r4}
 282 0082 13C3     		stmia	r3!, {r0, r1, r4}
 283 0084 03CA     		ldmia	r2!, {r0, r1}
 284 0086 03C3     		stmia	r3!, {r0, r1}
 157:Src/main.c    **** 
 285              		.loc 1 157 3 is_stmt 1 view .LVU74
 286              	.LVL11:
 157:Src/main.c    **** 
 287              		.loc 1 157 11 is_stmt 0 view .LVU75
 288 0088 0024     		movs	r4, #0
 289 008a 02E0     		b	.L12
 290              	.LVL12:
 291              	.L11:
 171:Src/main.c    ****   }
 292              		.loc 1 171 5 is_stmt 1 view .LVU76
 293 008c 0120     		movs	r0, #1
 294 008e FFF7FEFF 		bl	HAL_Delay
 295              	.LVL13:
 159:Src/main.c    ****     // Write the next value from the wave-table to DAC channel 1 data register
 296              		.loc 1 159 9 view .LVU77
 297              	.L12:
 159:Src/main.c    ****     // Write the next value from the wave-table to DAC channel 1 data register
 298              		.loc 1 159 3 view .LVU78
 161:Src/main.c    **** 
 299              		.loc 1 161 5 view .LVU79
 161:Src/main.c    **** 
 300              		.loc 1 161 28 is_stmt 0 view .LVU80
 301 0092 6B46     		mov	r3, sp
 302 0094 1A5D     		ldrb	r2, [r3, r4]
 161:Src/main.c    **** 
 303              		.loc 1 161 17 view .LVU81
 304 0096 074B     		ldr	r3, .L14+12
 305 0098 1A61     		str	r2, [r3, #16]
 164:Src/main.c    ****     if(index == 32)
 306              		.loc 1 164 5 is_stmt 1 view .LVU82
 164:Src/main.c    ****     if(index == 32)
 307              		.loc 1 164 11 is_stmt 0 view .LVU83
 308 009a 0134     		adds	r4, r4, #1
 309              	.LVL14:
 164:Src/main.c    ****     if(index == 32)
 310              		.loc 1 164 11 view .LVU84
 311 009c E4B2     		uxtb	r4, r4
 312              	.LVL15:
 165:Src/main.c    ****     {
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s 			page 12


 313              		.loc 1 165 5 is_stmt 1 view .LVU85
 165:Src/main.c    ****     {
 314              		.loc 1 165 7 is_stmt 0 view .LVU86
 315 009e 202C     		cmp	r4, #32
 316 00a0 F4D1     		bne	.L11
 167:Src/main.c    ****     }
 317              		.loc 1 167 13 view .LVU87
 318 00a2 0024     		movs	r4, #0
 319              	.LVL16:
 167:Src/main.c    ****     }
 320              		.loc 1 167 13 view .LVU88
 321 00a4 F2E7     		b	.L11
 322              	.L15:
 323 00a6 C046     		.align	2
 324              	.L14:
 325 00a8 00100240 		.word	1073876992
 326 00ac FFFEFFFF 		.word	-257
 327 00b0 FFFDFFFF 		.word	-513
 328 00b4 00740040 		.word	1073771520
 329 00b8 00000000 		.word	.LANCHOR0
 330              		.cfi_endproc
 331              	.LFE40:
 333              		.section	.rodata
 334              		.align	2
 335              		.set	.LANCHOR0,. + 0
 336              	.LC2:
 337 0000 7F97AFC5 		.ascii	"\177\227\257\305\330\350\364\373\376\373\364\350\330"
 337      D8E8F4FB 
 337      FEFBF4E8 
 337      D8
 338 000d C5AF977F 		.ascii	"\305\257\227\177fN8%\025\011\002\000\002\011\025%8N"
 338      664E3825 
 338      15090200 
 338      02091525 
 338      384E
 339 001f 66       		.ascii	"f"
 340              		.text
 341              	.Letext0:
 342              		.file 2 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f072xb.h"
 343              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 344              		.file 4 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 345              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 346              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 347              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
 348              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s:19     .text._Error_Handler:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s:25     .text._Error_Handler:00000000 _Error_Handler
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s:43     .rodata.SystemClock_Config.str1.4:00000000 $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s:48     .text.SystemClock_Config:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s:54     .text.SystemClock_Config:00000000 SystemClock_Config
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s:157    .text.SystemClock_Config:0000006c $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s:162    .text.main:00000000 $t
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s:168    .text.main:00000000 main
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s:325    .text.main:000000a8 $d
/var/folders/6c/3h55x08d77sbyb3x0d6g70wr0000gn/T//ccEwn58n.s:334    .rodata:00000000 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Delay
